package info.leonenko.i18n.rbnf

import kotlin.test.Test
import kotlin.test.assertEquals

class RBNFHuTest {
    @Test
    fun spelloutOrdinalVerbose() {
        val fmt = RBNFHu().spelloutOrdinalVerbose
// nonsense assertEquals("mínusz első", fmt.format(-1), "-1")
// nonsense assertEquals("nulladik", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
        assertEquals("első", fmt.format(1), "1")
        assertEquals("második", fmt.format(2), "2")
        assertEquals("harmadik", fmt.format(3), "3")
        assertEquals("negyedik", fmt.format(4), "4")
        assertEquals("ötödik", fmt.format(5), "5")
        assertEquals("hatodik", fmt.format(6), "6")
        assertEquals("hetedik", fmt.format(7), "7")
        assertEquals("nyolcadik", fmt.format(8), "8")
        assertEquals("kilencedik", fmt.format(9), "9")
        assertEquals("tizedik", fmt.format(10), "10")
        assertEquals("tizenegyedik", fmt.format(11), "11")
        assertEquals("tizenkettedik", fmt.format(12), "12")
        assertEquals("tizenharmadik", fmt.format(13), "13")
        assertEquals("tizennegyedik", fmt.format(14), "14")
        assertEquals("tizenötödik", fmt.format(15), "15")
        assertEquals("tizenhatodik", fmt.format(16), "16")
        assertEquals("tizenhetedik", fmt.format(17), "17")
        assertEquals("tizennyolcadik", fmt.format(18), "18")
        assertEquals("tizenkilencedik", fmt.format(19), "19")
        assertEquals("huszadik", fmt.format(20), "20")
        assertEquals("huszonegyedik", fmt.format(21), "21")
        assertEquals("huszonkettedik", fmt.format(22), "22")
        assertEquals("huszonharmadik", fmt.format(23), "23")
        assertEquals("huszonnegyedik", fmt.format(24), "24")
        assertEquals("huszonötödik", fmt.format(25), "25")
        assertEquals("huszonhatodik", fmt.format(26), "26")
        assertEquals("huszonhetedik", fmt.format(27), "27")
        assertEquals("huszonnyolcadik", fmt.format(28), "28")
        assertEquals("huszonkilencedik", fmt.format(29), "29")
        assertEquals("harmincadik", fmt.format(30), "30")
        assertEquals("harmincegyedik", fmt.format(31), "31")
        assertEquals("kilencvennyolcadik", fmt.format(98), "98")
        assertEquals("kilencvenkilencedik", fmt.format(99), "99")
        assertEquals("egyszázadik", fmt.format(100), "100")
        assertEquals("egyszázegyedik", fmt.format(101), "101")
        assertEquals("egyszázkettedik", fmt.format(102), "102")
        assertEquals("kilencszázkilencvennyolcadik", fmt.format(998), "998")
        assertEquals("kilencszázkilencvenkilencedik", fmt.format(999), "999")
        assertEquals("egy­ezredik", fmt.format(1000), "1000")
        assertEquals("egy­ezer­egyedik", fmt.format(1001), "1001")
        assertEquals("egy­ezer­kettedik", fmt.format(1002), "1002")
        assertEquals("egy­ezer­kilencszázkilencvennyolcadik", fmt.format(1998), "1998")
        assertEquals("egy­ezer­kilencszázkilencvenkilencedik", fmt.format(1999), "1999")
        assertEquals("kettő­ezredik", fmt.format(2000), "2000")
        assertEquals("kettő­ezer­egyedik", fmt.format(2001), "2001")
        assertEquals("kettő­ezer­kettedik", fmt.format(2002), "2002")
        assertEquals("kilenc­ezer­kilencszázkilencvennyolcadik", fmt.format(9998), "9998")
        assertEquals("kilenc­ezer­kilencszázkilencvenkilencedik", fmt.format(9999), "9999")
        assertEquals("tíz­ezredik", fmt.format(10000), "10000")
        assertEquals("tíz­ezer­egyedik", fmt.format(10001), "10001")
        assertEquals("tíz­ezer­kettedik", fmt.format(10002), "10002")
        assertEquals("egy­száz­ezredik", fmt.format(100000), "100000")
        assertEquals("egy­száz­ezer­egyedik", fmt.format(100001), "100001")
        assertEquals("egy­száz­ezer­kettedik", fmt.format(100002), "100002")
        assertEquals("kettő­száz­ezredik", fmt.format(200000), "200000")
        assertEquals("kettő­száz­ezer­egyedik", fmt.format(200001), "200001")
        assertEquals("kettő­száz­ezer­kettedik", fmt.format(200002), "200002")
        assertEquals("egy­milliom­odik", fmt.format(1000000), "1000000")
        assertEquals("egy­milliom­egyedik", fmt.format(1000001), "1000001")
        assertEquals("egy­milliom­kettedik", fmt.format(1000002), "1000002")
        assertEquals("kettő­milliom­odik", fmt.format(2000000), "2000000")
        assertEquals("kettő­milliom­egyedik", fmt.format(2000001), "2000001")
        assertEquals("kettő­milliom­kettedik", fmt.format(2000002), "2000002")
        assertEquals("tíz­milliom­odik", fmt.format(10000000), "10000000")
        assertEquals("tíz­milliom­egyedik", fmt.format(10000001), "10000001")
        assertEquals("tíz­milliom­kettedik", fmt.format(10000002), "10000002")
        assertEquals("húsz­milliom­odik", fmt.format(20000000), "20000000")
        assertEquals("húsz­milliom­egyedik", fmt.format(20000001), "20000001")
        assertEquals("húsz­milliom­kettedik", fmt.format(20000002), "20000002")
        assertEquals("egy­száz­milliom­odik", fmt.format(100000000), "100000000")
        assertEquals("egy­száz­milliom­egyedik", fmt.format(100000001), "100000001")
        assertEquals("egy­száz­milliom­kettedik", fmt.format(100000002), "100000002")
        assertEquals("kettő­száz­milliom­odik", fmt.format(200000000), "200000000")
        assertEquals("kettő­száz­milliom­egyedik", fmt.format(200000001), "200000001")
        assertEquals("kettő­száz­milliom­kettedik", fmt.format(200000002), "200000002")
        assertEquals("1 000 000 000.", fmt.format(1000000000), "1000000000")
        assertEquals("1 000 000 001.", fmt.format(1000000001), "1000000001")
        assertEquals("1 000 000 002.", fmt.format(1000000002), "1000000002")
        assertEquals("2 000 000 000.", fmt.format(2000000000), "2000000000")
        assertEquals("2 000 000 001.", fmt.format(2000000001), "2000000001")
        assertEquals("2 000 000 002.", fmt.format(2000000002), "2000000002")
    }

    @Test
    fun spelloutOrdinal() {
        val fmt = RBNFHu().spelloutOrdinal
// nonsense assertEquals("mínusz első", fmt.format(-1), "-1")
// nonsense assertEquals("nulla", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
        assertEquals("első", fmt.format(1), "1")
        assertEquals("második", fmt.format(2), "2")
        assertEquals("harmadik", fmt.format(3), "3")
        assertEquals("negyedik", fmt.format(4), "4")
        assertEquals("ötödik", fmt.format(5), "5")
        assertEquals("hatodik", fmt.format(6), "6")
        assertEquals("hetedik", fmt.format(7), "7")
        assertEquals("nyolcadik", fmt.format(8), "8")
        assertEquals("kilencedik", fmt.format(9), "9")
        assertEquals("tizedik", fmt.format(10), "10")
        assertEquals("tizenegyedik", fmt.format(11), "11")
        assertEquals("tizenkettedik", fmt.format(12), "12")
        assertEquals("tizenharmadik", fmt.format(13), "13")
        assertEquals("tizennegyedik", fmt.format(14), "14")
        assertEquals("tizenötödik", fmt.format(15), "15")
        assertEquals("tizenhatodik", fmt.format(16), "16")
        assertEquals("tizenhetedik", fmt.format(17), "17")
        assertEquals("tizennyolcadik", fmt.format(18), "18")
        assertEquals("tizenkilencedik", fmt.format(19), "19")
        assertEquals("huszadik", fmt.format(20), "20")
        assertEquals("huszonegyedik", fmt.format(21), "21")
        assertEquals("huszonkettedik", fmt.format(22), "22")
        assertEquals("huszonharmadik", fmt.format(23), "23")
        assertEquals("huszonnegyedik", fmt.format(24), "24")
        assertEquals("huszonötödik", fmt.format(25), "25")
        assertEquals("huszonhatodik", fmt.format(26), "26")
        assertEquals("huszonhetedik", fmt.format(27), "27")
        assertEquals("huszonnyolcadik", fmt.format(28), "28")
        assertEquals("huszonkilencedik", fmt.format(29), "29")
        assertEquals("harmincadik", fmt.format(30), "30")
        assertEquals("harmincegyedik", fmt.format(31), "31")
        assertEquals("kilencvennyolcadik", fmt.format(98), "98")
        assertEquals("kilencvenkilencedik", fmt.format(99), "99")
        assertEquals("századik", fmt.format(100), "100")
        assertEquals("százegyedik", fmt.format(101), "101")
        assertEquals("százkettedik", fmt.format(102), "102")
        assertEquals("kilencszázkilencvennyolcadik", fmt.format(998), "998")
        assertEquals("kilencszázkilencvenkilencedik", fmt.format(999), "999")
        assertEquals("ezredik", fmt.format(1000), "1000")
        assertEquals("ezer­egyedik", fmt.format(1001), "1001")
        assertEquals("ezer­kettedik", fmt.format(1002), "1002")
        assertEquals("ezer­kilencszázkilencvennyolcadik", fmt.format(1998), "1998")
        assertEquals("ezer­kilencszázkilencvenkilencedik", fmt.format(1999), "1999")
        assertEquals("két­ezredik", fmt.format(2000), "2000")
        assertEquals("két­ezer­egyedik", fmt.format(2001), "2001")
        assertEquals("két­ezer­kettedik", fmt.format(2002), "2002")
        assertEquals("kilenc­ezer­kilencszázkilencvennyolcadik", fmt.format(9998), "9998")
        assertEquals("kilenc­ezer­kilencszázkilencvenkilencedik", fmt.format(9999), "9999")
        assertEquals("tíz­ezredik", fmt.format(10000), "10000")
        assertEquals("tíz­ezer­egyedik", fmt.format(10001), "10001")
        assertEquals("tíz­ezer­kettedik", fmt.format(10002), "10002")
        assertEquals("száz­ezredik", fmt.format(100000), "100000")
        assertEquals("száz­ezer­egyedik", fmt.format(100001), "100001")
        assertEquals("száz­ezer­kettedik", fmt.format(100002), "100002")
        assertEquals("két­száz­ezredik", fmt.format(200000), "200000")
        assertEquals("két­száz­ezer­egyedik", fmt.format(200001), "200001")
        assertEquals("két­száz­ezer­kettedik", fmt.format(200002), "200002")
        assertEquals("egy­milliom­odik", fmt.format(1000000), "1000000")
        assertEquals("egy­milliom­egyedik", fmt.format(1000001), "1000001")
        assertEquals("egy­milliom­kettedik", fmt.format(1000002), "1000002")
        assertEquals("két­milliom­odik", fmt.format(2000000), "2000000")
        assertEquals("két­milliom­egyedik", fmt.format(2000001), "2000001")
        assertEquals("két­milliom­kettedik", fmt.format(2000002), "2000002")
        assertEquals("tíz­milliom­odik", fmt.format(10000000), "10000000")
        assertEquals("tíz­milliom­egyedik", fmt.format(10000001), "10000001")
        assertEquals("tíz­milliom­kettedik", fmt.format(10000002), "10000002")
        assertEquals("húsz­milliom­odik", fmt.format(20000000), "20000000")
        assertEquals("húsz­milliom­egyedik", fmt.format(20000001), "20000001")
        assertEquals("húsz­milliom­kettedik", fmt.format(20000002), "20000002")
        assertEquals("száz­milliom­odik", fmt.format(100000000), "100000000")
        assertEquals("száz­milliom­egyedik", fmt.format(100000001), "100000001")
        assertEquals("száz­milliom­kettedik", fmt.format(100000002), "100000002")
        assertEquals("két­száz­milliom­odik", fmt.format(200000000), "200000000")
        assertEquals("két­száz­milliom­egyedik", fmt.format(200000001), "200000001")
        assertEquals("két­száz­milliom­kettedik", fmt.format(200000002), "200000002")
        assertEquals("1 000 000 000.", fmt.format(1000000000), "1000000000")
        assertEquals("1 000 000 001.", fmt.format(1000000001), "1000000001")
        assertEquals("1 000 000 002.", fmt.format(1000000002), "1000000002")
        assertEquals("2 000 000 000.", fmt.format(2000000000), "2000000000")
        assertEquals("2 000 000 001.", fmt.format(2000000001), "2000000001")
        assertEquals("2 000 000 002.", fmt.format(2000000002), "2000000002")
    }

    @Test
    fun spelloutCardinalVerbose() {
        val fmt = RBNFHu().spelloutCardinalVerbose
        assertEquals("mínusz egy", fmt.format(-1), "-1")
        assertEquals("nulla", fmt.format(0), "0")
        assertEquals("nulla egész kettő", fmt.format(0.2), "0.2")
        assertEquals("nulla egész kettő három négy öt", fmt.format(0.2345), "0.2345")
        assertEquals("nulla egész nulla kettő", fmt.format(0.02), "0.02")
        assertEquals("nulla egész nulla kettő egy három", fmt.format(0.0213), "0.0213")
        assertEquals("négy egész hét öt egy", fmt.format(4.751), "4.751")
        assertEquals("tizen­kettő egész nulla öt egy", fmt.format(12.051), "12.051")
        assertEquals("tizen­három egész nulla kettő öt egy", fmt.format(13.0251), "13.0251")
        assertEquals("tizen­négy egész nulla kettő kettő öt egy", fmt.format(14.02251), "14.02251")
        assertEquals("egy", fmt.format(1), "1")
        assertEquals("kettő", fmt.format(2), "2")
        assertEquals("három", fmt.format(3), "3")
        assertEquals("négy", fmt.format(4), "4")
        assertEquals("öt", fmt.format(5), "5")
        assertEquals("hat", fmt.format(6), "6")
        assertEquals("hét", fmt.format(7), "7")
        assertEquals("nyolc", fmt.format(8), "8")
        assertEquals("kilenc", fmt.format(9), "9")
        assertEquals("tíz", fmt.format(10), "10")
        assertEquals("tizen­egy", fmt.format(11), "11")
        assertEquals("tizen­kettő", fmt.format(12), "12")
        assertEquals("tizen­három", fmt.format(13), "13")
        assertEquals("tizen­négy", fmt.format(14), "14")
        assertEquals("tizen­öt", fmt.format(15), "15")
        assertEquals("tizen­hat", fmt.format(16), "16")
        assertEquals("tizen­hét", fmt.format(17), "17")
        assertEquals("tizen­nyolc", fmt.format(18), "18")
        assertEquals("tizen­kilenc", fmt.format(19), "19")
        assertEquals("húsz", fmt.format(20), "20")
        assertEquals("huszon­egy", fmt.format(21), "21")
        assertEquals("huszon­kettő", fmt.format(22), "22")
        assertEquals("huszon­három", fmt.format(23), "23")
        assertEquals("huszon­négy", fmt.format(24), "24")
        assertEquals("huszon­öt", fmt.format(25), "25")
        assertEquals("huszon­hat", fmt.format(26), "26")
        assertEquals("huszon­hét", fmt.format(27), "27")
        assertEquals("huszon­nyolc", fmt.format(28), "28")
        assertEquals("huszon­kilenc", fmt.format(29), "29")
        assertEquals("harminc", fmt.format(30), "30")
        assertEquals("harminc­egy", fmt.format(31), "31")
        assertEquals("kilencven­nyolc", fmt.format(98), "98")
        assertEquals("kilencven­kilenc", fmt.format(99), "99")
        assertEquals("egy­száz", fmt.format(100), "100")
        assertEquals("egy­száz­egy", fmt.format(101), "101")
        assertEquals("egy­száz­kettő", fmt.format(102), "102")
        assertEquals("kilenc­száz­kilencven­nyolc", fmt.format(998), "998")
        assertEquals("kilenc­száz­kilencven­kilenc", fmt.format(999), "999")
        assertEquals("egy­ezer", fmt.format(1000), "1000")
        assertEquals("egy­ezer­egy", fmt.format(1001), "1001")
        assertEquals("egy­ezer­kettő", fmt.format(1002), "1002")
        assertEquals("egy­ezer­kilenc­száz­kilencven­nyolc", fmt.format(1998), "1998")
        assertEquals("egy­ezer­kilenc­száz­kilencven­kilenc", fmt.format(1999), "1999")
        assertEquals("kettő­ezer", fmt.format(2000), "2000")
        assertEquals("kettő­ezer­egy", fmt.format(2001), "2001")
        assertEquals("kettő­ezer­kettő", fmt.format(2002), "2002")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­nyolc", fmt.format(9998), "9998")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­kilenc", fmt.format(9999), "9999")
        assertEquals("tíz­ezer", fmt.format(10000), "10000")
        assertEquals("tíz­ezer­egy", fmt.format(10001), "10001")
        assertEquals("tíz­ezer­kettő", fmt.format(10002), "10002")
        assertEquals("egy­száz­ezer", fmt.format(100000), "100000")
        assertEquals("egy­száz­ezer­egy", fmt.format(100001), "100001")
        assertEquals("egy­száz­ezer­kettő", fmt.format(100002), "100002")
        assertEquals("kettő­száz­ezer", fmt.format(200000), "200000")
        assertEquals("kettő­száz­ezer­egy", fmt.format(200001), "200001")
        assertEquals("kettő­száz­ezer­kettő", fmt.format(200002), "200002")
        assertEquals("egy­millió", fmt.format(1000000), "1000000")
        assertEquals("egy­millió­egy", fmt.format(1000001), "1000001")
        assertEquals("egy­millió­kettő", fmt.format(1000002), "1000002")
        assertEquals("kettő­millió", fmt.format(2000000), "2000000")
        assertEquals("kettő­millió­egy", fmt.format(2000001), "2000001")
        assertEquals("kettő­millió­kettő", fmt.format(2000002), "2000002")
        assertEquals("tíz­millió", fmt.format(10000000), "10000000")
        assertEquals("tíz­millió­egy", fmt.format(10000001), "10000001")
        assertEquals("tíz­millió­kettő", fmt.format(10000002), "10000002")
        assertEquals("húsz­millió", fmt.format(20000000), "20000000")
        assertEquals("húsz­millió­egy", fmt.format(20000001), "20000001")
        assertEquals("húsz­millió­kettő", fmt.format(20000002), "20000002")
        assertEquals("egy­száz­millió", fmt.format(100000000), "100000000")
        assertEquals("egy­száz­millió­egy", fmt.format(100000001), "100000001")
        assertEquals("egy­száz­millió­kettő", fmt.format(100000002), "100000002")
        assertEquals("kettő­száz­millió", fmt.format(200000000), "200000000")
        assertEquals("kettő­száz­millió­egy", fmt.format(200000001), "200000001")
        assertEquals("kettő­száz­millió­kettő", fmt.format(200000002), "200000002")
        assertEquals("egy­milliárd", fmt.format(1000000000), "1000000000")
        assertEquals("egy­milliárd­egy", fmt.format(1000000001), "1000000001")
        assertEquals("egy­milliárd­kettő", fmt.format(1000000002), "1000000002")
        assertEquals("kettő­milliárd", fmt.format(2000000000), "2000000000")
        assertEquals("kettő­milliárd­egy", fmt.format(2000000001), "2000000001")
        assertEquals("kettő­milliárd­kettő", fmt.format(2000000002), "2000000002")
    }

    @Test
    fun spelloutCardinal() {
        val fmt = RBNFHu().spelloutCardinal
        assertEquals("mínusz egy", fmt.format(-1), "-1")
        assertEquals("nulla", fmt.format(0), "0")
        assertEquals("nulla egész kettő", fmt.format(0.2), "0.2")
        assertEquals("nulla egész kettő három négy öt", fmt.format(0.2345), "0.2345")
        assertEquals("nulla egész nulla kettő", fmt.format(0.02), "0.02")
        assertEquals("nulla egész nulla kettő egy három", fmt.format(0.0213), "0.0213")
        assertEquals("négy egész hét öt egy", fmt.format(4.751), "4.751")
        assertEquals("tizen­kettő egész nulla öt egy", fmt.format(12.051), "12.051")
        assertEquals("tizen­három egész nulla kettő öt egy", fmt.format(13.0251), "13.0251")
        assertEquals("tizen­négy egész nulla kettő kettő öt egy", fmt.format(14.02251), "14.02251")
        assertEquals("egy", fmt.format(1), "1")
        assertEquals("kettő", fmt.format(2), "2")
        assertEquals("három", fmt.format(3), "3")
        assertEquals("négy", fmt.format(4), "4")
        assertEquals("öt", fmt.format(5), "5")
        assertEquals("hat", fmt.format(6), "6")
        assertEquals("hét", fmt.format(7), "7")
        assertEquals("nyolc", fmt.format(8), "8")
        assertEquals("kilenc", fmt.format(9), "9")
        assertEquals("tíz", fmt.format(10), "10")
        assertEquals("tizen­egy", fmt.format(11), "11")
        assertEquals("tizen­kettő", fmt.format(12), "12")
        assertEquals("tizen­három", fmt.format(13), "13")
        assertEquals("tizen­négy", fmt.format(14), "14")
        assertEquals("tizen­öt", fmt.format(15), "15")
        assertEquals("tizen­hat", fmt.format(16), "16")
        assertEquals("tizen­hét", fmt.format(17), "17")
        assertEquals("tizen­nyolc", fmt.format(18), "18")
        assertEquals("tizen­kilenc", fmt.format(19), "19")
        assertEquals("húsz", fmt.format(20), "20")
        assertEquals("huszon­egy", fmt.format(21), "21")
        assertEquals("huszon­kettő", fmt.format(22), "22")
        assertEquals("huszon­három", fmt.format(23), "23")
        assertEquals("huszon­négy", fmt.format(24), "24")
        assertEquals("huszon­öt", fmt.format(25), "25")
        assertEquals("huszon­hat", fmt.format(26), "26")
        assertEquals("huszon­hét", fmt.format(27), "27")
        assertEquals("huszon­nyolc", fmt.format(28), "28")
        assertEquals("huszon­kilenc", fmt.format(29), "29")
        assertEquals("harminc", fmt.format(30), "30")
        assertEquals("harminc­egy", fmt.format(31), "31")
        assertEquals("kilencven­nyolc", fmt.format(98), "98")
        assertEquals("kilencven­kilenc", fmt.format(99), "99")
        assertEquals("száz", fmt.format(100), "100")
        assertEquals("száz­egy", fmt.format(101), "101")
        assertEquals("száz­kettő", fmt.format(102), "102")
        assertEquals("kilenc­száz­kilencven­nyolc", fmt.format(998), "998")
        assertEquals("kilenc­száz­kilencven­kilenc", fmt.format(999), "999")
        assertEquals("ezer", fmt.format(1000), "1000")
        assertEquals("ezer­egy", fmt.format(1001), "1001")
        assertEquals("ezer­kettő", fmt.format(1002), "1002")
        assertEquals("ezer­kilenc­száz­kilencven­nyolc", fmt.format(1998), "1998")
        assertEquals("ezer­kilenc­száz­kilencven­kilenc", fmt.format(1999), "1999")
        assertEquals("két­ezer", fmt.format(2000), "2000")
        assertEquals("két­ezer­egy", fmt.format(2001), "2001")
        assertEquals("két­ezer­kettő", fmt.format(2002), "2002")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­nyolc", fmt.format(9998), "9998")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­kilenc", fmt.format(9999), "9999")
        assertEquals("tíz­ezer", fmt.format(10000), "10000")
        assertEquals("tíz­ezer­egy", fmt.format(10001), "10001")
        assertEquals("tíz­ezer­kettő", fmt.format(10002), "10002")
        assertEquals("száz­ezer", fmt.format(100000), "100000")
        assertEquals("száz­ezer­egy", fmt.format(100001), "100001")
        assertEquals("száz­ezer­kettő", fmt.format(100002), "100002")
        assertEquals("két­száz­ezer", fmt.format(200000), "200000")
        assertEquals("két­száz­ezer­egy", fmt.format(200001), "200001")
        assertEquals("két­száz­ezer­kettő", fmt.format(200002), "200002")
        assertEquals("egy­millió", fmt.format(1000000), "1000000")
        assertEquals("egy­millió­egy", fmt.format(1000001), "1000001")
        assertEquals("egy­millió­kettő", fmt.format(1000002), "1000002")
        assertEquals("két­millió", fmt.format(2000000), "2000000")
        assertEquals("két­millió­egy", fmt.format(2000001), "2000001")
        assertEquals("két­millió­kettő", fmt.format(2000002), "2000002")
        assertEquals("tíz­millió", fmt.format(10000000), "10000000")
        assertEquals("tíz­millió­egy", fmt.format(10000001), "10000001")
        assertEquals("tíz­millió­kettő", fmt.format(10000002), "10000002")
        assertEquals("húsz­millió", fmt.format(20000000), "20000000")
        assertEquals("húsz­millió­egy", fmt.format(20000001), "20000001")
        assertEquals("húsz­millió­kettő", fmt.format(20000002), "20000002")
        assertEquals("száz­millió", fmt.format(100000000), "100000000")
        assertEquals("száz­millió­egy", fmt.format(100000001), "100000001")
        assertEquals("száz­millió­kettő", fmt.format(100000002), "100000002")
        assertEquals("két­száz­millió", fmt.format(200000000), "200000000")
        assertEquals("két­száz­millió­egy", fmt.format(200000001), "200000001")
        assertEquals("két­száz­millió­kettő", fmt.format(200000002), "200000002")
        assertEquals("egy­milliárd", fmt.format(1000000000), "1000000000")
        assertEquals("egy­milliárd­egy", fmt.format(1000000001), "1000000001")
        assertEquals("egy­milliárd­kettő", fmt.format(1000000002), "1000000002")
        assertEquals("két­milliárd", fmt.format(2000000000), "2000000000")
        assertEquals("két­milliárd­egy", fmt.format(2000000001), "2000000001")
        assertEquals("két­milliárd­kettő", fmt.format(2000000002), "2000000002")
    }

    @Test
    fun spelloutNumbering() {
        val fmt = RBNFHu().spelloutNumbering
        assertEquals("mínusz egy", fmt.format(-1), "-1")
        assertEquals("nulla", fmt.format(0), "0")
        assertEquals("nulla egész kettő", fmt.format(0.2), "0.2")
        assertEquals("nulla egész kettő három négy öt", fmt.format(0.2345), "0.2345")
        assertEquals("nulla egész nulla kettő", fmt.format(0.02), "0.02")
        assertEquals("nulla egész nulla kettő egy három", fmt.format(0.0213), "0.0213")
        assertEquals("négy egész hét öt egy", fmt.format(4.751), "4.751")
        assertEquals("tizen­kettő egész nulla öt egy", fmt.format(12.051), "12.051")
        assertEquals("tizen­három egész nulla kettő öt egy", fmt.format(13.0251), "13.0251")
        assertEquals("tizen­négy egész nulla kettő kettő öt egy", fmt.format(14.02251), "14.02251")
        assertEquals("egy", fmt.format(1), "1")
        assertEquals("kettő", fmt.format(2), "2")
        assertEquals("három", fmt.format(3), "3")
        assertEquals("négy", fmt.format(4), "4")
        assertEquals("öt", fmt.format(5), "5")
        assertEquals("hat", fmt.format(6), "6")
        assertEquals("hét", fmt.format(7), "7")
        assertEquals("nyolc", fmt.format(8), "8")
        assertEquals("kilenc", fmt.format(9), "9")
        assertEquals("tíz", fmt.format(10), "10")
        assertEquals("tizen­egy", fmt.format(11), "11")
        assertEquals("tizen­kettő", fmt.format(12), "12")
        assertEquals("tizen­három", fmt.format(13), "13")
        assertEquals("tizen­négy", fmt.format(14), "14")
        assertEquals("tizen­öt", fmt.format(15), "15")
        assertEquals("tizen­hat", fmt.format(16), "16")
        assertEquals("tizen­hét", fmt.format(17), "17")
        assertEquals("tizen­nyolc", fmt.format(18), "18")
        assertEquals("tizen­kilenc", fmt.format(19), "19")
        assertEquals("húsz", fmt.format(20), "20")
        assertEquals("huszon­egy", fmt.format(21), "21")
        assertEquals("huszon­kettő", fmt.format(22), "22")
        assertEquals("huszon­három", fmt.format(23), "23")
        assertEquals("huszon­négy", fmt.format(24), "24")
        assertEquals("huszon­öt", fmt.format(25), "25")
        assertEquals("huszon­hat", fmt.format(26), "26")
        assertEquals("huszon­hét", fmt.format(27), "27")
        assertEquals("huszon­nyolc", fmt.format(28), "28")
        assertEquals("huszon­kilenc", fmt.format(29), "29")
        assertEquals("harminc", fmt.format(30), "30")
        assertEquals("harminc­egy", fmt.format(31), "31")
        assertEquals("kilencven­nyolc", fmt.format(98), "98")
        assertEquals("kilencven­kilenc", fmt.format(99), "99")
        assertEquals("száz", fmt.format(100), "100")
        assertEquals("száz­egy", fmt.format(101), "101")
        assertEquals("száz­kettő", fmt.format(102), "102")
        assertEquals("kilenc­száz­kilencven­nyolc", fmt.format(998), "998")
        assertEquals("kilenc­száz­kilencven­kilenc", fmt.format(999), "999")
        assertEquals("ezer", fmt.format(1000), "1000")
        assertEquals("ezer­egy", fmt.format(1001), "1001")
        assertEquals("ezer­kettő", fmt.format(1002), "1002")
        assertEquals("ezer­kilenc­száz­kilencven­nyolc", fmt.format(1998), "1998")
        assertEquals("ezer­kilenc­száz­kilencven­kilenc", fmt.format(1999), "1999")
        assertEquals("két­ezer", fmt.format(2000), "2000")
        assertEquals("két­ezer­egy", fmt.format(2001), "2001")
        assertEquals("két­ezer­kettő", fmt.format(2002), "2002")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­nyolc", fmt.format(9998), "9998")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­kilenc", fmt.format(9999), "9999")
        assertEquals("tíz­ezer", fmt.format(10000), "10000")
        assertEquals("tíz­ezer­egy", fmt.format(10001), "10001")
        assertEquals("tíz­ezer­kettő", fmt.format(10002), "10002")
        assertEquals("száz­ezer", fmt.format(100000), "100000")
        assertEquals("száz­ezer­egy", fmt.format(100001), "100001")
        assertEquals("száz­ezer­kettő", fmt.format(100002), "100002")
        assertEquals("két­száz­ezer", fmt.format(200000), "200000")
        assertEquals("két­száz­ezer­egy", fmt.format(200001), "200001")
        assertEquals("két­száz­ezer­kettő", fmt.format(200002), "200002")
        assertEquals("egy­millió", fmt.format(1000000), "1000000")
        assertEquals("egy­millió­egy", fmt.format(1000001), "1000001")
        assertEquals("egy­millió­kettő", fmt.format(1000002), "1000002")
        assertEquals("két­millió", fmt.format(2000000), "2000000")
        assertEquals("két­millió­egy", fmt.format(2000001), "2000001")
        assertEquals("két­millió­kettő", fmt.format(2000002), "2000002")
        assertEquals("tíz­millió", fmt.format(10000000), "10000000")
        assertEquals("tíz­millió­egy", fmt.format(10000001), "10000001")
        assertEquals("tíz­millió­kettő", fmt.format(10000002), "10000002")
        assertEquals("húsz­millió", fmt.format(20000000), "20000000")
        assertEquals("húsz­millió­egy", fmt.format(20000001), "20000001")
        assertEquals("húsz­millió­kettő", fmt.format(20000002), "20000002")
        assertEquals("száz­millió", fmt.format(100000000), "100000000")
        assertEquals("száz­millió­egy", fmt.format(100000001), "100000001")
        assertEquals("száz­millió­kettő", fmt.format(100000002), "100000002")
        assertEquals("két­száz­millió", fmt.format(200000000), "200000000")
        assertEquals("két­száz­millió­egy", fmt.format(200000001), "200000001")
        assertEquals("két­száz­millió­kettő", fmt.format(200000002), "200000002")
        assertEquals("egy­milliárd", fmt.format(1000000000), "1000000000")
        assertEquals("egy­milliárd­egy", fmt.format(1000000001), "1000000001")
        assertEquals("egy­milliárd­kettő", fmt.format(1000000002), "1000000002")
        assertEquals("két­milliárd", fmt.format(2000000000), "2000000000")
        assertEquals("két­milliárd­egy", fmt.format(2000000001), "2000000001")
        assertEquals("két­milliárd­kettő", fmt.format(2000000002), "2000000002")
    }

    @Test
    fun spelloutNumberingYear() {
        val fmt = RBNFHu().spelloutNumberingYear
// nonsense assertEquals("mínusz egy", fmt.format(-1), "-1")
// nonsense assertEquals("nulla", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0,0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0,0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13,0", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14,0", fmt.format(14.02251), "14.02251")
        assertEquals("egy", fmt.format(1), "1")
        assertEquals("kettő", fmt.format(2), "2")
        assertEquals("három", fmt.format(3), "3")
        assertEquals("négy", fmt.format(4), "4")
        assertEquals("öt", fmt.format(5), "5")
        assertEquals("hat", fmt.format(6), "6")
        assertEquals("hét", fmt.format(7), "7")
        assertEquals("nyolc", fmt.format(8), "8")
        assertEquals("kilenc", fmt.format(9), "9")
        assertEquals("tíz", fmt.format(10), "10")
        assertEquals("tizen­egy", fmt.format(11), "11")
        assertEquals("tizen­kettő", fmt.format(12), "12")
        assertEquals("tizen­három", fmt.format(13), "13")
        assertEquals("tizen­négy", fmt.format(14), "14")
        assertEquals("tizen­öt", fmt.format(15), "15")
        assertEquals("tizen­hat", fmt.format(16), "16")
        assertEquals("tizen­hét", fmt.format(17), "17")
        assertEquals("tizen­nyolc", fmt.format(18), "18")
        assertEquals("tizen­kilenc", fmt.format(19), "19")
        assertEquals("húsz", fmt.format(20), "20")
        assertEquals("huszon­egy", fmt.format(21), "21")
        assertEquals("huszon­kettő", fmt.format(22), "22")
        assertEquals("huszon­három", fmt.format(23), "23")
        assertEquals("huszon­négy", fmt.format(24), "24")
        assertEquals("huszon­öt", fmt.format(25), "25")
        assertEquals("huszon­hat", fmt.format(26), "26")
        assertEquals("huszon­hét", fmt.format(27), "27")
        assertEquals("huszon­nyolc", fmt.format(28), "28")
        assertEquals("huszon­kilenc", fmt.format(29), "29")
        assertEquals("harminc", fmt.format(30), "30")
        assertEquals("harminc­egy", fmt.format(31), "31")
        assertEquals("kilencven­nyolc", fmt.format(98), "98")
        assertEquals("kilencven­kilenc", fmt.format(99), "99")
        assertEquals("száz", fmt.format(100), "100")
        assertEquals("száz­egy", fmt.format(101), "101")
        assertEquals("száz­kettő", fmt.format(102), "102")
        assertEquals("kilenc­száz­kilencven­nyolc", fmt.format(998), "998")
        assertEquals("kilenc­száz­kilencven­kilenc", fmt.format(999), "999")
        assertEquals("ezer", fmt.format(1000), "1000")
        assertEquals("ezer­egy", fmt.format(1001), "1001")
        assertEquals("ezer­kettő", fmt.format(1002), "1002")
        assertEquals("ezer­kilenc­száz­kilencven­nyolc", fmt.format(1998), "1998")
        assertEquals("ezer­kilenc­száz­kilencven­kilenc", fmt.format(1999), "1999")
        assertEquals("két­ezer", fmt.format(2000), "2000")
        assertEquals("két­ezer­egy", fmt.format(2001), "2001")
        assertEquals("két­ezer­kettő", fmt.format(2002), "2002")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­nyolc", fmt.format(9998), "9998")
        assertEquals("kilenc­ezer­kilenc­száz­kilencven­kilenc", fmt.format(9999), "9999")
        assertEquals("tíz­ezer", fmt.format(10000), "10000")
        assertEquals("tíz­ezer­egy", fmt.format(10001), "10001")
        assertEquals("tíz­ezer­kettő", fmt.format(10002), "10002")
        assertEquals("száz­ezer", fmt.format(100000), "100000")
        assertEquals("száz­ezer­egy", fmt.format(100001), "100001")
        assertEquals("száz­ezer­kettő", fmt.format(100002), "100002")
        assertEquals("két­száz­ezer", fmt.format(200000), "200000")
        assertEquals("két­száz­ezer­egy", fmt.format(200001), "200001")
        assertEquals("két­száz­ezer­kettő", fmt.format(200002), "200002")
        assertEquals("egy­millió", fmt.format(1000000), "1000000")
        assertEquals("egy­millió­egy", fmt.format(1000001), "1000001")
        assertEquals("egy­millió­kettő", fmt.format(1000002), "1000002")
        assertEquals("két­millió", fmt.format(2000000), "2000000")
        assertEquals("két­millió­egy", fmt.format(2000001), "2000001")
        assertEquals("két­millió­kettő", fmt.format(2000002), "2000002")
        assertEquals("tíz­millió", fmt.format(10000000), "10000000")
        assertEquals("tíz­millió­egy", fmt.format(10000001), "10000001")
        assertEquals("tíz­millió­kettő", fmt.format(10000002), "10000002")
        assertEquals("húsz­millió", fmt.format(20000000), "20000000")
        assertEquals("húsz­millió­egy", fmt.format(20000001), "20000001")
        assertEquals("húsz­millió­kettő", fmt.format(20000002), "20000002")
        assertEquals("száz­millió", fmt.format(100000000), "100000000")
        assertEquals("száz­millió­egy", fmt.format(100000001), "100000001")
        assertEquals("száz­millió­kettő", fmt.format(100000002), "100000002")
        assertEquals("két­száz­millió", fmt.format(200000000), "200000000")
        assertEquals("két­száz­millió­egy", fmt.format(200000001), "200000001")
        assertEquals("két­száz­millió­kettő", fmt.format(200000002), "200000002")
        assertEquals("egy­milliárd", fmt.format(1000000000), "1000000000")
        assertEquals("egy­milliárd­egy", fmt.format(1000000001), "1000000001")
        assertEquals("egy­milliárd­kettő", fmt.format(1000000002), "1000000002")
        assertEquals("két­milliárd", fmt.format(2000000000), "2000000000")
        assertEquals("két­milliárd­egy", fmt.format(2000000001), "2000000001")
        assertEquals("két­milliárd­kettő", fmt.format(2000000002), "2000000002")
    }
}
