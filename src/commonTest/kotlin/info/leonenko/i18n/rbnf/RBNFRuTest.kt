package info.leonenko.i18n.rbnf
    
    import kotlin.test.Test
    import kotlin.test.assertEquals
    
class RBNFRuTest {
  @Test
  fun spelloutOrdinalPluralAblative() {
 val fmt = RBNFRu().spelloutOrdinalPluralAblative
// nonsense assertEquals("минус первыми", fmt.format(-1), "-1")
// nonsense assertEquals("нулевыми", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первыми", fmt.format(1), "1")
assertEquals("вторыми", fmt.format(2), "2")
assertEquals("третьими", fmt.format(3), "3")
assertEquals("четвертыми", fmt.format(4), "4")
assertEquals("пятыми", fmt.format(5), "5")
assertEquals("шестыми", fmt.format(6), "6")
assertEquals("седьмыми", fmt.format(7), "7")
assertEquals("восьмыми", fmt.format(8), "8")
assertEquals("девятыми", fmt.format(9), "9")
assertEquals("десятыми", fmt.format(10), "10")
assertEquals("одиннадцатыми", fmt.format(11), "11")
assertEquals("двенадцатыми", fmt.format(12), "12")
assertEquals("тринадцатыми", fmt.format(13), "13")
assertEquals("четырнадцатыми", fmt.format(14), "14")
assertEquals("пятнадцатыми", fmt.format(15), "15")
assertEquals("шестнадцатыми", fmt.format(16), "16")
assertEquals("семнадцатыми", fmt.format(17), "17")
assertEquals("восемнадцатыми", fmt.format(18), "18")
assertEquals("девятнадцатыми", fmt.format(19), "19")
assertEquals("двадцатыми", fmt.format(20), "20")
assertEquals("двадцать первыми", fmt.format(21), "21")
assertEquals("двадцать вторыми", fmt.format(22), "22")
assertEquals("двадцать третьими", fmt.format(23), "23")
assertEquals("двадцать четвертыми", fmt.format(24), "24")
assertEquals("двадцать пятыми", fmt.format(25), "25")
assertEquals("двадцать шестыми", fmt.format(26), "26")
assertEquals("двадцать седьмыми", fmt.format(27), "27")
assertEquals("двадцать восьмыми", fmt.format(28), "28")
assertEquals("двадцать девятыми", fmt.format(29), "29")
assertEquals("тридцатыми", fmt.format(30), "30")
assertEquals("тридцать первыми", fmt.format(31), "31")
assertEquals("девяносто восьмыми", fmt.format(98), "98")
assertEquals("девяносто девятыми", fmt.format(99), "99")
assertEquals("сотыми", fmt.format(100), "100")
assertEquals("сто первыми", fmt.format(101), "101")
assertEquals("сто вторыми", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмыми", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятыми", fmt.format(999), "999")
assertEquals("тысячными", fmt.format(1000), "1000")
assertEquals("одна тысяча первыми", fmt.format(1001), "1001")
assertEquals("одна тысяча вторыми", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмыми", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятыми", fmt.format(1999), "1999")
assertEquals("двухтысячными", fmt.format(2000), "2000")
assertEquals("две тысячи первыми", fmt.format(2001), "2001")
assertEquals("две тысячи вторыми", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмыми", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятыми", fmt.format(9999), "9999")
assertEquals("десятитысячными", fmt.format(10000), "10000")
assertEquals("десять тысяч первыми", fmt.format(10001), "10001")
assertEquals("десять тысяч вторыми", fmt.format(10002), "10002")
assertEquals("100000-ми", fmt.format(100000), "100000")
assertEquals("100001-ми", fmt.format(100001), "100001")
assertEquals("100002-ми", fmt.format(100002), "100002")
assertEquals("200000-ми", fmt.format(200000), "200000")
assertEquals("200001-ми", fmt.format(200001), "200001")
assertEquals("200002-ми", fmt.format(200002), "200002")
assertEquals("1000000-ми", fmt.format(1000000), "1000000")
assertEquals("1000001-ми", fmt.format(1000001), "1000001")
assertEquals("1000002-ми", fmt.format(1000002), "1000002")
assertEquals("2000000-ми", fmt.format(2000000), "2000000")
assertEquals("2000001-ми", fmt.format(2000001), "2000001")
assertEquals("2000002-ми", fmt.format(2000002), "2000002")
assertEquals("10000000-ми", fmt.format(10000000), "10000000")
assertEquals("10000001-ми", fmt.format(10000001), "10000001")
assertEquals("10000002-ми", fmt.format(10000002), "10000002")
assertEquals("20000000-ми", fmt.format(20000000), "20000000")
assertEquals("20000001-ми", fmt.format(20000001), "20000001")
assertEquals("20000002-ми", fmt.format(20000002), "20000002")
assertEquals("100000000-ми", fmt.format(100000000), "100000000")
assertEquals("100000001-ми", fmt.format(100000001), "100000001")
assertEquals("100000002-ми", fmt.format(100000002), "100000002")
assertEquals("200000000-ми", fmt.format(200000000), "200000000")
assertEquals("200000001-ми", fmt.format(200000001), "200000001")
assertEquals("200000002-ми", fmt.format(200000002), "200000002")
assertEquals("1000000000-ми", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-ми", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-ми", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-ми", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-ми", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-ми", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalFeminineAblative() {
 val fmt = RBNFRu().spelloutOrdinalFeminineAblative
// nonsense assertEquals("минус первой", fmt.format(-1), "-1")
// nonsense assertEquals("нулевой", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первой", fmt.format(1), "1")
assertEquals("второй", fmt.format(2), "2")
assertEquals("третьей", fmt.format(3), "3")
assertEquals("четвертой", fmt.format(4), "4")
assertEquals("пятой", fmt.format(5), "5")
assertEquals("шестой", fmt.format(6), "6")
assertEquals("седьмой", fmt.format(7), "7")
assertEquals("восьмой", fmt.format(8), "8")
assertEquals("девятой", fmt.format(9), "9")
assertEquals("десятой", fmt.format(10), "10")
assertEquals("одиннадцатой", fmt.format(11), "11")
assertEquals("двенадцатой", fmt.format(12), "12")
assertEquals("тринадцатой", fmt.format(13), "13")
assertEquals("четырнадцатой", fmt.format(14), "14")
assertEquals("пятнадцатой", fmt.format(15), "15")
assertEquals("шестнадцатой", fmt.format(16), "16")
assertEquals("семнадцатой", fmt.format(17), "17")
assertEquals("восемнадцатой", fmt.format(18), "18")
assertEquals("девятнадцатой", fmt.format(19), "19")
assertEquals("двадцатой", fmt.format(20), "20")
assertEquals("двадцать первой", fmt.format(21), "21")
assertEquals("двадцать второй", fmt.format(22), "22")
assertEquals("двадцать третьей", fmt.format(23), "23")
assertEquals("двадцать четвертой", fmt.format(24), "24")
assertEquals("двадцать пятой", fmt.format(25), "25")
assertEquals("двадцать шестой", fmt.format(26), "26")
assertEquals("двадцать седьмой", fmt.format(27), "27")
assertEquals("двадцать восьмой", fmt.format(28), "28")
assertEquals("двадцать девятой", fmt.format(29), "29")
assertEquals("тридцатой", fmt.format(30), "30")
assertEquals("тридцать первой", fmt.format(31), "31")
assertEquals("девяносто восьмой", fmt.format(98), "98")
assertEquals("девяносто девятой", fmt.format(99), "99")
assertEquals("сотой", fmt.format(100), "100")
assertEquals("сто первой", fmt.format(101), "101")
assertEquals("сто второй", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмой", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятой", fmt.format(999), "999")
assertEquals("тысячной", fmt.format(1000), "1000")
assertEquals("одна тысяча первой", fmt.format(1001), "1001")
assertEquals("одна тысяча второй", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмой", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятой", fmt.format(1999), "1999")
assertEquals("двухтысячной", fmt.format(2000), "2000")
assertEquals("две тысячи первой", fmt.format(2001), "2001")
assertEquals("две тысячи второй", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмой", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятой", fmt.format(9999), "9999")
assertEquals("десятитысячной", fmt.format(10000), "10000")
assertEquals("десять тысяч первой", fmt.format(10001), "10001")
assertEquals("десять тысяч второй", fmt.format(10002), "10002")
assertEquals("100000-й", fmt.format(100000), "100000")
assertEquals("100001-й", fmt.format(100001), "100001")
assertEquals("100002-й", fmt.format(100002), "100002")
assertEquals("200000-й", fmt.format(200000), "200000")
assertEquals("200001-й", fmt.format(200001), "200001")
assertEquals("200002-й", fmt.format(200002), "200002")
assertEquals("1000000-й", fmt.format(1000000), "1000000")
assertEquals("1000001-й", fmt.format(1000001), "1000001")
assertEquals("1000002-й", fmt.format(1000002), "1000002")
assertEquals("2000000-й", fmt.format(2000000), "2000000")
assertEquals("2000001-й", fmt.format(2000001), "2000001")
assertEquals("2000002-й", fmt.format(2000002), "2000002")
assertEquals("10000000-й", fmt.format(10000000), "10000000")
assertEquals("10000001-й", fmt.format(10000001), "10000001")
assertEquals("10000002-й", fmt.format(10000002), "10000002")
assertEquals("20000000-й", fmt.format(20000000), "20000000")
assertEquals("20000001-й", fmt.format(20000001), "20000001")
assertEquals("20000002-й", fmt.format(20000002), "20000002")
assertEquals("100000000-й", fmt.format(100000000), "100000000")
assertEquals("100000001-й", fmt.format(100000001), "100000001")
assertEquals("100000002-й", fmt.format(100000002), "100000002")
assertEquals("200000000-й", fmt.format(200000000), "200000000")
assertEquals("200000001-й", fmt.format(200000001), "200000001")
assertEquals("200000002-й", fmt.format(200000002), "200000002")
assertEquals("1000000000-й", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-й", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-й", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-й", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-й", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-й", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalNeuterAblative() {
 val fmt = RBNFRu().spelloutOrdinalNeuterAblative
// nonsense assertEquals("минус первым", fmt.format(-1), "-1")
// nonsense assertEquals("нулевым", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первым", fmt.format(1), "1")
assertEquals("вторым", fmt.format(2), "2")
assertEquals("третьим", fmt.format(3), "3")
assertEquals("четвертым", fmt.format(4), "4")
assertEquals("пятым", fmt.format(5), "5")
assertEquals("шестым", fmt.format(6), "6")
assertEquals("седьмым", fmt.format(7), "7")
assertEquals("восьмым", fmt.format(8), "8")
assertEquals("девятым", fmt.format(9), "9")
assertEquals("десятым", fmt.format(10), "10")
assertEquals("одиннадцатым", fmt.format(11), "11")
assertEquals("двенадцатым", fmt.format(12), "12")
assertEquals("тринадцатым", fmt.format(13), "13")
assertEquals("четырнадцатым", fmt.format(14), "14")
assertEquals("пятнадцатым", fmt.format(15), "15")
assertEquals("шестнадцатым", fmt.format(16), "16")
assertEquals("семнадцатым", fmt.format(17), "17")
assertEquals("восемнадцатым", fmt.format(18), "18")
assertEquals("девятнадцатым", fmt.format(19), "19")
assertEquals("двадцатым", fmt.format(20), "20")
assertEquals("двадцать первым", fmt.format(21), "21")
assertEquals("двадцать вторым", fmt.format(22), "22")
assertEquals("двадцать третьим", fmt.format(23), "23")
assertEquals("двадцать четвертым", fmt.format(24), "24")
assertEquals("двадцать пятым", fmt.format(25), "25")
assertEquals("двадцать шестым", fmt.format(26), "26")
assertEquals("двадцать седьмым", fmt.format(27), "27")
assertEquals("двадцать восьмым", fmt.format(28), "28")
assertEquals("двадцать девятым", fmt.format(29), "29")
assertEquals("тридцатым", fmt.format(30), "30")
assertEquals("тридцать первым", fmt.format(31), "31")
assertEquals("девяносто восьмым", fmt.format(98), "98")
assertEquals("девяносто девятым", fmt.format(99), "99")
assertEquals("сотым", fmt.format(100), "100")
assertEquals("сто первым", fmt.format(101), "101")
assertEquals("сто вторым", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмым", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятым", fmt.format(999), "999")
assertEquals("тысячным", fmt.format(1000), "1000")
assertEquals("одна тысяча первым", fmt.format(1001), "1001")
assertEquals("одна тысяча вторым", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмым", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятым", fmt.format(1999), "1999")
assertEquals("двухтысячным", fmt.format(2000), "2000")
assertEquals("две тысячи первым", fmt.format(2001), "2001")
assertEquals("две тысячи вторым", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмым", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятым", fmt.format(9999), "9999")
assertEquals("десятитысячным", fmt.format(10000), "10000")
assertEquals("десять тысяч первым", fmt.format(10001), "10001")
assertEquals("десять тысяч вторым", fmt.format(10002), "10002")
assertEquals("100000-м", fmt.format(100000), "100000")
assertEquals("100001-м", fmt.format(100001), "100001")
assertEquals("100002-м", fmt.format(100002), "100002")
assertEquals("200000-м", fmt.format(200000), "200000")
assertEquals("200001-м", fmt.format(200001), "200001")
assertEquals("200002-м", fmt.format(200002), "200002")
assertEquals("1000000-м", fmt.format(1000000), "1000000")
assertEquals("1000001-м", fmt.format(1000001), "1000001")
assertEquals("1000002-м", fmt.format(1000002), "1000002")
assertEquals("2000000-м", fmt.format(2000000), "2000000")
assertEquals("2000001-м", fmt.format(2000001), "2000001")
assertEquals("2000002-м", fmt.format(2000002), "2000002")
assertEquals("10000000-м", fmt.format(10000000), "10000000")
assertEquals("10000001-м", fmt.format(10000001), "10000001")
assertEquals("10000002-м", fmt.format(10000002), "10000002")
assertEquals("20000000-м", fmt.format(20000000), "20000000")
assertEquals("20000001-м", fmt.format(20000001), "20000001")
assertEquals("20000002-м", fmt.format(20000002), "20000002")
assertEquals("100000000-м", fmt.format(100000000), "100000000")
assertEquals("100000001-м", fmt.format(100000001), "100000001")
assertEquals("100000002-м", fmt.format(100000002), "100000002")
assertEquals("200000000-м", fmt.format(200000000), "200000000")
assertEquals("200000001-м", fmt.format(200000001), "200000001")
assertEquals("200000002-м", fmt.format(200000002), "200000002")
assertEquals("1000000000-м", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-м", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-м", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-м", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-м", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-м", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalMasculineAblative() {
 val fmt = RBNFRu().spelloutOrdinalMasculineAblative
// nonsense assertEquals("минус первым", fmt.format(-1), "-1")
// nonsense assertEquals("нулевым", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первым", fmt.format(1), "1")
assertEquals("вторым", fmt.format(2), "2")
assertEquals("третьим", fmt.format(3), "3")
assertEquals("четвертым", fmt.format(4), "4")
assertEquals("пятым", fmt.format(5), "5")
assertEquals("шестым", fmt.format(6), "6")
assertEquals("седьмым", fmt.format(7), "7")
assertEquals("восьмым", fmt.format(8), "8")
assertEquals("девятым", fmt.format(9), "9")
assertEquals("десятым", fmt.format(10), "10")
assertEquals("одиннадцатым", fmt.format(11), "11")
assertEquals("двенадцатым", fmt.format(12), "12")
assertEquals("тринадцатым", fmt.format(13), "13")
assertEquals("четырнадцатым", fmt.format(14), "14")
assertEquals("пятнадцатым", fmt.format(15), "15")
assertEquals("шестнадцатым", fmt.format(16), "16")
assertEquals("семнадцатым", fmt.format(17), "17")
assertEquals("восемнадцатым", fmt.format(18), "18")
assertEquals("девятнадцатым", fmt.format(19), "19")
assertEquals("двадцатым", fmt.format(20), "20")
assertEquals("двадцать первым", fmt.format(21), "21")
assertEquals("двадцать вторым", fmt.format(22), "22")
assertEquals("двадцать третьим", fmt.format(23), "23")
assertEquals("двадцать четвертым", fmt.format(24), "24")
assertEquals("двадцать пятым", fmt.format(25), "25")
assertEquals("двадцать шестым", fmt.format(26), "26")
assertEquals("двадцать седьмым", fmt.format(27), "27")
assertEquals("двадцать восьмым", fmt.format(28), "28")
assertEquals("двадцать девятым", fmt.format(29), "29")
assertEquals("тридцатым", fmt.format(30), "30")
assertEquals("тридцать первым", fmt.format(31), "31")
assertEquals("девяносто восьмым", fmt.format(98), "98")
assertEquals("девяносто девятым", fmt.format(99), "99")
assertEquals("сотым", fmt.format(100), "100")
assertEquals("сто первым", fmt.format(101), "101")
assertEquals("сто вторым", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмым", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятым", fmt.format(999), "999")
assertEquals("тысячным", fmt.format(1000), "1000")
assertEquals("одна тысяча первым", fmt.format(1001), "1001")
assertEquals("одна тысяча вторым", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмым", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятым", fmt.format(1999), "1999")
assertEquals("двухтысячным", fmt.format(2000), "2000")
assertEquals("две тысячи первым", fmt.format(2001), "2001")
assertEquals("две тысячи вторым", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмым", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятым", fmt.format(9999), "9999")
assertEquals("десятитысячным", fmt.format(10000), "10000")
assertEquals("десять тысяч первым", fmt.format(10001), "10001")
assertEquals("десять тысяч вторым", fmt.format(10002), "10002")
assertEquals("100000-м", fmt.format(100000), "100000")
assertEquals("100001-м", fmt.format(100001), "100001")
assertEquals("100002-м", fmt.format(100002), "100002")
assertEquals("200000-м", fmt.format(200000), "200000")
assertEquals("200001-м", fmt.format(200001), "200001")
assertEquals("200002-м", fmt.format(200002), "200002")
assertEquals("1000000-м", fmt.format(1000000), "1000000")
assertEquals("1000001-м", fmt.format(1000001), "1000001")
assertEquals("1000002-м", fmt.format(1000002), "1000002")
assertEquals("2000000-м", fmt.format(2000000), "2000000")
assertEquals("2000001-м", fmt.format(2000001), "2000001")
assertEquals("2000002-м", fmt.format(2000002), "2000002")
assertEquals("10000000-м", fmt.format(10000000), "10000000")
assertEquals("10000001-м", fmt.format(10000001), "10000001")
assertEquals("10000002-м", fmt.format(10000002), "10000002")
assertEquals("20000000-м", fmt.format(20000000), "20000000")
assertEquals("20000001-м", fmt.format(20000001), "20000001")
assertEquals("20000002-м", fmt.format(20000002), "20000002")
assertEquals("100000000-м", fmt.format(100000000), "100000000")
assertEquals("100000001-м", fmt.format(100000001), "100000001")
assertEquals("100000002-м", fmt.format(100000002), "100000002")
assertEquals("200000000-м", fmt.format(200000000), "200000000")
assertEquals("200000001-м", fmt.format(200000001), "200000001")
assertEquals("200000002-м", fmt.format(200000002), "200000002")
assertEquals("1000000000-м", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-м", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-м", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-м", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-м", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-м", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalPluralLocative() {
 val fmt = RBNFRu().spelloutOrdinalPluralLocative
// nonsense assertEquals("минус первых", fmt.format(-1), "-1")
// nonsense assertEquals("нулевых", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первых", fmt.format(1), "1")
assertEquals("вторых", fmt.format(2), "2")
assertEquals("третьих", fmt.format(3), "3")
assertEquals("четвертых", fmt.format(4), "4")
assertEquals("пятых", fmt.format(5), "5")
assertEquals("шестых", fmt.format(6), "6")
assertEquals("седьмых", fmt.format(7), "7")
assertEquals("восьмых", fmt.format(8), "8")
assertEquals("девятых", fmt.format(9), "9")
assertEquals("десятых", fmt.format(10), "10")
assertEquals("одиннадцатых", fmt.format(11), "11")
assertEquals("двенадцатых", fmt.format(12), "12")
assertEquals("тринадцатых", fmt.format(13), "13")
assertEquals("четырнадцатых", fmt.format(14), "14")
assertEquals("пятнадцатых", fmt.format(15), "15")
assertEquals("шестнадцатых", fmt.format(16), "16")
assertEquals("семнадцатых", fmt.format(17), "17")
assertEquals("восемнадцатых", fmt.format(18), "18")
assertEquals("девятнадцатых", fmt.format(19), "19")
assertEquals("двадцатых", fmt.format(20), "20")
assertEquals("двадцать первых", fmt.format(21), "21")
assertEquals("двадцать вторых", fmt.format(22), "22")
assertEquals("двадцать третьих", fmt.format(23), "23")
assertEquals("двадцать четвертых", fmt.format(24), "24")
assertEquals("двадцать пятых", fmt.format(25), "25")
assertEquals("двадцать шестых", fmt.format(26), "26")
assertEquals("двадцать седьмых", fmt.format(27), "27")
assertEquals("двадцать восьмых", fmt.format(28), "28")
assertEquals("двадцать девятых", fmt.format(29), "29")
assertEquals("тридцатых", fmt.format(30), "30")
assertEquals("тридцать первых", fmt.format(31), "31")
assertEquals("девяносто восьмых", fmt.format(98), "98")
assertEquals("девяносто девятых", fmt.format(99), "99")
assertEquals("сотых", fmt.format(100), "100")
assertEquals("сто первых", fmt.format(101), "101")
assertEquals("сто вторых", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмых", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятых", fmt.format(999), "999")
assertEquals("тысячных", fmt.format(1000), "1000")
assertEquals("одна тысяча первых", fmt.format(1001), "1001")
assertEquals("одна тысяча вторых", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмых", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятых", fmt.format(1999), "1999")
assertEquals("двухтысячных", fmt.format(2000), "2000")
assertEquals("две тысячи первых", fmt.format(2001), "2001")
assertEquals("две тысячи вторых", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмых", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятых", fmt.format(9999), "9999")
assertEquals("десятитысячных", fmt.format(10000), "10000")
assertEquals("десять тысяч первых", fmt.format(10001), "10001")
assertEquals("десять тысяч вторых", fmt.format(10002), "10002")
assertEquals("100000-х", fmt.format(100000), "100000")
assertEquals("100001-х", fmt.format(100001), "100001")
assertEquals("100002-х", fmt.format(100002), "100002")
assertEquals("200000-х", fmt.format(200000), "200000")
assertEquals("200001-х", fmt.format(200001), "200001")
assertEquals("200002-х", fmt.format(200002), "200002")
assertEquals("1000000-х", fmt.format(1000000), "1000000")
assertEquals("1000001-х", fmt.format(1000001), "1000001")
assertEquals("1000002-х", fmt.format(1000002), "1000002")
assertEquals("2000000-х", fmt.format(2000000), "2000000")
assertEquals("2000001-х", fmt.format(2000001), "2000001")
assertEquals("2000002-х", fmt.format(2000002), "2000002")
assertEquals("10000000-х", fmt.format(10000000), "10000000")
assertEquals("10000001-х", fmt.format(10000001), "10000001")
assertEquals("10000002-х", fmt.format(10000002), "10000002")
assertEquals("20000000-х", fmt.format(20000000), "20000000")
assertEquals("20000001-х", fmt.format(20000001), "20000001")
assertEquals("20000002-х", fmt.format(20000002), "20000002")
assertEquals("100000000-х", fmt.format(100000000), "100000000")
assertEquals("100000001-х", fmt.format(100000001), "100000001")
assertEquals("100000002-х", fmt.format(100000002), "100000002")
assertEquals("200000000-х", fmt.format(200000000), "200000000")
assertEquals("200000001-х", fmt.format(200000001), "200000001")
assertEquals("200000002-х", fmt.format(200000002), "200000002")
assertEquals("1000000000-х", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-х", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-х", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-х", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-х", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-х", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalFeminineLocative() {
 val fmt = RBNFRu().spelloutOrdinalFeminineLocative
// nonsense assertEquals("минус первой", fmt.format(-1), "-1")
// nonsense assertEquals("нулевой", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первой", fmt.format(1), "1")
assertEquals("второй", fmt.format(2), "2")
assertEquals("третьей", fmt.format(3), "3")
assertEquals("четвертой", fmt.format(4), "4")
assertEquals("пятой", fmt.format(5), "5")
assertEquals("шестой", fmt.format(6), "6")
assertEquals("седьмой", fmt.format(7), "7")
assertEquals("восьмой", fmt.format(8), "8")
assertEquals("девятой", fmt.format(9), "9")
assertEquals("десятой", fmt.format(10), "10")
assertEquals("одиннадцатой", fmt.format(11), "11")
assertEquals("двенадцатой", fmt.format(12), "12")
assertEquals("тринадцатой", fmt.format(13), "13")
assertEquals("четырнадцатой", fmt.format(14), "14")
assertEquals("пятнадцатой", fmt.format(15), "15")
assertEquals("шестнадцатой", fmt.format(16), "16")
assertEquals("семнадцатой", fmt.format(17), "17")
assertEquals("восемнадцатой", fmt.format(18), "18")
assertEquals("девятнадцатой", fmt.format(19), "19")
assertEquals("двадцатой", fmt.format(20), "20")
assertEquals("двадцать первой", fmt.format(21), "21")
assertEquals("двадцать второй", fmt.format(22), "22")
assertEquals("двадцать третьей", fmt.format(23), "23")
assertEquals("двадцать четвертой", fmt.format(24), "24")
assertEquals("двадцать пятой", fmt.format(25), "25")
assertEquals("двадцать шестой", fmt.format(26), "26")
assertEquals("двадцать седьмой", fmt.format(27), "27")
assertEquals("двадцать восьмой", fmt.format(28), "28")
assertEquals("двадцать девятой", fmt.format(29), "29")
assertEquals("тридцатой", fmt.format(30), "30")
assertEquals("тридцать первой", fmt.format(31), "31")
assertEquals("девяносто восьмой", fmt.format(98), "98")
assertEquals("девяносто девятой", fmt.format(99), "99")
assertEquals("сотой", fmt.format(100), "100")
assertEquals("сто первой", fmt.format(101), "101")
assertEquals("сто второй", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмой", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятой", fmt.format(999), "999")
assertEquals("тысячной", fmt.format(1000), "1000")
assertEquals("одна тысяча первой", fmt.format(1001), "1001")
assertEquals("одна тысяча второй", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмой", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятой", fmt.format(1999), "1999")
assertEquals("двухтысячной", fmt.format(2000), "2000")
assertEquals("две тысячи первой", fmt.format(2001), "2001")
assertEquals("две тысячи второй", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмой", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятой", fmt.format(9999), "9999")
assertEquals("десятитысячной", fmt.format(10000), "10000")
assertEquals("десять тысяч первой", fmt.format(10001), "10001")
assertEquals("десять тысяч второй", fmt.format(10002), "10002")
assertEquals("100000-й", fmt.format(100000), "100000")
assertEquals("100001-й", fmt.format(100001), "100001")
assertEquals("100002-й", fmt.format(100002), "100002")
assertEquals("200000-й", fmt.format(200000), "200000")
assertEquals("200001-й", fmt.format(200001), "200001")
assertEquals("200002-й", fmt.format(200002), "200002")
assertEquals("1000000-й", fmt.format(1000000), "1000000")
assertEquals("1000001-й", fmt.format(1000001), "1000001")
assertEquals("1000002-й", fmt.format(1000002), "1000002")
assertEquals("2000000-й", fmt.format(2000000), "2000000")
assertEquals("2000001-й", fmt.format(2000001), "2000001")
assertEquals("2000002-й", fmt.format(2000002), "2000002")
assertEquals("10000000-й", fmt.format(10000000), "10000000")
assertEquals("10000001-й", fmt.format(10000001), "10000001")
assertEquals("10000002-й", fmt.format(10000002), "10000002")
assertEquals("20000000-й", fmt.format(20000000), "20000000")
assertEquals("20000001-й", fmt.format(20000001), "20000001")
assertEquals("20000002-й", fmt.format(20000002), "20000002")
assertEquals("100000000-й", fmt.format(100000000), "100000000")
assertEquals("100000001-й", fmt.format(100000001), "100000001")
assertEquals("100000002-й", fmt.format(100000002), "100000002")
assertEquals("200000000-й", fmt.format(200000000), "200000000")
assertEquals("200000001-й", fmt.format(200000001), "200000001")
assertEquals("200000002-й", fmt.format(200000002), "200000002")
assertEquals("1000000000-й", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-й", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-й", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-й", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-й", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-й", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalNeuterLocative() {
 val fmt = RBNFRu().spelloutOrdinalNeuterLocative
// nonsense assertEquals("минус первом", fmt.format(-1), "-1")
// nonsense assertEquals("нулевом", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первом", fmt.format(1), "1")
assertEquals("втором", fmt.format(2), "2")
assertEquals("третьем", fmt.format(3), "3")
assertEquals("четвертом", fmt.format(4), "4")
assertEquals("пятом", fmt.format(5), "5")
assertEquals("шестом", fmt.format(6), "6")
assertEquals("седьмом", fmt.format(7), "7")
assertEquals("восьмом", fmt.format(8), "8")
assertEquals("девятом", fmt.format(9), "9")
assertEquals("десятом", fmt.format(10), "10")
assertEquals("одиннадцатом", fmt.format(11), "11")
assertEquals("двенадцатом", fmt.format(12), "12")
assertEquals("тринадцатом", fmt.format(13), "13")
assertEquals("четырнадцатом", fmt.format(14), "14")
assertEquals("пятнадцатом", fmt.format(15), "15")
assertEquals("шестнадцатом", fmt.format(16), "16")
assertEquals("семнадцатом", fmt.format(17), "17")
assertEquals("восемнадцатом", fmt.format(18), "18")
assertEquals("девятнадцатом", fmt.format(19), "19")
assertEquals("двадцатом", fmt.format(20), "20")
assertEquals("двадцать первом", fmt.format(21), "21")
assertEquals("двадцать втором", fmt.format(22), "22")
assertEquals("двадцать третьем", fmt.format(23), "23")
assertEquals("двадцать четвертом", fmt.format(24), "24")
assertEquals("двадцать пятом", fmt.format(25), "25")
assertEquals("двадцать шестом", fmt.format(26), "26")
assertEquals("двадцать седьмом", fmt.format(27), "27")
assertEquals("двадцать восьмом", fmt.format(28), "28")
assertEquals("двадцать девятом", fmt.format(29), "29")
assertEquals("тридцатом", fmt.format(30), "30")
assertEquals("тридцать первом", fmt.format(31), "31")
assertEquals("девяносто восьмом", fmt.format(98), "98")
assertEquals("девяносто девятом", fmt.format(99), "99")
assertEquals("сотом", fmt.format(100), "100")
assertEquals("сто первом", fmt.format(101), "101")
assertEquals("сто втором", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмом", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятом", fmt.format(999), "999")
assertEquals("тысячном", fmt.format(1000), "1000")
assertEquals("одна тысяча первом", fmt.format(1001), "1001")
assertEquals("одна тысяча втором", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмом", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятом", fmt.format(1999), "1999")
assertEquals("двухтысячном", fmt.format(2000), "2000")
assertEquals("две тысячи первом", fmt.format(2001), "2001")
assertEquals("две тысячи втором", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмом", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятом", fmt.format(9999), "9999")
assertEquals("десятитысячном", fmt.format(10000), "10000")
assertEquals("десять тысяч первом", fmt.format(10001), "10001")
assertEquals("десять тысяч втором", fmt.format(10002), "10002")
assertEquals("100000-м", fmt.format(100000), "100000")
assertEquals("100001-м", fmt.format(100001), "100001")
assertEquals("100002-м", fmt.format(100002), "100002")
assertEquals("200000-м", fmt.format(200000), "200000")
assertEquals("200001-м", fmt.format(200001), "200001")
assertEquals("200002-м", fmt.format(200002), "200002")
assertEquals("1000000-м", fmt.format(1000000), "1000000")
assertEquals("1000001-м", fmt.format(1000001), "1000001")
assertEquals("1000002-м", fmt.format(1000002), "1000002")
assertEquals("2000000-м", fmt.format(2000000), "2000000")
assertEquals("2000001-м", fmt.format(2000001), "2000001")
assertEquals("2000002-м", fmt.format(2000002), "2000002")
assertEquals("10000000-м", fmt.format(10000000), "10000000")
assertEquals("10000001-м", fmt.format(10000001), "10000001")
assertEquals("10000002-м", fmt.format(10000002), "10000002")
assertEquals("20000000-м", fmt.format(20000000), "20000000")
assertEquals("20000001-м", fmt.format(20000001), "20000001")
assertEquals("20000002-м", fmt.format(20000002), "20000002")
assertEquals("100000000-м", fmt.format(100000000), "100000000")
assertEquals("100000001-м", fmt.format(100000001), "100000001")
assertEquals("100000002-м", fmt.format(100000002), "100000002")
assertEquals("200000000-м", fmt.format(200000000), "200000000")
assertEquals("200000001-м", fmt.format(200000001), "200000001")
assertEquals("200000002-м", fmt.format(200000002), "200000002")
assertEquals("1000000000-м", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-м", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-м", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-м", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-м", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-м", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalMasculineLocative() {
 val fmt = RBNFRu().spelloutOrdinalMasculineLocative
// nonsense assertEquals("минус первом", fmt.format(-1), "-1")
// nonsense assertEquals("нулевом", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первом", fmt.format(1), "1")
assertEquals("втором", fmt.format(2), "2")
assertEquals("третьем", fmt.format(3), "3")
assertEquals("четвертом", fmt.format(4), "4")
assertEquals("пятом", fmt.format(5), "5")
assertEquals("шестом", fmt.format(6), "6")
assertEquals("седьмом", fmt.format(7), "7")
assertEquals("восьмом", fmt.format(8), "8")
assertEquals("девятом", fmt.format(9), "9")
assertEquals("десятом", fmt.format(10), "10")
assertEquals("одиннадцатом", fmt.format(11), "11")
assertEquals("двенадцатом", fmt.format(12), "12")
assertEquals("тринадцатом", fmt.format(13), "13")
assertEquals("четырнадцатом", fmt.format(14), "14")
assertEquals("пятнадцатом", fmt.format(15), "15")
assertEquals("шестнадцатом", fmt.format(16), "16")
assertEquals("семнадцатом", fmt.format(17), "17")
assertEquals("восемнадцатом", fmt.format(18), "18")
assertEquals("девятнадцатом", fmt.format(19), "19")
assertEquals("двадцатом", fmt.format(20), "20")
assertEquals("двадцать первом", fmt.format(21), "21")
assertEquals("двадцать втором", fmt.format(22), "22")
assertEquals("двадцать третьем", fmt.format(23), "23")
assertEquals("двадцать четвертом", fmt.format(24), "24")
assertEquals("двадцать пятом", fmt.format(25), "25")
assertEquals("двадцать шестом", fmt.format(26), "26")
assertEquals("двадцать седьмом", fmt.format(27), "27")
assertEquals("двадцать восьмом", fmt.format(28), "28")
assertEquals("двадцать девятом", fmt.format(29), "29")
assertEquals("тридцатом", fmt.format(30), "30")
assertEquals("тридцать первом", fmt.format(31), "31")
assertEquals("девяносто восьмом", fmt.format(98), "98")
assertEquals("девяносто девятом", fmt.format(99), "99")
assertEquals("сотом", fmt.format(100), "100")
assertEquals("сто первом", fmt.format(101), "101")
assertEquals("сто втором", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмом", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятом", fmt.format(999), "999")
assertEquals("тысячном", fmt.format(1000), "1000")
assertEquals("одна тысяча первом", fmt.format(1001), "1001")
assertEquals("одна тысяча втором", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмом", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятом", fmt.format(1999), "1999")
assertEquals("двухтысячном", fmt.format(2000), "2000")
assertEquals("две тысячи первом", fmt.format(2001), "2001")
assertEquals("две тысячи втором", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмом", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятом", fmt.format(9999), "9999")
assertEquals("десятитысячном", fmt.format(10000), "10000")
assertEquals("десять тысяч первом", fmt.format(10001), "10001")
assertEquals("десять тысяч втором", fmt.format(10002), "10002")
assertEquals("100000-м", fmt.format(100000), "100000")
assertEquals("100001-м", fmt.format(100001), "100001")
assertEquals("100002-м", fmt.format(100002), "100002")
assertEquals("200000-м", fmt.format(200000), "200000")
assertEquals("200001-м", fmt.format(200001), "200001")
assertEquals("200002-м", fmt.format(200002), "200002")
assertEquals("1000000-м", fmt.format(1000000), "1000000")
assertEquals("1000001-м", fmt.format(1000001), "1000001")
assertEquals("1000002-м", fmt.format(1000002), "1000002")
assertEquals("2000000-м", fmt.format(2000000), "2000000")
assertEquals("2000001-м", fmt.format(2000001), "2000001")
assertEquals("2000002-м", fmt.format(2000002), "2000002")
assertEquals("10000000-м", fmt.format(10000000), "10000000")
assertEquals("10000001-м", fmt.format(10000001), "10000001")
assertEquals("10000002-м", fmt.format(10000002), "10000002")
assertEquals("20000000-м", fmt.format(20000000), "20000000")
assertEquals("20000001-м", fmt.format(20000001), "20000001")
assertEquals("20000002-м", fmt.format(20000002), "20000002")
assertEquals("100000000-м", fmt.format(100000000), "100000000")
assertEquals("100000001-м", fmt.format(100000001), "100000001")
assertEquals("100000002-м", fmt.format(100000002), "100000002")
assertEquals("200000000-м", fmt.format(200000000), "200000000")
assertEquals("200000001-м", fmt.format(200000001), "200000001")
assertEquals("200000002-м", fmt.format(200000002), "200000002")
assertEquals("1000000000-м", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-м", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-м", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-м", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-м", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-м", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalPluralAccusative() {
 val fmt = RBNFRu().spelloutOrdinalPluralAccusative
// nonsense assertEquals("минус первые", fmt.format(-1), "-1")
// nonsense assertEquals("нулевые", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первые", fmt.format(1), "1")
assertEquals("вторые", fmt.format(2), "2")
assertEquals("третьи", fmt.format(3), "3")
assertEquals("четвертые", fmt.format(4), "4")
assertEquals("пятые", fmt.format(5), "5")
assertEquals("шестые", fmt.format(6), "6")
assertEquals("седьмые", fmt.format(7), "7")
assertEquals("восьмые", fmt.format(8), "8")
assertEquals("девятые", fmt.format(9), "9")
assertEquals("десятые", fmt.format(10), "10")
assertEquals("одиннадцатые", fmt.format(11), "11")
assertEquals("двенадцатые", fmt.format(12), "12")
assertEquals("тринадцатые", fmt.format(13), "13")
assertEquals("четырнадцатые", fmt.format(14), "14")
assertEquals("пятнадцатые", fmt.format(15), "15")
assertEquals("шестнадцатые", fmt.format(16), "16")
assertEquals("семнадцатые", fmt.format(17), "17")
assertEquals("восемнадцатые", fmt.format(18), "18")
assertEquals("девятнадцатые", fmt.format(19), "19")
assertEquals("двадцатые", fmt.format(20), "20")
assertEquals("двадцать первые", fmt.format(21), "21")
assertEquals("двадцать вторые", fmt.format(22), "22")
assertEquals("двадцать третьи", fmt.format(23), "23")
assertEquals("двадцать четвертые", fmt.format(24), "24")
assertEquals("двадцать пятые", fmt.format(25), "25")
assertEquals("двадцать шестые", fmt.format(26), "26")
assertEquals("двадцать седьмые", fmt.format(27), "27")
assertEquals("двадцать восьмые", fmt.format(28), "28")
assertEquals("двадцать девятые", fmt.format(29), "29")
assertEquals("тридцатые", fmt.format(30), "30")
assertEquals("тридцать первые", fmt.format(31), "31")
assertEquals("девяносто восьмые", fmt.format(98), "98")
assertEquals("девяносто девятые", fmt.format(99), "99")
assertEquals("сотые", fmt.format(100), "100")
assertEquals("сто первые", fmt.format(101), "101")
assertEquals("сто вторые", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмые", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятые", fmt.format(999), "999")
assertEquals("тысячные", fmt.format(1000), "1000")
assertEquals("одна тысяча первые", fmt.format(1001), "1001")
assertEquals("одна тысяча вторые", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмые", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятые", fmt.format(1999), "1999")
assertEquals("двухтысячные", fmt.format(2000), "2000")
assertEquals("две тысячи первые", fmt.format(2001), "2001")
assertEquals("две тысячи вторые", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмые", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятые", fmt.format(9999), "9999")
assertEquals("десятитысячные", fmt.format(10000), "10000")
assertEquals("десять тысяч первые", fmt.format(10001), "10001")
assertEquals("десять тысяч вторые", fmt.format(10002), "10002")
assertEquals("100000-e", fmt.format(100000), "100000")
assertEquals("100001-e", fmt.format(100001), "100001")
assertEquals("100002-e", fmt.format(100002), "100002")
assertEquals("200000-e", fmt.format(200000), "200000")
assertEquals("200001-e", fmt.format(200001), "200001")
assertEquals("200002-e", fmt.format(200002), "200002")
assertEquals("1000000-e", fmt.format(1000000), "1000000")
assertEquals("1000001-e", fmt.format(1000001), "1000001")
assertEquals("1000002-e", fmt.format(1000002), "1000002")
assertEquals("2000000-e", fmt.format(2000000), "2000000")
assertEquals("2000001-e", fmt.format(2000001), "2000001")
assertEquals("2000002-e", fmt.format(2000002), "2000002")
assertEquals("10000000-e", fmt.format(10000000), "10000000")
assertEquals("10000001-e", fmt.format(10000001), "10000001")
assertEquals("10000002-e", fmt.format(10000002), "10000002")
assertEquals("20000000-e", fmt.format(20000000), "20000000")
assertEquals("20000001-e", fmt.format(20000001), "20000001")
assertEquals("20000002-e", fmt.format(20000002), "20000002")
assertEquals("100000000-e", fmt.format(100000000), "100000000")
assertEquals("100000001-e", fmt.format(100000001), "100000001")
assertEquals("100000002-e", fmt.format(100000002), "100000002")
assertEquals("200000000-e", fmt.format(200000000), "200000000")
assertEquals("200000001-e", fmt.format(200000001), "200000001")
assertEquals("200000002-e", fmt.format(200000002), "200000002")
assertEquals("1000000000-e", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-e", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-e", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-e", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-e", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-e", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalFeminineAccusative() {
 val fmt = RBNFRu().spelloutOrdinalFeminineAccusative
// nonsense assertEquals("минус первую", fmt.format(-1), "-1")
// nonsense assertEquals("нулевую", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первую", fmt.format(1), "1")
assertEquals("вторую", fmt.format(2), "2")
assertEquals("третью", fmt.format(3), "3")
assertEquals("четвертую", fmt.format(4), "4")
assertEquals("пятую", fmt.format(5), "5")
assertEquals("шестую", fmt.format(6), "6")
assertEquals("седьмую", fmt.format(7), "7")
assertEquals("восьмую", fmt.format(8), "8")
assertEquals("девятую", fmt.format(9), "9")
assertEquals("десятую", fmt.format(10), "10")
assertEquals("одиннадцатую", fmt.format(11), "11")
assertEquals("двенадцатую", fmt.format(12), "12")
assertEquals("тринадцатую", fmt.format(13), "13")
assertEquals("четырнадцатую", fmt.format(14), "14")
assertEquals("пятнадцатую", fmt.format(15), "15")
assertEquals("шестнадцатую", fmt.format(16), "16")
assertEquals("семнадцатую", fmt.format(17), "17")
assertEquals("восемнадцатую", fmt.format(18), "18")
assertEquals("девятнадцатую", fmt.format(19), "19")
assertEquals("двадцатую", fmt.format(20), "20")
assertEquals("двадцать первую", fmt.format(21), "21")
assertEquals("двадцать вторую", fmt.format(22), "22")
assertEquals("двадцать третью", fmt.format(23), "23")
assertEquals("двадцать четвертую", fmt.format(24), "24")
assertEquals("двадцать пятую", fmt.format(25), "25")
assertEquals("двадцать шестую", fmt.format(26), "26")
assertEquals("двадцать седьмую", fmt.format(27), "27")
assertEquals("двадцать восьмую", fmt.format(28), "28")
assertEquals("двадцать девятую", fmt.format(29), "29")
assertEquals("тридцатую", fmt.format(30), "30")
assertEquals("тридцать первую", fmt.format(31), "31")
assertEquals("девяносто восьмую", fmt.format(98), "98")
assertEquals("девяносто девятую", fmt.format(99), "99")
assertEquals("сотую", fmt.format(100), "100")
assertEquals("сто первую", fmt.format(101), "101")
assertEquals("сто вторую", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмую", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятую", fmt.format(999), "999")
assertEquals("тысячную", fmt.format(1000), "1000")
assertEquals("одна тысяча первую", fmt.format(1001), "1001")
assertEquals("одна тысяча вторую", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмую", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятую", fmt.format(1999), "1999")
assertEquals("двухтысячную", fmt.format(2000), "2000")
assertEquals("две тысячи первую", fmt.format(2001), "2001")
assertEquals("две тысячи вторую", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмую", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятую", fmt.format(9999), "9999")
assertEquals("десятитысячную", fmt.format(10000), "10000")
assertEquals("десять тысяч первую", fmt.format(10001), "10001")
assertEquals("десять тысяч вторую", fmt.format(10002), "10002")
assertEquals("100000-ю", fmt.format(100000), "100000")
assertEquals("100001-ю", fmt.format(100001), "100001")
assertEquals("100002-ю", fmt.format(100002), "100002")
assertEquals("200000-ю", fmt.format(200000), "200000")
assertEquals("200001-ю", fmt.format(200001), "200001")
assertEquals("200002-ю", fmt.format(200002), "200002")
assertEquals("1000000-ю", fmt.format(1000000), "1000000")
assertEquals("1000001-ю", fmt.format(1000001), "1000001")
assertEquals("1000002-ю", fmt.format(1000002), "1000002")
assertEquals("2000000-ю", fmt.format(2000000), "2000000")
assertEquals("2000001-ю", fmt.format(2000001), "2000001")
assertEquals("2000002-ю", fmt.format(2000002), "2000002")
assertEquals("10000000-ю", fmt.format(10000000), "10000000")
assertEquals("10000001-ю", fmt.format(10000001), "10000001")
assertEquals("10000002-ю", fmt.format(10000002), "10000002")
assertEquals("20000000-ю", fmt.format(20000000), "20000000")
assertEquals("20000001-ю", fmt.format(20000001), "20000001")
assertEquals("20000002-ю", fmt.format(20000002), "20000002")
assertEquals("100000000-ю", fmt.format(100000000), "100000000")
assertEquals("100000001-ю", fmt.format(100000001), "100000001")
assertEquals("100000002-ю", fmt.format(100000002), "100000002")
assertEquals("200000000-ю", fmt.format(200000000), "200000000")
assertEquals("200000001-ю", fmt.format(200000001), "200000001")
assertEquals("200000002-ю", fmt.format(200000002), "200000002")
assertEquals("1000000000-ю", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-ю", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-ю", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-ю", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-ю", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-ю", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalNeuterAccusative() {
 val fmt = RBNFRu().spelloutOrdinalNeuterAccusative
// nonsense assertEquals("минус первое", fmt.format(-1), "-1")
// nonsense assertEquals("нулевое", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первое", fmt.format(1), "1")
assertEquals("второе", fmt.format(2), "2")
assertEquals("третье", fmt.format(3), "3")
assertEquals("четвертое", fmt.format(4), "4")
assertEquals("пятое", fmt.format(5), "5")
assertEquals("шестое", fmt.format(6), "6")
assertEquals("седьмое", fmt.format(7), "7")
assertEquals("восьмое", fmt.format(8), "8")
assertEquals("девятое", fmt.format(9), "9")
assertEquals("десятое", fmt.format(10), "10")
assertEquals("одиннадцатое", fmt.format(11), "11")
assertEquals("двенадцатое", fmt.format(12), "12")
assertEquals("тринадцатое", fmt.format(13), "13")
assertEquals("четырнадцатое", fmt.format(14), "14")
assertEquals("пятнадцатое", fmt.format(15), "15")
assertEquals("шестнадцатое", fmt.format(16), "16")
assertEquals("семнадцатое", fmt.format(17), "17")
assertEquals("восемнадцатое", fmt.format(18), "18")
assertEquals("девятнадцатое", fmt.format(19), "19")
assertEquals("двадцатое", fmt.format(20), "20")
assertEquals("двадцать первое", fmt.format(21), "21")
assertEquals("двадцать второе", fmt.format(22), "22")
assertEquals("двадцать третье", fmt.format(23), "23")
assertEquals("двадцать четвертое", fmt.format(24), "24")
assertEquals("двадцать пятое", fmt.format(25), "25")
assertEquals("двадцать шестое", fmt.format(26), "26")
assertEquals("двадцать седьмое", fmt.format(27), "27")
assertEquals("двадцать восьмое", fmt.format(28), "28")
assertEquals("двадцать девятое", fmt.format(29), "29")
assertEquals("тридцатое", fmt.format(30), "30")
assertEquals("тридцать первое", fmt.format(31), "31")
assertEquals("девяносто восьмое", fmt.format(98), "98")
assertEquals("девяносто девятое", fmt.format(99), "99")
assertEquals("сотое", fmt.format(100), "100")
assertEquals("сто первое", fmt.format(101), "101")
assertEquals("сто второе", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмое", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятое", fmt.format(999), "999")
assertEquals("тысячное", fmt.format(1000), "1000")
assertEquals("одна тысяча первое", fmt.format(1001), "1001")
assertEquals("одна тысяча второе", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмое", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятое", fmt.format(1999), "1999")
assertEquals("двухтысячное", fmt.format(2000), "2000")
assertEquals("две тысячи первое", fmt.format(2001), "2001")
assertEquals("две тысячи второе", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмое", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятое", fmt.format(9999), "9999")
assertEquals("десятитысячное", fmt.format(10000), "10000")
assertEquals("десять тысяч первое", fmt.format(10001), "10001")
assertEquals("десять тысяч второе", fmt.format(10002), "10002")
assertEquals("100000-е", fmt.format(100000), "100000")
assertEquals("100001-е", fmt.format(100001), "100001")
assertEquals("100002-е", fmt.format(100002), "100002")
assertEquals("200000-е", fmt.format(200000), "200000")
assertEquals("200001-е", fmt.format(200001), "200001")
assertEquals("200002-е", fmt.format(200002), "200002")
assertEquals("1000000-е", fmt.format(1000000), "1000000")
assertEquals("1000001-е", fmt.format(1000001), "1000001")
assertEquals("1000002-е", fmt.format(1000002), "1000002")
assertEquals("2000000-е", fmt.format(2000000), "2000000")
assertEquals("2000001-е", fmt.format(2000001), "2000001")
assertEquals("2000002-е", fmt.format(2000002), "2000002")
assertEquals("10000000-е", fmt.format(10000000), "10000000")
assertEquals("10000001-е", fmt.format(10000001), "10000001")
assertEquals("10000002-е", fmt.format(10000002), "10000002")
assertEquals("20000000-е", fmt.format(20000000), "20000000")
assertEquals("20000001-е", fmt.format(20000001), "20000001")
assertEquals("20000002-е", fmt.format(20000002), "20000002")
assertEquals("100000000-е", fmt.format(100000000), "100000000")
assertEquals("100000001-е", fmt.format(100000001), "100000001")
assertEquals("100000002-е", fmt.format(100000002), "100000002")
assertEquals("200000000-е", fmt.format(200000000), "200000000")
assertEquals("200000001-е", fmt.format(200000001), "200000001")
assertEquals("200000002-е", fmt.format(200000002), "200000002")
assertEquals("1000000000-е", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-е", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-е", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-е", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-е", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-е", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalMasculineAccusative() {
 val fmt = RBNFRu().spelloutOrdinalMasculineAccusative
// nonsense assertEquals("минус первый", fmt.format(-1), "-1")
// nonsense assertEquals("нулевой", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первый", fmt.format(1), "1")
assertEquals("второй", fmt.format(2), "2")
assertEquals("третий", fmt.format(3), "3")
assertEquals("четвертый", fmt.format(4), "4")
assertEquals("пятый", fmt.format(5), "5")
assertEquals("шестой", fmt.format(6), "6")
assertEquals("седьмой", fmt.format(7), "7")
assertEquals("восьмой", fmt.format(8), "8")
assertEquals("девятый", fmt.format(9), "9")
assertEquals("десятый", fmt.format(10), "10")
assertEquals("одиннадцатый", fmt.format(11), "11")
assertEquals("двенадцатый", fmt.format(12), "12")
assertEquals("тринадцатый", fmt.format(13), "13")
assertEquals("четырнадцатый", fmt.format(14), "14")
assertEquals("пятнадцатый", fmt.format(15), "15")
assertEquals("шестнадцатый", fmt.format(16), "16")
assertEquals("семнадцатый", fmt.format(17), "17")
assertEquals("восемнадцатый", fmt.format(18), "18")
assertEquals("девятнадцатый", fmt.format(19), "19")
assertEquals("двадцатый", fmt.format(20), "20")
assertEquals("двадцать первый", fmt.format(21), "21")
assertEquals("двадцать второй", fmt.format(22), "22")
assertEquals("двадцать третий", fmt.format(23), "23")
assertEquals("двадцать четвертый", fmt.format(24), "24")
assertEquals("двадцать пятый", fmt.format(25), "25")
assertEquals("двадцать шестой", fmt.format(26), "26")
assertEquals("двадцать седьмой", fmt.format(27), "27")
assertEquals("двадцать восьмой", fmt.format(28), "28")
assertEquals("двадцать девятый", fmt.format(29), "29")
assertEquals("тридцатый", fmt.format(30), "30")
assertEquals("тридцать первый", fmt.format(31), "31")
assertEquals("девяносто восьмой", fmt.format(98), "98")
assertEquals("девяносто девятый", fmt.format(99), "99")
assertEquals("сотый", fmt.format(100), "100")
assertEquals("сто первый", fmt.format(101), "101")
assertEquals("сто второй", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмой", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятый", fmt.format(999), "999")
assertEquals("тысячный", fmt.format(1000), "1000")
assertEquals("одна тысяча первый", fmt.format(1001), "1001")
assertEquals("одна тысяча второй", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмой", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятый", fmt.format(1999), "1999")
assertEquals("двухтысячный", fmt.format(2000), "2000")
assertEquals("две тысячи первый", fmt.format(2001), "2001")
assertEquals("две тысячи второй", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмой", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятый", fmt.format(9999), "9999")
assertEquals("десятитысячный", fmt.format(10000), "10000")
assertEquals("десять тысяч первый", fmt.format(10001), "10001")
assertEquals("десять тысяч второй", fmt.format(10002), "10002")
assertEquals("100000-й", fmt.format(100000), "100000")
assertEquals("100001-й", fmt.format(100001), "100001")
assertEquals("100002-й", fmt.format(100002), "100002")
assertEquals("200000-й", fmt.format(200000), "200000")
assertEquals("200001-й", fmt.format(200001), "200001")
assertEquals("200002-й", fmt.format(200002), "200002")
assertEquals("1000000-й", fmt.format(1000000), "1000000")
assertEquals("1000001-й", fmt.format(1000001), "1000001")
assertEquals("1000002-й", fmt.format(1000002), "1000002")
assertEquals("2000000-й", fmt.format(2000000), "2000000")
assertEquals("2000001-й", fmt.format(2000001), "2000001")
assertEquals("2000002-й", fmt.format(2000002), "2000002")
assertEquals("10000000-й", fmt.format(10000000), "10000000")
assertEquals("10000001-й", fmt.format(10000001), "10000001")
assertEquals("10000002-й", fmt.format(10000002), "10000002")
assertEquals("20000000-й", fmt.format(20000000), "20000000")
assertEquals("20000001-й", fmt.format(20000001), "20000001")
assertEquals("20000002-й", fmt.format(20000002), "20000002")
assertEquals("100000000-й", fmt.format(100000000), "100000000")
assertEquals("100000001-й", fmt.format(100000001), "100000001")
assertEquals("100000002-й", fmt.format(100000002), "100000002")
assertEquals("200000000-й", fmt.format(200000000), "200000000")
assertEquals("200000001-й", fmt.format(200000001), "200000001")
assertEquals("200000002-й", fmt.format(200000002), "200000002")
assertEquals("1000000000-й", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-й", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-й", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-й", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-й", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-й", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalPluralDative() {
 val fmt = RBNFRu().spelloutOrdinalPluralDative
// nonsense assertEquals("минус первым", fmt.format(-1), "-1")
// nonsense assertEquals("нулевым", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первым", fmt.format(1), "1")
assertEquals("вторым", fmt.format(2), "2")
assertEquals("третьим", fmt.format(3), "3")
assertEquals("четвертым", fmt.format(4), "4")
assertEquals("пятым", fmt.format(5), "5")
assertEquals("шестым", fmt.format(6), "6")
assertEquals("седьмым", fmt.format(7), "7")
assertEquals("восьмым", fmt.format(8), "8")
assertEquals("девятым", fmt.format(9), "9")
assertEquals("десятым", fmt.format(10), "10")
assertEquals("одиннадцатым", fmt.format(11), "11")
assertEquals("двенадцатым", fmt.format(12), "12")
assertEquals("тринадцатым", fmt.format(13), "13")
assertEquals("четырнадцатым", fmt.format(14), "14")
assertEquals("пятнадцатым", fmt.format(15), "15")
assertEquals("шестнадцатым", fmt.format(16), "16")
assertEquals("семнадцатым", fmt.format(17), "17")
assertEquals("восемнадцатым", fmt.format(18), "18")
assertEquals("девятнадцатым", fmt.format(19), "19")
assertEquals("двадцатым", fmt.format(20), "20")
assertEquals("двадцать первым", fmt.format(21), "21")
assertEquals("двадцать вторым", fmt.format(22), "22")
assertEquals("двадцать третьим", fmt.format(23), "23")
assertEquals("двадцать четвертым", fmt.format(24), "24")
assertEquals("двадцать пятым", fmt.format(25), "25")
assertEquals("двадцать шестым", fmt.format(26), "26")
assertEquals("двадцать седьмым", fmt.format(27), "27")
assertEquals("двадцать восьмым", fmt.format(28), "28")
assertEquals("двадцать девятым", fmt.format(29), "29")
assertEquals("тридцатым", fmt.format(30), "30")
assertEquals("тридцать первым", fmt.format(31), "31")
assertEquals("девяносто восьмым", fmt.format(98), "98")
assertEquals("девяносто девятым", fmt.format(99), "99")
assertEquals("сотым", fmt.format(100), "100")
assertEquals("сто первым", fmt.format(101), "101")
assertEquals("сто вторым", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмым", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятым", fmt.format(999), "999")
assertEquals("тысячным", fmt.format(1000), "1000")
assertEquals("одна тысяча первым", fmt.format(1001), "1001")
assertEquals("одна тысяча вторым", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмым", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятым", fmt.format(1999), "1999")
assertEquals("двухтысячным", fmt.format(2000), "2000")
assertEquals("две тысячи первым", fmt.format(2001), "2001")
assertEquals("две тысячи вторым", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмым", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятым", fmt.format(9999), "9999")
assertEquals("десятитысячным", fmt.format(10000), "10000")
assertEquals("десять тысяч первым", fmt.format(10001), "10001")
assertEquals("десять тысяч вторым", fmt.format(10002), "10002")
assertEquals("100000-м", fmt.format(100000), "100000")
assertEquals("100001-м", fmt.format(100001), "100001")
assertEquals("100002-м", fmt.format(100002), "100002")
assertEquals("200000-м", fmt.format(200000), "200000")
assertEquals("200001-м", fmt.format(200001), "200001")
assertEquals("200002-м", fmt.format(200002), "200002")
assertEquals("1000000-м", fmt.format(1000000), "1000000")
assertEquals("1000001-м", fmt.format(1000001), "1000001")
assertEquals("1000002-м", fmt.format(1000002), "1000002")
assertEquals("2000000-м", fmt.format(2000000), "2000000")
assertEquals("2000001-м", fmt.format(2000001), "2000001")
assertEquals("2000002-м", fmt.format(2000002), "2000002")
assertEquals("10000000-м", fmt.format(10000000), "10000000")
assertEquals("10000001-м", fmt.format(10000001), "10000001")
assertEquals("10000002-м", fmt.format(10000002), "10000002")
assertEquals("20000000-м", fmt.format(20000000), "20000000")
assertEquals("20000001-м", fmt.format(20000001), "20000001")
assertEquals("20000002-м", fmt.format(20000002), "20000002")
assertEquals("100000000-м", fmt.format(100000000), "100000000")
assertEquals("100000001-м", fmt.format(100000001), "100000001")
assertEquals("100000002-м", fmt.format(100000002), "100000002")
assertEquals("200000000-м", fmt.format(200000000), "200000000")
assertEquals("200000001-м", fmt.format(200000001), "200000001")
assertEquals("200000002-м", fmt.format(200000002), "200000002")
assertEquals("1000000000-м", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-м", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-м", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-м", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-м", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-м", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalFeminineDative() {
 val fmt = RBNFRu().spelloutOrdinalFeminineDative
// nonsense assertEquals("минус первой", fmt.format(-1), "-1")
// nonsense assertEquals("нулевой", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первой", fmt.format(1), "1")
assertEquals("второй", fmt.format(2), "2")
assertEquals("третьей", fmt.format(3), "3")
assertEquals("четвертой", fmt.format(4), "4")
assertEquals("пятой", fmt.format(5), "5")
assertEquals("шестой", fmt.format(6), "6")
assertEquals("седьмой", fmt.format(7), "7")
assertEquals("восьмой", fmt.format(8), "8")
assertEquals("девятой", fmt.format(9), "9")
assertEquals("десятой", fmt.format(10), "10")
assertEquals("одиннадцатой", fmt.format(11), "11")
assertEquals("двенадцатой", fmt.format(12), "12")
assertEquals("тринадцатой", fmt.format(13), "13")
assertEquals("четырнадцатой", fmt.format(14), "14")
assertEquals("пятнадцатой", fmt.format(15), "15")
assertEquals("шестнадцатой", fmt.format(16), "16")
assertEquals("семнадцатой", fmt.format(17), "17")
assertEquals("восемнадцатой", fmt.format(18), "18")
assertEquals("девятнадцатой", fmt.format(19), "19")
assertEquals("двадцатой", fmt.format(20), "20")
assertEquals("двадцать первой", fmt.format(21), "21")
assertEquals("двадцать второй", fmt.format(22), "22")
assertEquals("двадцать третьей", fmt.format(23), "23")
assertEquals("двадцать четвертой", fmt.format(24), "24")
assertEquals("двадцать пятой", fmt.format(25), "25")
assertEquals("двадцать шестой", fmt.format(26), "26")
assertEquals("двадцать седьмой", fmt.format(27), "27")
assertEquals("двадцать восьмой", fmt.format(28), "28")
assertEquals("двадцать девятой", fmt.format(29), "29")
assertEquals("тридцатой", fmt.format(30), "30")
assertEquals("тридцать первой", fmt.format(31), "31")
assertEquals("девяносто восьмой", fmt.format(98), "98")
assertEquals("девяносто девятой", fmt.format(99), "99")
assertEquals("сотой", fmt.format(100), "100")
assertEquals("сто первой", fmt.format(101), "101")
assertEquals("сто второй", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмой", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятой", fmt.format(999), "999")
assertEquals("тысячной", fmt.format(1000), "1000")
assertEquals("одна тысяча первой", fmt.format(1001), "1001")
assertEquals("одна тысяча второй", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмой", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятой", fmt.format(1999), "1999")
assertEquals("двухтысячной", fmt.format(2000), "2000")
assertEquals("две тысячи первой", fmt.format(2001), "2001")
assertEquals("две тысячи второй", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмой", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятой", fmt.format(9999), "9999")
assertEquals("десятитысячной", fmt.format(10000), "10000")
assertEquals("десять тысяч первой", fmt.format(10001), "10001")
assertEquals("десять тысяч второй", fmt.format(10002), "10002")
assertEquals("100000-й", fmt.format(100000), "100000")
assertEquals("100001-й", fmt.format(100001), "100001")
assertEquals("100002-й", fmt.format(100002), "100002")
assertEquals("200000-й", fmt.format(200000), "200000")
assertEquals("200001-й", fmt.format(200001), "200001")
assertEquals("200002-й", fmt.format(200002), "200002")
assertEquals("1000000-й", fmt.format(1000000), "1000000")
assertEquals("1000001-й", fmt.format(1000001), "1000001")
assertEquals("1000002-й", fmt.format(1000002), "1000002")
assertEquals("2000000-й", fmt.format(2000000), "2000000")
assertEquals("2000001-й", fmt.format(2000001), "2000001")
assertEquals("2000002-й", fmt.format(2000002), "2000002")
assertEquals("10000000-й", fmt.format(10000000), "10000000")
assertEquals("10000001-й", fmt.format(10000001), "10000001")
assertEquals("10000002-й", fmt.format(10000002), "10000002")
assertEquals("20000000-й", fmt.format(20000000), "20000000")
assertEquals("20000001-й", fmt.format(20000001), "20000001")
assertEquals("20000002-й", fmt.format(20000002), "20000002")
assertEquals("100000000-й", fmt.format(100000000), "100000000")
assertEquals("100000001-й", fmt.format(100000001), "100000001")
assertEquals("100000002-й", fmt.format(100000002), "100000002")
assertEquals("200000000-й", fmt.format(200000000), "200000000")
assertEquals("200000001-й", fmt.format(200000001), "200000001")
assertEquals("200000002-й", fmt.format(200000002), "200000002")
assertEquals("1000000000-й", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-й", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-й", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-й", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-й", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-й", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalNeuterDative() {
 val fmt = RBNFRu().spelloutOrdinalNeuterDative
// nonsense assertEquals("минус первому", fmt.format(-1), "-1")
// nonsense assertEquals("нулевому", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первому", fmt.format(1), "1")
assertEquals("второму", fmt.format(2), "2")
assertEquals("третьому", fmt.format(3), "3")
assertEquals("четвертому", fmt.format(4), "4")
assertEquals("пятому", fmt.format(5), "5")
assertEquals("шестому", fmt.format(6), "6")
assertEquals("седьмому", fmt.format(7), "7")
assertEquals("восьмому", fmt.format(8), "8")
assertEquals("девятому", fmt.format(9), "9")
assertEquals("десятому", fmt.format(10), "10")
assertEquals("одиннадцатому", fmt.format(11), "11")
assertEquals("двенадцатому", fmt.format(12), "12")
assertEquals("тринадцатому", fmt.format(13), "13")
assertEquals("четырнадцатому", fmt.format(14), "14")
assertEquals("пятнадцатому", fmt.format(15), "15")
assertEquals("шестнадцатому", fmt.format(16), "16")
assertEquals("семнадцатому", fmt.format(17), "17")
assertEquals("восемнадцатому", fmt.format(18), "18")
assertEquals("девятнадцатому", fmt.format(19), "19")
assertEquals("двадцатому", fmt.format(20), "20")
assertEquals("двадцать первому", fmt.format(21), "21")
assertEquals("двадцать второму", fmt.format(22), "22")
assertEquals("двадцать третьому", fmt.format(23), "23")
assertEquals("двадцать четвертому", fmt.format(24), "24")
assertEquals("двадцать пятому", fmt.format(25), "25")
assertEquals("двадцать шестому", fmt.format(26), "26")
assertEquals("двадцать седьмому", fmt.format(27), "27")
assertEquals("двадцать восьмому", fmt.format(28), "28")
assertEquals("двадцать девятому", fmt.format(29), "29")
assertEquals("тридцатому", fmt.format(30), "30")
assertEquals("тридцать первому", fmt.format(31), "31")
assertEquals("девяносто восьмому", fmt.format(98), "98")
assertEquals("девяносто девятому", fmt.format(99), "99")
assertEquals("сотому", fmt.format(100), "100")
assertEquals("сто первому", fmt.format(101), "101")
assertEquals("сто второму", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмому", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятому", fmt.format(999), "999")
assertEquals("тысячному", fmt.format(1000), "1000")
assertEquals("одна тысяча первому", fmt.format(1001), "1001")
assertEquals("одна тысяча второму", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмому", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятому", fmt.format(1999), "1999")
assertEquals("двухтысячному", fmt.format(2000), "2000")
assertEquals("две тысячи первому", fmt.format(2001), "2001")
assertEquals("две тысячи второму", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмому", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятому", fmt.format(9999), "9999")
assertEquals("десятитысячному", fmt.format(10000), "10000")
assertEquals("десять тысяч первому", fmt.format(10001), "10001")
assertEquals("десять тысяч второму", fmt.format(10002), "10002")
assertEquals("100000-му", fmt.format(100000), "100000")
assertEquals("100001-му", fmt.format(100001), "100001")
assertEquals("100002-му", fmt.format(100002), "100002")
assertEquals("200000-му", fmt.format(200000), "200000")
assertEquals("200001-му", fmt.format(200001), "200001")
assertEquals("200002-му", fmt.format(200002), "200002")
assertEquals("1000000-му", fmt.format(1000000), "1000000")
assertEquals("1000001-му", fmt.format(1000001), "1000001")
assertEquals("1000002-му", fmt.format(1000002), "1000002")
assertEquals("2000000-му", fmt.format(2000000), "2000000")
assertEquals("2000001-му", fmt.format(2000001), "2000001")
assertEquals("2000002-му", fmt.format(2000002), "2000002")
assertEquals("10000000-му", fmt.format(10000000), "10000000")
assertEquals("10000001-му", fmt.format(10000001), "10000001")
assertEquals("10000002-му", fmt.format(10000002), "10000002")
assertEquals("20000000-му", fmt.format(20000000), "20000000")
assertEquals("20000001-му", fmt.format(20000001), "20000001")
assertEquals("20000002-му", fmt.format(20000002), "20000002")
assertEquals("100000000-му", fmt.format(100000000), "100000000")
assertEquals("100000001-му", fmt.format(100000001), "100000001")
assertEquals("100000002-му", fmt.format(100000002), "100000002")
assertEquals("200000000-му", fmt.format(200000000), "200000000")
assertEquals("200000001-му", fmt.format(200000001), "200000001")
assertEquals("200000002-му", fmt.format(200000002), "200000002")
assertEquals("1000000000-му", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-му", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-му", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-му", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-му", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-му", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalMasculineDative() {
 val fmt = RBNFRu().spelloutOrdinalMasculineDative
// nonsense assertEquals("минус первому", fmt.format(-1), "-1")
// nonsense assertEquals("нулевому", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первому", fmt.format(1), "1")
assertEquals("второму", fmt.format(2), "2")
assertEquals("третьому", fmt.format(3), "3")
assertEquals("четвертому", fmt.format(4), "4")
assertEquals("пятому", fmt.format(5), "5")
assertEquals("шестому", fmt.format(6), "6")
assertEquals("седьмому", fmt.format(7), "7")
assertEquals("восьмому", fmt.format(8), "8")
assertEquals("девятому", fmt.format(9), "9")
assertEquals("десятому", fmt.format(10), "10")
assertEquals("одиннадцатому", fmt.format(11), "11")
assertEquals("двенадцатому", fmt.format(12), "12")
assertEquals("тринадцатому", fmt.format(13), "13")
assertEquals("четырнадцатому", fmt.format(14), "14")
assertEquals("пятнадцатому", fmt.format(15), "15")
assertEquals("шестнадцатому", fmt.format(16), "16")
assertEquals("семнадцатому", fmt.format(17), "17")
assertEquals("восемнадцатому", fmt.format(18), "18")
assertEquals("девятнадцатому", fmt.format(19), "19")
assertEquals("двадцатому", fmt.format(20), "20")
assertEquals("двадцать первому", fmt.format(21), "21")
assertEquals("двадцать второму", fmt.format(22), "22")
assertEquals("двадцать третьому", fmt.format(23), "23")
assertEquals("двадцать четвертому", fmt.format(24), "24")
assertEquals("двадцать пятому", fmt.format(25), "25")
assertEquals("двадцать шестому", fmt.format(26), "26")
assertEquals("двадцать седьмому", fmt.format(27), "27")
assertEquals("двадцать восьмому", fmt.format(28), "28")
assertEquals("двадцать девятому", fmt.format(29), "29")
assertEquals("тридцатому", fmt.format(30), "30")
assertEquals("тридцать первому", fmt.format(31), "31")
assertEquals("девяносто восьмому", fmt.format(98), "98")
assertEquals("девяносто девятому", fmt.format(99), "99")
assertEquals("сотому", fmt.format(100), "100")
assertEquals("сто первому", fmt.format(101), "101")
assertEquals("сто второму", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмому", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятому", fmt.format(999), "999")
assertEquals("тысячному", fmt.format(1000), "1000")
assertEquals("одна тысяча первому", fmt.format(1001), "1001")
assertEquals("одна тысяча второму", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмому", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятому", fmt.format(1999), "1999")
assertEquals("двухтысячному", fmt.format(2000), "2000")
assertEquals("две тысячи первому", fmt.format(2001), "2001")
assertEquals("две тысячи второму", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмому", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятому", fmt.format(9999), "9999")
assertEquals("десятитысячному", fmt.format(10000), "10000")
assertEquals("десять тысяч первому", fmt.format(10001), "10001")
assertEquals("десять тысяч второму", fmt.format(10002), "10002")
assertEquals("100000-му", fmt.format(100000), "100000")
assertEquals("100001-му", fmt.format(100001), "100001")
assertEquals("100002-му", fmt.format(100002), "100002")
assertEquals("200000-му", fmt.format(200000), "200000")
assertEquals("200001-му", fmt.format(200001), "200001")
assertEquals("200002-му", fmt.format(200002), "200002")
assertEquals("1000000-му", fmt.format(1000000), "1000000")
assertEquals("1000001-му", fmt.format(1000001), "1000001")
assertEquals("1000002-му", fmt.format(1000002), "1000002")
assertEquals("2000000-му", fmt.format(2000000), "2000000")
assertEquals("2000001-му", fmt.format(2000001), "2000001")
assertEquals("2000002-му", fmt.format(2000002), "2000002")
assertEquals("10000000-му", fmt.format(10000000), "10000000")
assertEquals("10000001-му", fmt.format(10000001), "10000001")
assertEquals("10000002-му", fmt.format(10000002), "10000002")
assertEquals("20000000-му", fmt.format(20000000), "20000000")
assertEquals("20000001-му", fmt.format(20000001), "20000001")
assertEquals("20000002-му", fmt.format(20000002), "20000002")
assertEquals("100000000-му", fmt.format(100000000), "100000000")
assertEquals("100000001-му", fmt.format(100000001), "100000001")
assertEquals("100000002-му", fmt.format(100000002), "100000002")
assertEquals("200000000-му", fmt.format(200000000), "200000000")
assertEquals("200000001-му", fmt.format(200000001), "200000001")
assertEquals("200000002-му", fmt.format(200000002), "200000002")
assertEquals("1000000000-му", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-му", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-му", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-му", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-му", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-му", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalPluralGenitive() {
 val fmt = RBNFRu().spelloutOrdinalPluralGenitive
// nonsense assertEquals("минус первых", fmt.format(-1), "-1")
// nonsense assertEquals("нулевых", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первых", fmt.format(1), "1")
assertEquals("вторых", fmt.format(2), "2")
assertEquals("третьих", fmt.format(3), "3")
assertEquals("четвертых", fmt.format(4), "4")
assertEquals("пятых", fmt.format(5), "5")
assertEquals("шестых", fmt.format(6), "6")
assertEquals("седьмых", fmt.format(7), "7")
assertEquals("восьмых", fmt.format(8), "8")
assertEquals("девятых", fmt.format(9), "9")
assertEquals("десятых", fmt.format(10), "10")
assertEquals("одиннадцатых", fmt.format(11), "11")
assertEquals("двенадцатых", fmt.format(12), "12")
assertEquals("тринадцатых", fmt.format(13), "13")
assertEquals("четырнадцатых", fmt.format(14), "14")
assertEquals("пятнадцатых", fmt.format(15), "15")
assertEquals("шестнадцатых", fmt.format(16), "16")
assertEquals("семнадцатых", fmt.format(17), "17")
assertEquals("восемнадцатых", fmt.format(18), "18")
assertEquals("девятнадцатых", fmt.format(19), "19")
assertEquals("двадцатых", fmt.format(20), "20")
assertEquals("двадцать первых", fmt.format(21), "21")
assertEquals("двадцать вторых", fmt.format(22), "22")
assertEquals("двадцать третьих", fmt.format(23), "23")
assertEquals("двадцать четвертых", fmt.format(24), "24")
assertEquals("двадцать пятых", fmt.format(25), "25")
assertEquals("двадцать шестых", fmt.format(26), "26")
assertEquals("двадцать седьмых", fmt.format(27), "27")
assertEquals("двадцать восьмых", fmt.format(28), "28")
assertEquals("двадцать девятых", fmt.format(29), "29")
assertEquals("тридцатых", fmt.format(30), "30")
assertEquals("тридцать первых", fmt.format(31), "31")
assertEquals("девяносто восьмых", fmt.format(98), "98")
assertEquals("девяносто девятых", fmt.format(99), "99")
assertEquals("сотых", fmt.format(100), "100")
assertEquals("сто первых", fmt.format(101), "101")
assertEquals("сто вторых", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмых", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятых", fmt.format(999), "999")
assertEquals("тысячных", fmt.format(1000), "1000")
assertEquals("одна тысяча первых", fmt.format(1001), "1001")
assertEquals("одна тысяча вторых", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмых", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятых", fmt.format(1999), "1999")
assertEquals("двухтысячных", fmt.format(2000), "2000")
assertEquals("две тысячи первых", fmt.format(2001), "2001")
assertEquals("две тысячи вторых", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмых", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятых", fmt.format(9999), "9999")
assertEquals("десятитысячных", fmt.format(10000), "10000")
assertEquals("десять тысяч первых", fmt.format(10001), "10001")
assertEquals("десять тысяч вторых", fmt.format(10002), "10002")
assertEquals("100000-х", fmt.format(100000), "100000")
assertEquals("100001-х", fmt.format(100001), "100001")
assertEquals("100002-х", fmt.format(100002), "100002")
assertEquals("200000-х", fmt.format(200000), "200000")
assertEquals("200001-х", fmt.format(200001), "200001")
assertEquals("200002-х", fmt.format(200002), "200002")
assertEquals("1000000-х", fmt.format(1000000), "1000000")
assertEquals("1000001-х", fmt.format(1000001), "1000001")
assertEquals("1000002-х", fmt.format(1000002), "1000002")
assertEquals("2000000-х", fmt.format(2000000), "2000000")
assertEquals("2000001-х", fmt.format(2000001), "2000001")
assertEquals("2000002-х", fmt.format(2000002), "2000002")
assertEquals("10000000-х", fmt.format(10000000), "10000000")
assertEquals("10000001-х", fmt.format(10000001), "10000001")
assertEquals("10000002-х", fmt.format(10000002), "10000002")
assertEquals("20000000-х", fmt.format(20000000), "20000000")
assertEquals("20000001-х", fmt.format(20000001), "20000001")
assertEquals("20000002-х", fmt.format(20000002), "20000002")
assertEquals("100000000-х", fmt.format(100000000), "100000000")
assertEquals("100000001-х", fmt.format(100000001), "100000001")
assertEquals("100000002-х", fmt.format(100000002), "100000002")
assertEquals("200000000-х", fmt.format(200000000), "200000000")
assertEquals("200000001-х", fmt.format(200000001), "200000001")
assertEquals("200000002-х", fmt.format(200000002), "200000002")
assertEquals("1000000000-х", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-х", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-х", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-х", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-х", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-х", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalFeminineGenitive() {
 val fmt = RBNFRu().spelloutOrdinalFeminineGenitive
// nonsense assertEquals("минус первой", fmt.format(-1), "-1")
// nonsense assertEquals("нулевой", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первой", fmt.format(1), "1")
assertEquals("второй", fmt.format(2), "2")
assertEquals("третьей", fmt.format(3), "3")
assertEquals("четвертой", fmt.format(4), "4")
assertEquals("пятой", fmt.format(5), "5")
assertEquals("шестой", fmt.format(6), "6")
assertEquals("седьмой", fmt.format(7), "7")
assertEquals("восьмой", fmt.format(8), "8")
assertEquals("девятой", fmt.format(9), "9")
assertEquals("десятой", fmt.format(10), "10")
assertEquals("одиннадцатой", fmt.format(11), "11")
assertEquals("двенадцатой", fmt.format(12), "12")
assertEquals("тринадцатой", fmt.format(13), "13")
assertEquals("четырнадцатой", fmt.format(14), "14")
assertEquals("пятнадцатой", fmt.format(15), "15")
assertEquals("шестнадцатой", fmt.format(16), "16")
assertEquals("семнадцатой", fmt.format(17), "17")
assertEquals("восемнадцатой", fmt.format(18), "18")
assertEquals("девятнадцатой", fmt.format(19), "19")
assertEquals("двадцатой", fmt.format(20), "20")
assertEquals("двадцать первой", fmt.format(21), "21")
assertEquals("двадцать второй", fmt.format(22), "22")
assertEquals("двадцать третьей", fmt.format(23), "23")
assertEquals("двадцать четвертой", fmt.format(24), "24")
assertEquals("двадцать пятой", fmt.format(25), "25")
assertEquals("двадцать шестой", fmt.format(26), "26")
assertEquals("двадцать седьмой", fmt.format(27), "27")
assertEquals("двадцать восьмой", fmt.format(28), "28")
assertEquals("двадцать девятой", fmt.format(29), "29")
assertEquals("тридцатой", fmt.format(30), "30")
assertEquals("тридцать первой", fmt.format(31), "31")
assertEquals("девяносто восьмой", fmt.format(98), "98")
assertEquals("девяносто девятой", fmt.format(99), "99")
assertEquals("сотой", fmt.format(100), "100")
assertEquals("сто первой", fmt.format(101), "101")
assertEquals("сто второй", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмой", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятой", fmt.format(999), "999")
assertEquals("тысячной", fmt.format(1000), "1000")
assertEquals("одна тысяча первой", fmt.format(1001), "1001")
assertEquals("одна тысяча второй", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмой", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятой", fmt.format(1999), "1999")
assertEquals("двухтысячной", fmt.format(2000), "2000")
assertEquals("две тысячи первой", fmt.format(2001), "2001")
assertEquals("две тысячи второй", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмой", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятой", fmt.format(9999), "9999")
assertEquals("десятитысячной", fmt.format(10000), "10000")
assertEquals("десять тысяч первой", fmt.format(10001), "10001")
assertEquals("десять тысяч второй", fmt.format(10002), "10002")
assertEquals("100000-й", fmt.format(100000), "100000")
assertEquals("100001-й", fmt.format(100001), "100001")
assertEquals("100002-й", fmt.format(100002), "100002")
assertEquals("200000-й", fmt.format(200000), "200000")
assertEquals("200001-й", fmt.format(200001), "200001")
assertEquals("200002-й", fmt.format(200002), "200002")
assertEquals("1000000-й", fmt.format(1000000), "1000000")
assertEquals("1000001-й", fmt.format(1000001), "1000001")
assertEquals("1000002-й", fmt.format(1000002), "1000002")
assertEquals("2000000-й", fmt.format(2000000), "2000000")
assertEquals("2000001-й", fmt.format(2000001), "2000001")
assertEquals("2000002-й", fmt.format(2000002), "2000002")
assertEquals("10000000-й", fmt.format(10000000), "10000000")
assertEquals("10000001-й", fmt.format(10000001), "10000001")
assertEquals("10000002-й", fmt.format(10000002), "10000002")
assertEquals("20000000-й", fmt.format(20000000), "20000000")
assertEquals("20000001-й", fmt.format(20000001), "20000001")
assertEquals("20000002-й", fmt.format(20000002), "20000002")
assertEquals("100000000-й", fmt.format(100000000), "100000000")
assertEquals("100000001-й", fmt.format(100000001), "100000001")
assertEquals("100000002-й", fmt.format(100000002), "100000002")
assertEquals("200000000-й", fmt.format(200000000), "200000000")
assertEquals("200000001-й", fmt.format(200000001), "200000001")
assertEquals("200000002-й", fmt.format(200000002), "200000002")
assertEquals("1000000000-й", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-й", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-й", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-й", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-й", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-й", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalNeuterGenitive() {
 val fmt = RBNFRu().spelloutOrdinalNeuterGenitive
// nonsense assertEquals("минус первого", fmt.format(-1), "-1")
// nonsense assertEquals("нулевого", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первого", fmt.format(1), "1")
assertEquals("второго", fmt.format(2), "2")
assertEquals("третьего", fmt.format(3), "3")
assertEquals("четвертого", fmt.format(4), "4")
assertEquals("пятого", fmt.format(5), "5")
assertEquals("шестого", fmt.format(6), "6")
assertEquals("седьмого", fmt.format(7), "7")
assertEquals("восьмого", fmt.format(8), "8")
assertEquals("девятого", fmt.format(9), "9")
assertEquals("десятого", fmt.format(10), "10")
assertEquals("одиннадцатого", fmt.format(11), "11")
assertEquals("двенадцатого", fmt.format(12), "12")
assertEquals("тринадцатого", fmt.format(13), "13")
assertEquals("четырнадцатого", fmt.format(14), "14")
assertEquals("пятнадцатого", fmt.format(15), "15")
assertEquals("шестнадцатого", fmt.format(16), "16")
assertEquals("семнадцатого", fmt.format(17), "17")
assertEquals("восемнадцатого", fmt.format(18), "18")
assertEquals("девятнадцатого", fmt.format(19), "19")
assertEquals("двадцатого", fmt.format(20), "20")
assertEquals("двадцать первого", fmt.format(21), "21")
assertEquals("двадцать второго", fmt.format(22), "22")
assertEquals("двадцать третьего", fmt.format(23), "23")
assertEquals("двадцать четвертого", fmt.format(24), "24")
assertEquals("двадцать пятого", fmt.format(25), "25")
assertEquals("двадцать шестого", fmt.format(26), "26")
assertEquals("двадцать седьмого", fmt.format(27), "27")
assertEquals("двадцать восьмого", fmt.format(28), "28")
assertEquals("двадцать девятого", fmt.format(29), "29")
assertEquals("тридцатого", fmt.format(30), "30")
assertEquals("тридцать первого", fmt.format(31), "31")
assertEquals("девяносто восьмого", fmt.format(98), "98")
assertEquals("девяносто девятого", fmt.format(99), "99")
assertEquals("сотого", fmt.format(100), "100")
assertEquals("сто первого", fmt.format(101), "101")
assertEquals("сто второго", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмого", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятого", fmt.format(999), "999")
assertEquals("тысячного", fmt.format(1000), "1000")
assertEquals("одна тысяча первого", fmt.format(1001), "1001")
assertEquals("одна тысяча второго", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмого", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятого", fmt.format(1999), "1999")
assertEquals("двухтысячного", fmt.format(2000), "2000")
assertEquals("две тысячи первого", fmt.format(2001), "2001")
assertEquals("две тысячи второго", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмого", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятого", fmt.format(9999), "9999")
assertEquals("десятитысячного", fmt.format(10000), "10000")
assertEquals("десять тысяч первого", fmt.format(10001), "10001")
assertEquals("десять тысяч второго", fmt.format(10002), "10002")
assertEquals("100000-го", fmt.format(100000), "100000")
assertEquals("100001-го", fmt.format(100001), "100001")
assertEquals("100002-го", fmt.format(100002), "100002")
assertEquals("200000-го", fmt.format(200000), "200000")
assertEquals("200001-го", fmt.format(200001), "200001")
assertEquals("200002-го", fmt.format(200002), "200002")
assertEquals("1000000-го", fmt.format(1000000), "1000000")
assertEquals("1000001-го", fmt.format(1000001), "1000001")
assertEquals("1000002-го", fmt.format(1000002), "1000002")
assertEquals("2000000-го", fmt.format(2000000), "2000000")
assertEquals("2000001-го", fmt.format(2000001), "2000001")
assertEquals("2000002-го", fmt.format(2000002), "2000002")
assertEquals("10000000-го", fmt.format(10000000), "10000000")
assertEquals("10000001-го", fmt.format(10000001), "10000001")
assertEquals("10000002-го", fmt.format(10000002), "10000002")
assertEquals("20000000-го", fmt.format(20000000), "20000000")
assertEquals("20000001-го", fmt.format(20000001), "20000001")
assertEquals("20000002-го", fmt.format(20000002), "20000002")
assertEquals("100000000-го", fmt.format(100000000), "100000000")
assertEquals("100000001-го", fmt.format(100000001), "100000001")
assertEquals("100000002-го", fmt.format(100000002), "100000002")
assertEquals("200000000-го", fmt.format(200000000), "200000000")
assertEquals("200000001-го", fmt.format(200000001), "200000001")
assertEquals("200000002-го", fmt.format(200000002), "200000002")
assertEquals("1000000000-го", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-го", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-го", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-го", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-го", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-го", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalMasculineGenitive() {
 val fmt = RBNFRu().spelloutOrdinalMasculineGenitive
// nonsense assertEquals("минус первого", fmt.format(-1), "-1")
// nonsense assertEquals("нулевого", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первого", fmt.format(1), "1")
assertEquals("второго", fmt.format(2), "2")
assertEquals("третьего", fmt.format(3), "3")
assertEquals("четвертого", fmt.format(4), "4")
assertEquals("пятого", fmt.format(5), "5")
assertEquals("шестого", fmt.format(6), "6")
assertEquals("седьмого", fmt.format(7), "7")
assertEquals("восьмого", fmt.format(8), "8")
assertEquals("девятого", fmt.format(9), "9")
assertEquals("десятого", fmt.format(10), "10")
assertEquals("одиннадцатого", fmt.format(11), "11")
assertEquals("двенадцатого", fmt.format(12), "12")
assertEquals("тринадцатого", fmt.format(13), "13")
assertEquals("четырнадцатого", fmt.format(14), "14")
assertEquals("пятнадцатого", fmt.format(15), "15")
assertEquals("шестнадцатого", fmt.format(16), "16")
assertEquals("семнадцатого", fmt.format(17), "17")
assertEquals("восемнадцатого", fmt.format(18), "18")
assertEquals("девятнадцатого", fmt.format(19), "19")
assertEquals("двадцатого", fmt.format(20), "20")
assertEquals("двадцать первого", fmt.format(21), "21")
assertEquals("двадцать второго", fmt.format(22), "22")
assertEquals("двадцать третьего", fmt.format(23), "23")
assertEquals("двадцать четвертого", fmt.format(24), "24")
assertEquals("двадцать пятого", fmt.format(25), "25")
assertEquals("двадцать шестого", fmt.format(26), "26")
assertEquals("двадцать седьмого", fmt.format(27), "27")
assertEquals("двадцать восьмого", fmt.format(28), "28")
assertEquals("двадцать девятого", fmt.format(29), "29")
assertEquals("тридцатого", fmt.format(30), "30")
assertEquals("тридцать первого", fmt.format(31), "31")
assertEquals("девяносто восьмого", fmt.format(98), "98")
assertEquals("девяносто девятого", fmt.format(99), "99")
assertEquals("сотого", fmt.format(100), "100")
assertEquals("сто первого", fmt.format(101), "101")
assertEquals("сто второго", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмого", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятого", fmt.format(999), "999")
assertEquals("тысячного", fmt.format(1000), "1000")
assertEquals("одна тысяча первого", fmt.format(1001), "1001")
assertEquals("одна тысяча второго", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмого", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятого", fmt.format(1999), "1999")
assertEquals("двухтысячного", fmt.format(2000), "2000")
assertEquals("две тысячи первого", fmt.format(2001), "2001")
assertEquals("две тысячи второго", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмого", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятого", fmt.format(9999), "9999")
assertEquals("десятитысячного", fmt.format(10000), "10000")
assertEquals("десять тысяч первого", fmt.format(10001), "10001")
assertEquals("десять тысяч второго", fmt.format(10002), "10002")
assertEquals("100000-го", fmt.format(100000), "100000")
assertEquals("100001-го", fmt.format(100001), "100001")
assertEquals("100002-го", fmt.format(100002), "100002")
assertEquals("200000-го", fmt.format(200000), "200000")
assertEquals("200001-го", fmt.format(200001), "200001")
assertEquals("200002-го", fmt.format(200002), "200002")
assertEquals("1000000-го", fmt.format(1000000), "1000000")
assertEquals("1000001-го", fmt.format(1000001), "1000001")
assertEquals("1000002-го", fmt.format(1000002), "1000002")
assertEquals("2000000-го", fmt.format(2000000), "2000000")
assertEquals("2000001-го", fmt.format(2000001), "2000001")
assertEquals("2000002-го", fmt.format(2000002), "2000002")
assertEquals("10000000-го", fmt.format(10000000), "10000000")
assertEquals("10000001-го", fmt.format(10000001), "10000001")
assertEquals("10000002-го", fmt.format(10000002), "10000002")
assertEquals("20000000-го", fmt.format(20000000), "20000000")
assertEquals("20000001-го", fmt.format(20000001), "20000001")
assertEquals("20000002-го", fmt.format(20000002), "20000002")
assertEquals("100000000-го", fmt.format(100000000), "100000000")
assertEquals("100000001-го", fmt.format(100000001), "100000001")
assertEquals("100000002-го", fmt.format(100000002), "100000002")
assertEquals("200000000-го", fmt.format(200000000), "200000000")
assertEquals("200000001-го", fmt.format(200000001), "200000001")
assertEquals("200000002-го", fmt.format(200000002), "200000002")
assertEquals("1000000000-го", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-го", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-го", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-го", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-го", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-го", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalPlural() {
 val fmt = RBNFRu().spelloutOrdinalPlural
// nonsense assertEquals("минус первые", fmt.format(-1), "-1")
// nonsense assertEquals("нулевые", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первые", fmt.format(1), "1")
assertEquals("вторые", fmt.format(2), "2")
assertEquals("третьи", fmt.format(3), "3")
assertEquals("четвертые", fmt.format(4), "4")
assertEquals("пятые", fmt.format(5), "5")
assertEquals("шестые", fmt.format(6), "6")
assertEquals("седьмые", fmt.format(7), "7")
assertEquals("восьмые", fmt.format(8), "8")
assertEquals("девятые", fmt.format(9), "9")
assertEquals("десятые", fmt.format(10), "10")
assertEquals("одиннадцатые", fmt.format(11), "11")
assertEquals("двенадцатые", fmt.format(12), "12")
assertEquals("тринадцатые", fmt.format(13), "13")
assertEquals("четырнадцатые", fmt.format(14), "14")
assertEquals("пятнадцатые", fmt.format(15), "15")
assertEquals("шестнадцатые", fmt.format(16), "16")
assertEquals("семнадцатые", fmt.format(17), "17")
assertEquals("восемнадцатые", fmt.format(18), "18")
assertEquals("девятнадцатые", fmt.format(19), "19")
assertEquals("двадцатые", fmt.format(20), "20")
assertEquals("двадцать первые", fmt.format(21), "21")
assertEquals("двадцать вторые", fmt.format(22), "22")
assertEquals("двадцать третьи", fmt.format(23), "23")
assertEquals("двадцать четвертые", fmt.format(24), "24")
assertEquals("двадцать пятые", fmt.format(25), "25")
assertEquals("двадцать шестые", fmt.format(26), "26")
assertEquals("двадцать седьмые", fmt.format(27), "27")
assertEquals("двадцать восьмые", fmt.format(28), "28")
assertEquals("двадцать девятые", fmt.format(29), "29")
assertEquals("тридцатые", fmt.format(30), "30")
assertEquals("тридцать первые", fmt.format(31), "31")
assertEquals("девяносто восьмые", fmt.format(98), "98")
assertEquals("девяносто девятые", fmt.format(99), "99")
assertEquals("сотые", fmt.format(100), "100")
assertEquals("сто первые", fmt.format(101), "101")
assertEquals("сто вторые", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмые", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятые", fmt.format(999), "999")
assertEquals("тысячные", fmt.format(1000), "1000")
assertEquals("одна тысяча первые", fmt.format(1001), "1001")
assertEquals("одна тысяча вторые", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмые", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятые", fmt.format(1999), "1999")
assertEquals("двухтысячные", fmt.format(2000), "2000")
assertEquals("две тысячи первые", fmt.format(2001), "2001")
assertEquals("две тысячи вторые", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмые", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятые", fmt.format(9999), "9999")
assertEquals("десятитысячные", fmt.format(10000), "10000")
assertEquals("десять тысяч первые", fmt.format(10001), "10001")
assertEquals("десять тысяч вторые", fmt.format(10002), "10002")
assertEquals("100000-e", fmt.format(100000), "100000")
assertEquals("100001-e", fmt.format(100001), "100001")
assertEquals("100002-e", fmt.format(100002), "100002")
assertEquals("200000-e", fmt.format(200000), "200000")
assertEquals("200001-e", fmt.format(200001), "200001")
assertEquals("200002-e", fmt.format(200002), "200002")
assertEquals("1000000-e", fmt.format(1000000), "1000000")
assertEquals("1000001-e", fmt.format(1000001), "1000001")
assertEquals("1000002-e", fmt.format(1000002), "1000002")
assertEquals("2000000-e", fmt.format(2000000), "2000000")
assertEquals("2000001-e", fmt.format(2000001), "2000001")
assertEquals("2000002-e", fmt.format(2000002), "2000002")
assertEquals("10000000-e", fmt.format(10000000), "10000000")
assertEquals("10000001-e", fmt.format(10000001), "10000001")
assertEquals("10000002-e", fmt.format(10000002), "10000002")
assertEquals("20000000-e", fmt.format(20000000), "20000000")
assertEquals("20000001-e", fmt.format(20000001), "20000001")
assertEquals("20000002-e", fmt.format(20000002), "20000002")
assertEquals("100000000-e", fmt.format(100000000), "100000000")
assertEquals("100000001-e", fmt.format(100000001), "100000001")
assertEquals("100000002-e", fmt.format(100000002), "100000002")
assertEquals("200000000-e", fmt.format(200000000), "200000000")
assertEquals("200000001-e", fmt.format(200000001), "200000001")
assertEquals("200000002-e", fmt.format(200000002), "200000002")
assertEquals("1000000000-e", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-e", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-e", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-e", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-e", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-e", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalFeminine() {
 val fmt = RBNFRu().spelloutOrdinalFeminine
// nonsense assertEquals("минус первая", fmt.format(-1), "-1")
// nonsense assertEquals("ноль", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первая", fmt.format(1), "1")
assertEquals("вторая", fmt.format(2), "2")
assertEquals("третья", fmt.format(3), "3")
assertEquals("четвертая", fmt.format(4), "4")
assertEquals("пятая", fmt.format(5), "5")
assertEquals("шестая", fmt.format(6), "6")
assertEquals("седьмая", fmt.format(7), "7")
assertEquals("восьмая", fmt.format(8), "8")
assertEquals("девятая", fmt.format(9), "9")
assertEquals("десятая", fmt.format(10), "10")
assertEquals("одиннадцатая", fmt.format(11), "11")
assertEquals("двенадцатая", fmt.format(12), "12")
assertEquals("тринадцатая", fmt.format(13), "13")
assertEquals("четырнадцатая", fmt.format(14), "14")
assertEquals("пятнадцатая", fmt.format(15), "15")
assertEquals("шестнадцатая", fmt.format(16), "16")
assertEquals("семнадцатая", fmt.format(17), "17")
assertEquals("восемнадцатая", fmt.format(18), "18")
assertEquals("девятнадцатая", fmt.format(19), "19")
assertEquals("двадцатая", fmt.format(20), "20")
assertEquals("двадцать первая", fmt.format(21), "21")
assertEquals("двадцать вторая", fmt.format(22), "22")
assertEquals("двадцать третья", fmt.format(23), "23")
assertEquals("двадцать четвертая", fmt.format(24), "24")
assertEquals("двадцать пятая", fmt.format(25), "25")
assertEquals("двадцать шестая", fmt.format(26), "26")
assertEquals("двадцать седьмая", fmt.format(27), "27")
assertEquals("двадцать восьмая", fmt.format(28), "28")
assertEquals("двадцать девятая", fmt.format(29), "29")
assertEquals("тридцатая", fmt.format(30), "30")
assertEquals("тридцать первая", fmt.format(31), "31")
assertEquals("девяносто восьмая", fmt.format(98), "98")
assertEquals("девяносто девятая", fmt.format(99), "99")
assertEquals("сотая", fmt.format(100), "100")
assertEquals("сто первая", fmt.format(101), "101")
assertEquals("сто вторая", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмая", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятая", fmt.format(999), "999")
assertEquals("тысячная", fmt.format(1000), "1000")
assertEquals("одна тысяча первая", fmt.format(1001), "1001")
assertEquals("одна тысяча вторая", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмая", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятая", fmt.format(1999), "1999")
assertEquals("двухтысячная", fmt.format(2000), "2000")
assertEquals("две тысячи первая", fmt.format(2001), "2001")
assertEquals("две тысячи вторая", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмая", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятая", fmt.format(9999), "9999")
assertEquals("десятитысячная", fmt.format(10000), "10000")
assertEquals("десять тысяч первая", fmt.format(10001), "10001")
assertEquals("десять тысяч вторая", fmt.format(10002), "10002")
assertEquals("100000-я", fmt.format(100000), "100000")
assertEquals("100001-я", fmt.format(100001), "100001")
assertEquals("100002-я", fmt.format(100002), "100002")
assertEquals("200000-я", fmt.format(200000), "200000")
assertEquals("200001-я", fmt.format(200001), "200001")
assertEquals("200002-я", fmt.format(200002), "200002")
assertEquals("1000000-я", fmt.format(1000000), "1000000")
assertEquals("1000001-я", fmt.format(1000001), "1000001")
assertEquals("1000002-я", fmt.format(1000002), "1000002")
assertEquals("2000000-я", fmt.format(2000000), "2000000")
assertEquals("2000001-я", fmt.format(2000001), "2000001")
assertEquals("2000002-я", fmt.format(2000002), "2000002")
assertEquals("10000000-я", fmt.format(10000000), "10000000")
assertEquals("10000001-я", fmt.format(10000001), "10000001")
assertEquals("10000002-я", fmt.format(10000002), "10000002")
assertEquals("20000000-я", fmt.format(20000000), "20000000")
assertEquals("20000001-я", fmt.format(20000001), "20000001")
assertEquals("20000002-я", fmt.format(20000002), "20000002")
assertEquals("100000000-я", fmt.format(100000000), "100000000")
assertEquals("100000001-я", fmt.format(100000001), "100000001")
assertEquals("100000002-я", fmt.format(100000002), "100000002")
assertEquals("200000000-я", fmt.format(200000000), "200000000")
assertEquals("200000001-я", fmt.format(200000001), "200000001")
assertEquals("200000002-я", fmt.format(200000002), "200000002")
assertEquals("1000000000-я", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-я", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-я", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-я", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-я", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-я", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalNeuter() {
 val fmt = RBNFRu().spelloutOrdinalNeuter
// nonsense assertEquals("минус первое", fmt.format(-1), "-1")
// nonsense assertEquals("нулевое", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первое", fmt.format(1), "1")
assertEquals("второе", fmt.format(2), "2")
assertEquals("третье", fmt.format(3), "3")
assertEquals("четвертое", fmt.format(4), "4")
assertEquals("пятое", fmt.format(5), "5")
assertEquals("шестое", fmt.format(6), "6")
assertEquals("седьмое", fmt.format(7), "7")
assertEquals("восьмое", fmt.format(8), "8")
assertEquals("девятое", fmt.format(9), "9")
assertEquals("десятое", fmt.format(10), "10")
assertEquals("одиннадцатое", fmt.format(11), "11")
assertEquals("двенадцатое", fmt.format(12), "12")
assertEquals("тринадцатое", fmt.format(13), "13")
assertEquals("четырнадцатое", fmt.format(14), "14")
assertEquals("пятнадцатое", fmt.format(15), "15")
assertEquals("шестнадцатое", fmt.format(16), "16")
assertEquals("семнадцатое", fmt.format(17), "17")
assertEquals("восемнадцатое", fmt.format(18), "18")
assertEquals("девятнадцатое", fmt.format(19), "19")
assertEquals("двадцатое", fmt.format(20), "20")
assertEquals("двадцать первое", fmt.format(21), "21")
assertEquals("двадцать второе", fmt.format(22), "22")
assertEquals("двадцать третье", fmt.format(23), "23")
assertEquals("двадцать четвертое", fmt.format(24), "24")
assertEquals("двадцать пятое", fmt.format(25), "25")
assertEquals("двадцать шестое", fmt.format(26), "26")
assertEquals("двадцать седьмое", fmt.format(27), "27")
assertEquals("двадцать восьмое", fmt.format(28), "28")
assertEquals("двадцать девятое", fmt.format(29), "29")
assertEquals("тридцатое", fmt.format(30), "30")
assertEquals("тридцать первое", fmt.format(31), "31")
assertEquals("девяносто восьмое", fmt.format(98), "98")
assertEquals("девяносто девятое", fmt.format(99), "99")
assertEquals("сотое", fmt.format(100), "100")
assertEquals("сто первое", fmt.format(101), "101")
assertEquals("сто второе", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмое", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятое", fmt.format(999), "999")
assertEquals("тысячное", fmt.format(1000), "1000")
assertEquals("одна тысяча первое", fmt.format(1001), "1001")
assertEquals("одна тысяча второе", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмое", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятое", fmt.format(1999), "1999")
assertEquals("двухтысячное", fmt.format(2000), "2000")
assertEquals("две тысячи первое", fmt.format(2001), "2001")
assertEquals("две тысячи второе", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмое", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятое", fmt.format(9999), "9999")
assertEquals("десятитысячное", fmt.format(10000), "10000")
assertEquals("десять тысяч первое", fmt.format(10001), "10001")
assertEquals("десять тысяч второе", fmt.format(10002), "10002")
assertEquals("100000-е", fmt.format(100000), "100000")
assertEquals("100001-е", fmt.format(100001), "100001")
assertEquals("100002-е", fmt.format(100002), "100002")
assertEquals("200000-е", fmt.format(200000), "200000")
assertEquals("200001-е", fmt.format(200001), "200001")
assertEquals("200002-е", fmt.format(200002), "200002")
assertEquals("1000000-е", fmt.format(1000000), "1000000")
assertEquals("1000001-е", fmt.format(1000001), "1000001")
assertEquals("1000002-е", fmt.format(1000002), "1000002")
assertEquals("2000000-е", fmt.format(2000000), "2000000")
assertEquals("2000001-е", fmt.format(2000001), "2000001")
assertEquals("2000002-е", fmt.format(2000002), "2000002")
assertEquals("10000000-е", fmt.format(10000000), "10000000")
assertEquals("10000001-е", fmt.format(10000001), "10000001")
assertEquals("10000002-е", fmt.format(10000002), "10000002")
assertEquals("20000000-е", fmt.format(20000000), "20000000")
assertEquals("20000001-е", fmt.format(20000001), "20000001")
assertEquals("20000002-е", fmt.format(20000002), "20000002")
assertEquals("100000000-е", fmt.format(100000000), "100000000")
assertEquals("100000001-е", fmt.format(100000001), "100000001")
assertEquals("100000002-е", fmt.format(100000002), "100000002")
assertEquals("200000000-е", fmt.format(200000000), "200000000")
assertEquals("200000001-е", fmt.format(200000001), "200000001")
assertEquals("200000002-е", fmt.format(200000002), "200000002")
assertEquals("1000000000-е", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-е", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-е", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-е", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-е", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-е", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutOrdinalMasculine() {
 val fmt = RBNFRu().spelloutOrdinalMasculine
// nonsense assertEquals("минус первый", fmt.format(-1), "-1")
// nonsense assertEquals("нулевой", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("первый", fmt.format(1), "1")
assertEquals("второй", fmt.format(2), "2")
assertEquals("третий", fmt.format(3), "3")
assertEquals("четвертый", fmt.format(4), "4")
assertEquals("пятый", fmt.format(5), "5")
assertEquals("шестой", fmt.format(6), "6")
assertEquals("седьмой", fmt.format(7), "7")
assertEquals("восьмой", fmt.format(8), "8")
assertEquals("девятый", fmt.format(9), "9")
assertEquals("десятый", fmt.format(10), "10")
assertEquals("одиннадцатый", fmt.format(11), "11")
assertEquals("двенадцатый", fmt.format(12), "12")
assertEquals("тринадцатый", fmt.format(13), "13")
assertEquals("четырнадцатый", fmt.format(14), "14")
assertEquals("пятнадцатый", fmt.format(15), "15")
assertEquals("шестнадцатый", fmt.format(16), "16")
assertEquals("семнадцатый", fmt.format(17), "17")
assertEquals("восемнадцатый", fmt.format(18), "18")
assertEquals("девятнадцатый", fmt.format(19), "19")
assertEquals("двадцатый", fmt.format(20), "20")
assertEquals("двадцать первый", fmt.format(21), "21")
assertEquals("двадцать второй", fmt.format(22), "22")
assertEquals("двадцать третий", fmt.format(23), "23")
assertEquals("двадцать четвертый", fmt.format(24), "24")
assertEquals("двадцать пятый", fmt.format(25), "25")
assertEquals("двадцать шестой", fmt.format(26), "26")
assertEquals("двадцать седьмой", fmt.format(27), "27")
assertEquals("двадцать восьмой", fmt.format(28), "28")
assertEquals("двадцать девятый", fmt.format(29), "29")
assertEquals("тридцатый", fmt.format(30), "30")
assertEquals("тридцать первый", fmt.format(31), "31")
assertEquals("девяносто восьмой", fmt.format(98), "98")
assertEquals("девяносто девятый", fmt.format(99), "99")
assertEquals("сотый", fmt.format(100), "100")
assertEquals("сто первый", fmt.format(101), "101")
assertEquals("сто второй", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмой", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятый", fmt.format(999), "999")
assertEquals("тысячный", fmt.format(1000), "1000")
assertEquals("одна тысяча первый", fmt.format(1001), "1001")
assertEquals("одна тысяча второй", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмой", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятый", fmt.format(1999), "1999")
assertEquals("двухтысячный", fmt.format(2000), "2000")
assertEquals("две тысячи первый", fmt.format(2001), "2001")
assertEquals("две тысячи второй", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмой", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятый", fmt.format(9999), "9999")
assertEquals("десятитысячный", fmt.format(10000), "10000")
assertEquals("десять тысяч первый", fmt.format(10001), "10001")
assertEquals("десять тысяч второй", fmt.format(10002), "10002")
assertEquals("100000-й", fmt.format(100000), "100000")
assertEquals("100001-й", fmt.format(100001), "100001")
assertEquals("100002-й", fmt.format(100002), "100002")
assertEquals("200000-й", fmt.format(200000), "200000")
assertEquals("200001-й", fmt.format(200001), "200001")
assertEquals("200002-й", fmt.format(200002), "200002")
assertEquals("1000000-й", fmt.format(1000000), "1000000")
assertEquals("1000001-й", fmt.format(1000001), "1000001")
assertEquals("1000002-й", fmt.format(1000002), "1000002")
assertEquals("2000000-й", fmt.format(2000000), "2000000")
assertEquals("2000001-й", fmt.format(2000001), "2000001")
assertEquals("2000002-й", fmt.format(2000002), "2000002")
assertEquals("10000000-й", fmt.format(10000000), "10000000")
assertEquals("10000001-й", fmt.format(10000001), "10000001")
assertEquals("10000002-й", fmt.format(10000002), "10000002")
assertEquals("20000000-й", fmt.format(20000000), "20000000")
assertEquals("20000001-й", fmt.format(20000001), "20000001")
assertEquals("20000002-й", fmt.format(20000002), "20000002")
assertEquals("100000000-й", fmt.format(100000000), "100000000")
assertEquals("100000001-й", fmt.format(100000001), "100000001")
assertEquals("100000002-й", fmt.format(100000002), "100000002")
assertEquals("200000000-й", fmt.format(200000000), "200000000")
assertEquals("200000001-й", fmt.format(200000001), "200000001")
assertEquals("200000002-й", fmt.format(200000002), "200000002")
assertEquals("1000000000-й", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-й", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-й", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-й", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-й", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-й", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalPluralAblative() {
 val fmt = RBNFRu().spelloutCardinalPluralAblative
assertEquals("минус одними", fmt.format(-1), "-1")
assertEquals("нулем", fmt.format(0), "0")
assertEquals("нулем запятая двумя", fmt.format(0.2), "0.2")
assertEquals("нулем запятая двумя тремя четырьмя пятью", fmt.format(0.2345), "0.2345")
assertEquals("нулем запятая нулем двумя", fmt.format(0.02), "0.02")
assertEquals("нулем запятая нулем двумя одними тремя", fmt.format(0.0213), "0.0213")
assertEquals("четырьмя запятая семью пятью одними", fmt.format(4.751), "4.751")
assertEquals("двенадцатью запятая нулем пятью одними", fmt.format(12.051), "12.051")
assertEquals("тринадцатью запятая нулем двумя пятью одними", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцатью запятая нулем двумя двумя пятью одними", fmt.format(14.02251), "14.02251")
assertEquals("одними", fmt.format(1), "1")
assertEquals("двумя", fmt.format(2), "2")
assertEquals("тремя", fmt.format(3), "3")
assertEquals("четырьмя", fmt.format(4), "4")
assertEquals("пятью", fmt.format(5), "5")
assertEquals("шестью", fmt.format(6), "6")
assertEquals("семью", fmt.format(7), "7")
assertEquals("восемью", fmt.format(8), "8")
assertEquals("девятью", fmt.format(9), "9")
assertEquals("десятью", fmt.format(10), "10")
assertEquals("одиннадцатью", fmt.format(11), "11")
assertEquals("двенадцатью", fmt.format(12), "12")
assertEquals("тринадцатью", fmt.format(13), "13")
assertEquals("четырнадцатью", fmt.format(14), "14")
assertEquals("пятнадцатью", fmt.format(15), "15")
assertEquals("шестнадцатью", fmt.format(16), "16")
assertEquals("семнадцатью", fmt.format(17), "17")
assertEquals("восемнадцатью", fmt.format(18), "18")
assertEquals("девятнадцатью", fmt.format(19), "19")
assertEquals("двадцатью", fmt.format(20), "20")
assertEquals("двадцатью одними", fmt.format(21), "21")
assertEquals("двадцатью двумя", fmt.format(22), "22")
assertEquals("двадцатью тремя", fmt.format(23), "23")
assertEquals("двадцатью четырьмя", fmt.format(24), "24")
assertEquals("двадцатью пятью", fmt.format(25), "25")
assertEquals("двадцатью шестью", fmt.format(26), "26")
assertEquals("двадцатью семью", fmt.format(27), "27")
assertEquals("двадцатью восемью", fmt.format(28), "28")
assertEquals("двадцатью девятью", fmt.format(29), "29")
assertEquals("тридцатью", fmt.format(30), "30")
assertEquals("тридцатью одними", fmt.format(31), "31")
assertEquals("девяноста восемью", fmt.format(98), "98")
assertEquals("девяноста девятью", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одними", fmt.format(101), "101")
assertEquals("ста двумя", fmt.format(102), "102")
assertEquals("девятьюстами девяноста восемью", fmt.format(998), "998")
assertEquals("девятьюстами девяноста девятью", fmt.format(999), "999")
assertEquals("одной тысячей", fmt.format(1000), "1000")
assertEquals("одной тысячей одними", fmt.format(1001), "1001")
assertEquals("одной тысячей двумя", fmt.format(1002), "1002")
assertEquals("одной тысячей девятьюстами девяноста восемью", fmt.format(1998), "1998")
assertEquals("одной тысячей девятьюстами девяноста девятью", fmt.format(1999), "1999")
assertEquals("двумя тысячами", fmt.format(2000), "2000")
assertEquals("двумя тысячами одними", fmt.format(2001), "2001")
assertEquals("двумя тысячами двумя", fmt.format(2002), "2002")
assertEquals("девятью тысячами девятьюстами девяноста восемью", fmt.format(9998), "9998")
assertEquals("девятью тысячами девятьюстами девяноста девятью", fmt.format(9999), "9999")
assertEquals("десятью тысячами", fmt.format(10000), "10000")
assertEquals("десятью тысячами одними", fmt.format(10001), "10001")
assertEquals("десятью тысячами двумя", fmt.format(10002), "10002")
assertEquals("ста тысячами", fmt.format(100000), "100000")
assertEquals("ста тысячами одними", fmt.format(100001), "100001")
assertEquals("ста тысячами двумя", fmt.format(100002), "100002")
assertEquals("двумястами тысячами", fmt.format(200000), "200000")
assertEquals("двумястами тысячами одними", fmt.format(200001), "200001")
assertEquals("двумястами тысячами двумя", fmt.format(200002), "200002")
assertEquals("одним миллионом", fmt.format(1000000), "1000000")
assertEquals("одним миллионом одними", fmt.format(1000001), "1000001")
assertEquals("одним миллионом двумя", fmt.format(1000002), "1000002")
assertEquals("двумя миллионами", fmt.format(2000000), "2000000")
assertEquals("двумя миллионами одними", fmt.format(2000001), "2000001")
assertEquals("двумя миллионами двумя", fmt.format(2000002), "2000002")
assertEquals("десятью миллионами", fmt.format(10000000), "10000000")
assertEquals("десятью миллионами одними", fmt.format(10000001), "10000001")
assertEquals("десятью миллионами двумя", fmt.format(10000002), "10000002")
assertEquals("двадцатью миллионами", fmt.format(20000000), "20000000")
assertEquals("двадцатью миллионами одними", fmt.format(20000001), "20000001")
assertEquals("двадцатью миллионами двумя", fmt.format(20000002), "20000002")
assertEquals("ста миллионами", fmt.format(100000000), "100000000")
assertEquals("ста миллионами одними", fmt.format(100000001), "100000001")
assertEquals("ста миллионами двумя", fmt.format(100000002), "100000002")
assertEquals("двумястами миллионами", fmt.format(200000000), "200000000")
assertEquals("двумястами миллионами одними", fmt.format(200000001), "200000001")
assertEquals("двумястами миллионами двумя", fmt.format(200000002), "200000002")
assertEquals("одним миллиардом", fmt.format(1000000000), "1000000000")
assertEquals("одним миллиардом одними", fmt.format(1000000001), "1000000001")
assertEquals("одним миллиардом двумя", fmt.format(1000000002), "1000000002")
assertEquals("двумя миллиардами", fmt.format(2000000000), "2000000000")
assertEquals("двумя миллиардами одними", fmt.format(2000000001), "2000000001")
assertEquals("двумя миллиардами двумя", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalFeminineAblative() {
 val fmt = RBNFRu().spelloutCardinalFeminineAblative
assertEquals("минус одной", fmt.format(-1), "-1")
assertEquals("нулем", fmt.format(0), "0")
assertEquals("двумя десятыми", fmt.format(0.2), "0.2")
assertEquals("двумя тысячами тремястами сорока пятью десятитысячными", fmt.format(0.2345), "0.2345")
assertEquals("двумя сотыми", fmt.format(0.02), "0.02")
assertEquals("двумястами тринадцатью десятитысячными", fmt.format(0.0213), "0.0213")
assertEquals("четырьмя целыми семьюстами пятьюдесятью одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцатью целыми пятьюдесятью одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцатью целыми двумястами пятьюдесятью одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцатью целыми двумя тысячами двумястами пятьюдесятью одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одной", fmt.format(1), "1")
assertEquals("двумя", fmt.format(2), "2")
assertEquals("тремя", fmt.format(3), "3")
assertEquals("четырьмя", fmt.format(4), "4")
assertEquals("пятью", fmt.format(5), "5")
assertEquals("шестью", fmt.format(6), "6")
assertEquals("семью", fmt.format(7), "7")
assertEquals("восемью", fmt.format(8), "8")
assertEquals("девятью", fmt.format(9), "9")
assertEquals("десятью", fmt.format(10), "10")
assertEquals("одиннадцатью", fmt.format(11), "11")
assertEquals("двенадцатью", fmt.format(12), "12")
assertEquals("тринадцатью", fmt.format(13), "13")
assertEquals("четырнадцатью", fmt.format(14), "14")
assertEquals("пятнадцатью", fmt.format(15), "15")
assertEquals("шестнадцатью", fmt.format(16), "16")
assertEquals("семнадцатью", fmt.format(17), "17")
assertEquals("восемнадцатью", fmt.format(18), "18")
assertEquals("девятнадцатью", fmt.format(19), "19")
assertEquals("двадцатью", fmt.format(20), "20")
assertEquals("двадцатью одной", fmt.format(21), "21")
assertEquals("двадцатью двумя", fmt.format(22), "22")
assertEquals("двадцатью тремя", fmt.format(23), "23")
assertEquals("двадцатью четырьмя", fmt.format(24), "24")
assertEquals("двадцатью пятью", fmt.format(25), "25")
assertEquals("двадцатью шестью", fmt.format(26), "26")
assertEquals("двадцатью семью", fmt.format(27), "27")
assertEquals("двадцатью восемью", fmt.format(28), "28")
assertEquals("двадцатью девятью", fmt.format(29), "29")
assertEquals("тридцатью", fmt.format(30), "30")
assertEquals("тридцатью одной", fmt.format(31), "31")
assertEquals("девяноста восемью", fmt.format(98), "98")
assertEquals("девяноста девятью", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одной", fmt.format(101), "101")
assertEquals("ста двумя", fmt.format(102), "102")
assertEquals("девятьюстами девяноста восемью", fmt.format(998), "998")
assertEquals("девятьюстами девяноста девятью", fmt.format(999), "999")
assertEquals("одной тысячей", fmt.format(1000), "1000")
assertEquals("одной тысячей одной", fmt.format(1001), "1001")
assertEquals("одной тысячей двумя", fmt.format(1002), "1002")
assertEquals("одной тысячей девятьюстами девяноста восемью", fmt.format(1998), "1998")
assertEquals("одной тысячей девятьюстами девяноста девятью", fmt.format(1999), "1999")
assertEquals("двумя тысячами", fmt.format(2000), "2000")
assertEquals("двумя тысячами одной", fmt.format(2001), "2001")
assertEquals("двумя тысячами двумя", fmt.format(2002), "2002")
assertEquals("девятью тысячами девятьюстами девяноста восемью", fmt.format(9998), "9998")
assertEquals("девятью тысячами девятьюстами девяноста девятью", fmt.format(9999), "9999")
assertEquals("десятью тысячами", fmt.format(10000), "10000")
assertEquals("десятью тысячами одной", fmt.format(10001), "10001")
assertEquals("десятью тысячами двумя", fmt.format(10002), "10002")
assertEquals("ста тысячами", fmt.format(100000), "100000")
assertEquals("ста тысячами одной", fmt.format(100001), "100001")
assertEquals("ста тысячами двумя", fmt.format(100002), "100002")
assertEquals("двумястами тысячами", fmt.format(200000), "200000")
assertEquals("двумястами тысячами одной", fmt.format(200001), "200001")
assertEquals("двумястами тысячами двумя", fmt.format(200002), "200002")
assertEquals("одним миллионом", fmt.format(1000000), "1000000")
assertEquals("одним миллионом одной", fmt.format(1000001), "1000001")
assertEquals("одним миллионом двумя", fmt.format(1000002), "1000002")
assertEquals("двумя миллионами", fmt.format(2000000), "2000000")
assertEquals("двумя миллионами одной", fmt.format(2000001), "2000001")
assertEquals("двумя миллионами двумя", fmt.format(2000002), "2000002")
assertEquals("десятью миллионами", fmt.format(10000000), "10000000")
assertEquals("десятью миллионами одной", fmt.format(10000001), "10000001")
assertEquals("десятью миллионами двумя", fmt.format(10000002), "10000002")
assertEquals("двадцатью миллионами", fmt.format(20000000), "20000000")
assertEquals("двадцатью миллионами одной", fmt.format(20000001), "20000001")
assertEquals("двадцатью миллионами двумя", fmt.format(20000002), "20000002")
assertEquals("ста миллионами", fmt.format(100000000), "100000000")
assertEquals("ста миллионами одной", fmt.format(100000001), "100000001")
assertEquals("ста миллионами двумя", fmt.format(100000002), "100000002")
assertEquals("двумястами миллионами", fmt.format(200000000), "200000000")
assertEquals("двумястами миллионами одной", fmt.format(200000001), "200000001")
assertEquals("двумястами миллионами двумя", fmt.format(200000002), "200000002")
assertEquals("одним миллиардом", fmt.format(1000000000), "1000000000")
assertEquals("одним миллиардом одной", fmt.format(1000000001), "1000000001")
assertEquals("одним миллиардом двумя", fmt.format(1000000002), "1000000002")
assertEquals("двумя миллиардами", fmt.format(2000000000), "2000000000")
assertEquals("двумя миллиардами одной", fmt.format(2000000001), "2000000001")
assertEquals("двумя миллиардами двумя", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalNeuterAblative() {
 val fmt = RBNFRu().spelloutCardinalNeuterAblative
assertEquals("минус одним", fmt.format(-1), "-1")
assertEquals("нулем", fmt.format(0), "0")
assertEquals("двумя десятыми", fmt.format(0.2), "0.2")
assertEquals("двумя тысячами тремястами сорока пятью десятитысячными", fmt.format(0.2345), "0.2345")
assertEquals("двумя сотыми", fmt.format(0.02), "0.02")
assertEquals("двумястами тринадцатью десятитысячными", fmt.format(0.0213), "0.0213")
assertEquals("четырьмя целыми семьюстами пятьюдесятью одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцатью целыми пятьюдесятью одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцатью целыми двумястами пятьюдесятью одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцатью целыми двумя тысячами двумястами пятьюдесятью одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одним", fmt.format(1), "1")
assertEquals("двумя", fmt.format(2), "2")
assertEquals("тремя", fmt.format(3), "3")
assertEquals("четырьмя", fmt.format(4), "4")
assertEquals("пятью", fmt.format(5), "5")
assertEquals("шестью", fmt.format(6), "6")
assertEquals("семью", fmt.format(7), "7")
assertEquals("восемью", fmt.format(8), "8")
assertEquals("девятью", fmt.format(9), "9")
assertEquals("десятью", fmt.format(10), "10")
assertEquals("одиннадцатью", fmt.format(11), "11")
assertEquals("двенадцатью", fmt.format(12), "12")
assertEquals("тринадцатью", fmt.format(13), "13")
assertEquals("четырнадцатью", fmt.format(14), "14")
assertEquals("пятнадцатью", fmt.format(15), "15")
assertEquals("шестнадцатью", fmt.format(16), "16")
assertEquals("семнадцатью", fmt.format(17), "17")
assertEquals("восемнадцатью", fmt.format(18), "18")
assertEquals("девятнадцатью", fmt.format(19), "19")
assertEquals("двадцатью", fmt.format(20), "20")
assertEquals("двадцатью одним", fmt.format(21), "21")
assertEquals("двадцатью двумя", fmt.format(22), "22")
assertEquals("двадцатью тремя", fmt.format(23), "23")
assertEquals("двадцатью четырьмя", fmt.format(24), "24")
assertEquals("двадцатью пятью", fmt.format(25), "25")
assertEquals("двадцатью шестью", fmt.format(26), "26")
assertEquals("двадцатью семью", fmt.format(27), "27")
assertEquals("двадцатью восемью", fmt.format(28), "28")
assertEquals("двадцатью девятью", fmt.format(29), "29")
assertEquals("тридцатью", fmt.format(30), "30")
assertEquals("тридцатью одним", fmt.format(31), "31")
assertEquals("девяноста восемью", fmt.format(98), "98")
assertEquals("девяноста девятью", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одним", fmt.format(101), "101")
assertEquals("ста двумя", fmt.format(102), "102")
assertEquals("девятьюстами девяноста восемью", fmt.format(998), "998")
assertEquals("девятьюстами девяноста девятью", fmt.format(999), "999")
assertEquals("одной тысячей", fmt.format(1000), "1000")
assertEquals("одной тысячей одним", fmt.format(1001), "1001")
assertEquals("одной тысячей двумя", fmt.format(1002), "1002")
assertEquals("одной тысячей девятьюстами девяноста восемью", fmt.format(1998), "1998")
assertEquals("одной тысячей девятьюстами девяноста девятью", fmt.format(1999), "1999")
assertEquals("двумя тысячами", fmt.format(2000), "2000")
assertEquals("двумя тысячами одним", fmt.format(2001), "2001")
assertEquals("двумя тысячами двумя", fmt.format(2002), "2002")
assertEquals("девятью тысячами девятьюстами девяноста восемью", fmt.format(9998), "9998")
assertEquals("девятью тысячами девятьюстами девяноста девятью", fmt.format(9999), "9999")
assertEquals("десятью тысячами", fmt.format(10000), "10000")
assertEquals("десятью тысячами одним", fmt.format(10001), "10001")
assertEquals("десятью тысячами двумя", fmt.format(10002), "10002")
assertEquals("ста тысячами", fmt.format(100000), "100000")
assertEquals("ста тысячами одним", fmt.format(100001), "100001")
assertEquals("ста тысячами двумя", fmt.format(100002), "100002")
assertEquals("двумястами тысячами", fmt.format(200000), "200000")
assertEquals("двумястами тысячами одним", fmt.format(200001), "200001")
assertEquals("двумястами тысячами двумя", fmt.format(200002), "200002")
assertEquals("одним миллионом", fmt.format(1000000), "1000000")
assertEquals("одним миллионом одним", fmt.format(1000001), "1000001")
assertEquals("одним миллионом двумя", fmt.format(1000002), "1000002")
assertEquals("двумя миллионами", fmt.format(2000000), "2000000")
assertEquals("двумя миллионами одним", fmt.format(2000001), "2000001")
assertEquals("двумя миллионами двумя", fmt.format(2000002), "2000002")
assertEquals("десятью миллионами", fmt.format(10000000), "10000000")
assertEquals("десятью миллионами одним", fmt.format(10000001), "10000001")
assertEquals("десятью миллионами двумя", fmt.format(10000002), "10000002")
assertEquals("двадцатью миллионами", fmt.format(20000000), "20000000")
assertEquals("двадцатью миллионами одним", fmt.format(20000001), "20000001")
assertEquals("двадцатью миллионами двумя", fmt.format(20000002), "20000002")
assertEquals("ста миллионами", fmt.format(100000000), "100000000")
assertEquals("ста миллионами одним", fmt.format(100000001), "100000001")
assertEquals("ста миллионами двумя", fmt.format(100000002), "100000002")
assertEquals("двумястами миллионами", fmt.format(200000000), "200000000")
assertEquals("двумястами миллионами одним", fmt.format(200000001), "200000001")
assertEquals("двумястами миллионами двумя", fmt.format(200000002), "200000002")
assertEquals("одним миллиардом", fmt.format(1000000000), "1000000000")
assertEquals("одним миллиардом одним", fmt.format(1000000001), "1000000001")
assertEquals("одним миллиардом двумя", fmt.format(1000000002), "1000000002")
assertEquals("двумя миллиардами", fmt.format(2000000000), "2000000000")
assertEquals("двумя миллиардами одним", fmt.format(2000000001), "2000000001")
assertEquals("двумя миллиардами двумя", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalMasculineAblative() {
 val fmt = RBNFRu().spelloutCardinalMasculineAblative
assertEquals("минус одним", fmt.format(-1), "-1")
assertEquals("нулем", fmt.format(0), "0")
assertEquals("двумя десятыми", fmt.format(0.2), "0.2")
assertEquals("двумя тысячами тремястами сорока пятью десятитысячными", fmt.format(0.2345), "0.2345")
assertEquals("двумя сотыми", fmt.format(0.02), "0.02")
assertEquals("двумястами тринадцатью десятитысячными", fmt.format(0.0213), "0.0213")
assertEquals("четырьмя целыми семьюстами пятьюдесятью одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцатью целыми пятьюдесятью одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцатью целыми двумястами пятьюдесятью одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцатью целыми двумя тысячами двумястами пятьюдесятью одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одним", fmt.format(1), "1")
assertEquals("двумя", fmt.format(2), "2")
assertEquals("тремя", fmt.format(3), "3")
assertEquals("четырьмя", fmt.format(4), "4")
assertEquals("пятью", fmt.format(5), "5")
assertEquals("шестью", fmt.format(6), "6")
assertEquals("семью", fmt.format(7), "7")
assertEquals("восемью", fmt.format(8), "8")
assertEquals("девятью", fmt.format(9), "9")
assertEquals("десятью", fmt.format(10), "10")
assertEquals("одиннадцатью", fmt.format(11), "11")
assertEquals("двенадцатью", fmt.format(12), "12")
assertEquals("тринадцатью", fmt.format(13), "13")
assertEquals("четырнадцатью", fmt.format(14), "14")
assertEquals("пятнадцатью", fmt.format(15), "15")
assertEquals("шестнадцатью", fmt.format(16), "16")
assertEquals("семнадцатью", fmt.format(17), "17")
assertEquals("восемнадцатью", fmt.format(18), "18")
assertEquals("девятнадцатью", fmt.format(19), "19")
assertEquals("двадцатью", fmt.format(20), "20")
assertEquals("двадцатью одним", fmt.format(21), "21")
assertEquals("двадцатью двумя", fmt.format(22), "22")
assertEquals("двадцатью тремя", fmt.format(23), "23")
assertEquals("двадцатью четырьмя", fmt.format(24), "24")
assertEquals("двадцатью пятью", fmt.format(25), "25")
assertEquals("двадцатью шестью", fmt.format(26), "26")
assertEquals("двадцатью семью", fmt.format(27), "27")
assertEquals("двадцатью восемью", fmt.format(28), "28")
assertEquals("двадцатью девятью", fmt.format(29), "29")
assertEquals("тридцатью", fmt.format(30), "30")
assertEquals("тридцатью одним", fmt.format(31), "31")
assertEquals("девяноста восемью", fmt.format(98), "98")
assertEquals("девяноста девятью", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одним", fmt.format(101), "101")
assertEquals("ста двумя", fmt.format(102), "102")
assertEquals("девятьюстами девяноста восемью", fmt.format(998), "998")
assertEquals("девятьюстами девяноста девятью", fmt.format(999), "999")
assertEquals("одной тысячей", fmt.format(1000), "1000")
assertEquals("одной тысячей одним", fmt.format(1001), "1001")
assertEquals("одной тысячей двумя", fmt.format(1002), "1002")
assertEquals("одной тысячей девятьюстами девяноста восемью", fmt.format(1998), "1998")
assertEquals("одной тысячей девятьюстами девяноста девятью", fmt.format(1999), "1999")
assertEquals("двумя тысячами", fmt.format(2000), "2000")
assertEquals("двумя тысячами одним", fmt.format(2001), "2001")
assertEquals("двумя тысячами двумя", fmt.format(2002), "2002")
assertEquals("девятью тысячами девятьюстами девяноста восемью", fmt.format(9998), "9998")
assertEquals("девятью тысячами девятьюстами девяноста девятью", fmt.format(9999), "9999")
assertEquals("десятью тысячами", fmt.format(10000), "10000")
assertEquals("десятью тысячами одним", fmt.format(10001), "10001")
assertEquals("десятью тысячами двумя", fmt.format(10002), "10002")
assertEquals("ста тысячами", fmt.format(100000), "100000")
assertEquals("ста тысячами одним", fmt.format(100001), "100001")
assertEquals("ста тысячами двумя", fmt.format(100002), "100002")
assertEquals("двумястами тысячами", fmt.format(200000), "200000")
assertEquals("двумястами тысячами одним", fmt.format(200001), "200001")
assertEquals("двумястами тысячами двумя", fmt.format(200002), "200002")
assertEquals("одним миллионом", fmt.format(1000000), "1000000")
assertEquals("одним миллионом одним", fmt.format(1000001), "1000001")
assertEquals("одним миллионом двумя", fmt.format(1000002), "1000002")
assertEquals("двумя миллионами", fmt.format(2000000), "2000000")
assertEquals("двумя миллионами одним", fmt.format(2000001), "2000001")
assertEquals("двумя миллионами двумя", fmt.format(2000002), "2000002")
assertEquals("десятью миллионами", fmt.format(10000000), "10000000")
assertEquals("десятью миллионами одним", fmt.format(10000001), "10000001")
assertEquals("десятью миллионами двумя", fmt.format(10000002), "10000002")
assertEquals("двадцатью миллионами", fmt.format(20000000), "20000000")
assertEquals("двадцатью миллионами одним", fmt.format(20000001), "20000001")
assertEquals("двадцатью миллионами двумя", fmt.format(20000002), "20000002")
assertEquals("ста миллионами", fmt.format(100000000), "100000000")
assertEquals("ста миллионами одним", fmt.format(100000001), "100000001")
assertEquals("ста миллионами двумя", fmt.format(100000002), "100000002")
assertEquals("двумястами миллионами", fmt.format(200000000), "200000000")
assertEquals("двумястами миллионами одним", fmt.format(200000001), "200000001")
assertEquals("двумястами миллионами двумя", fmt.format(200000002), "200000002")
assertEquals("одним миллиардом", fmt.format(1000000000), "1000000000")
assertEquals("одним миллиардом одним", fmt.format(1000000001), "1000000001")
assertEquals("одним миллиардом двумя", fmt.format(1000000002), "1000000002")
assertEquals("двумя миллиардами", fmt.format(2000000000), "2000000000")
assertEquals("двумя миллиардами одним", fmt.format(2000000001), "2000000001")
assertEquals("двумя миллиардами двумя", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalPluralLocative() {
 val fmt = RBNFRu().spelloutCardinalPluralLocative
assertEquals("минус одних", fmt.format(-1), "-1")
assertEquals("нуле", fmt.format(0), "0")
assertEquals("нуле запятая двух", fmt.format(0.2), "0.2")
assertEquals("нуле запятая двух трех четырех пяти", fmt.format(0.2345), "0.2345")
assertEquals("нуле запятая нуле двух", fmt.format(0.02), "0.02")
assertEquals("нуле запятая нуле двух одних трех", fmt.format(0.0213), "0.0213")
assertEquals("четырех запятая семи пяти одних", fmt.format(4.751), "4.751")
assertEquals("двенадцати запятая нуле пяти одних", fmt.format(12.051), "12.051")
assertEquals("тринадцати запятая нуле двух пяти одних", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати запятая нуле двух двух пяти одних", fmt.format(14.02251), "14.02251")
assertEquals("одних", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одних", fmt.format(21), "21")
assertEquals("двадцати двух", fmt.format(22), "22")
assertEquals("двадцати трех", fmt.format(23), "23")
assertEquals("двадцати четырех", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одних", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одних", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятистах девяноста восьми", fmt.format(998), "998")
assertEquals("девятистах девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одних", fmt.format(1001), "1001")
assertEquals("одной тысяче двух", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистах девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистах девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысячах", fmt.format(2000), "2000")
assertEquals("двух тысячах одних", fmt.format(2001), "2001")
assertEquals("двух тысячах двух", fmt.format(2002), "2002")
assertEquals("девяти тысячах девятистах девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячах девятистах девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячах", fmt.format(10000), "10000")
assertEquals("десяти тысячах одних", fmt.format(10001), "10001")
assertEquals("десяти тысячах двух", fmt.format(10002), "10002")
assertEquals("ста тысячах", fmt.format(100000), "100000")
assertEquals("ста тысячах одних", fmt.format(100001), "100001")
assertEquals("ста тысячах двух", fmt.format(100002), "100002")
assertEquals("двухстах тысячах", fmt.format(200000), "200000")
assertEquals("двухстах тысячах одних", fmt.format(200001), "200001")
assertEquals("двухстах тысячах двух", fmt.format(200002), "200002")
assertEquals("одном миллионе", fmt.format(1000000), "1000000")
assertEquals("одном миллионе одних", fmt.format(1000001), "1000001")
assertEquals("одном миллионе двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионах", fmt.format(2000000), "2000000")
assertEquals("двух миллионах одних", fmt.format(2000001), "2000001")
assertEquals("двух миллионах двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионах", fmt.format(10000000), "10000000")
assertEquals("десяти миллионах одних", fmt.format(10000001), "10000001")
assertEquals("десяти миллионах двух", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионах", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионах одних", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионах двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионах", fmt.format(100000000), "100000000")
assertEquals("ста миллионах одних", fmt.format(100000001), "100000001")
assertEquals("ста миллионах двух", fmt.format(100000002), "100000002")
assertEquals("двухстах миллионах", fmt.format(200000000), "200000000")
assertEquals("двухстах миллионах одних", fmt.format(200000001), "200000001")
assertEquals("двухстах миллионах двух", fmt.format(200000002), "200000002")
assertEquals("одном миллиарде", fmt.format(1000000000), "1000000000")
assertEquals("одном миллиарде одних", fmt.format(1000000001), "1000000001")
assertEquals("одном миллиарде двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардах", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардах одних", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардах двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalFeminineLocative() {
 val fmt = RBNFRu().spelloutCardinalFeminineLocative
assertEquals("минус одной", fmt.format(-1), "-1")
assertEquals("нуле", fmt.format(0), "0")
assertEquals("двух десятых", fmt.format(0.2), "0.2")
assertEquals("двух тысячах трехстах сорока пяти десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("двух сотых", fmt.format(0.02), "0.02")
assertEquals("двухстах тринадцати десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четырех целых семистах пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целых пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целых двухстах пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целых двух тысячах двухстах пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одной", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одной", fmt.format(21), "21")
assertEquals("двадцати двух", fmt.format(22), "22")
assertEquals("двадцати трех", fmt.format(23), "23")
assertEquals("двадцати четырех", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одной", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одной", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятистах девяноста восьми", fmt.format(998), "998")
assertEquals("девятистах девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одной", fmt.format(1001), "1001")
assertEquals("одной тысяче двух", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистах девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистах девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысячах", fmt.format(2000), "2000")
assertEquals("двух тысячах одной", fmt.format(2001), "2001")
assertEquals("двух тысячах двух", fmt.format(2002), "2002")
assertEquals("девяти тысячах девятистах девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячах девятистах девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячах", fmt.format(10000), "10000")
assertEquals("десяти тысячах одной", fmt.format(10001), "10001")
assertEquals("десяти тысячах двух", fmt.format(10002), "10002")
assertEquals("ста тысячах", fmt.format(100000), "100000")
assertEquals("ста тысячах одной", fmt.format(100001), "100001")
assertEquals("ста тысячах двух", fmt.format(100002), "100002")
assertEquals("двухстах тысячах", fmt.format(200000), "200000")
assertEquals("двухстах тысячах одной", fmt.format(200001), "200001")
assertEquals("двухстах тысячах двух", fmt.format(200002), "200002")
assertEquals("одном миллионе", fmt.format(1000000), "1000000")
assertEquals("одном миллионе одной", fmt.format(1000001), "1000001")
assertEquals("одном миллионе двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионах", fmt.format(2000000), "2000000")
assertEquals("двух миллионах одной", fmt.format(2000001), "2000001")
assertEquals("двух миллионах двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионах", fmt.format(10000000), "10000000")
assertEquals("десяти миллионах одной", fmt.format(10000001), "10000001")
assertEquals("десяти миллионах двух", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионах", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионах одной", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионах двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионах", fmt.format(100000000), "100000000")
assertEquals("ста миллионах одной", fmt.format(100000001), "100000001")
assertEquals("ста миллионах двух", fmt.format(100000002), "100000002")
assertEquals("двухстах миллионах", fmt.format(200000000), "200000000")
assertEquals("двухстах миллионах одной", fmt.format(200000001), "200000001")
assertEquals("двухстах миллионах двух", fmt.format(200000002), "200000002")
assertEquals("одном миллиарде", fmt.format(1000000000), "1000000000")
assertEquals("одном миллиарде одной", fmt.format(1000000001), "1000000001")
assertEquals("одном миллиарде двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардах", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардах одной", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардах двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalNeuterLocative() {
 val fmt = RBNFRu().spelloutCardinalNeuterLocative
assertEquals("минус одном", fmt.format(-1), "-1")
assertEquals("нуле", fmt.format(0), "0")
assertEquals("двух десятых", fmt.format(0.2), "0.2")
assertEquals("двух тысячах трехстах сорока пяти десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("двух сотых", fmt.format(0.02), "0.02")
assertEquals("двухстах тринадцати десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четырех целых семистах пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целых пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целых двухстах пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целых двух тысячах двухстах пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одном", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одном", fmt.format(21), "21")
assertEquals("двадцати двух", fmt.format(22), "22")
assertEquals("двадцати трех", fmt.format(23), "23")
assertEquals("двадцати четырех", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одном", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одном", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятистах девяноста восьми", fmt.format(998), "998")
assertEquals("девятистах девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одном", fmt.format(1001), "1001")
assertEquals("одной тысяче двух", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистах девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистах девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысячах", fmt.format(2000), "2000")
assertEquals("двух тысячах одном", fmt.format(2001), "2001")
assertEquals("двух тысячах двух", fmt.format(2002), "2002")
assertEquals("девяти тысячах девятистах девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячах девятистах девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячах", fmt.format(10000), "10000")
assertEquals("десяти тысячах одном", fmt.format(10001), "10001")
assertEquals("десяти тысячах двух", fmt.format(10002), "10002")
assertEquals("ста тысячах", fmt.format(100000), "100000")
assertEquals("ста тысячах одном", fmt.format(100001), "100001")
assertEquals("ста тысячах двух", fmt.format(100002), "100002")
assertEquals("двухстах тысячах", fmt.format(200000), "200000")
assertEquals("двухстах тысячах одном", fmt.format(200001), "200001")
assertEquals("двухстах тысячах двух", fmt.format(200002), "200002")
assertEquals("одном миллионе", fmt.format(1000000), "1000000")
assertEquals("одном миллионе одном", fmt.format(1000001), "1000001")
assertEquals("одном миллионе двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионах", fmt.format(2000000), "2000000")
assertEquals("двух миллионах одном", fmt.format(2000001), "2000001")
assertEquals("двух миллионах двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионах", fmt.format(10000000), "10000000")
assertEquals("десяти миллионах одном", fmt.format(10000001), "10000001")
assertEquals("десяти миллионах двух", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионах", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионах одном", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионах двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионах", fmt.format(100000000), "100000000")
assertEquals("ста миллионах одном", fmt.format(100000001), "100000001")
assertEquals("ста миллионах двух", fmt.format(100000002), "100000002")
assertEquals("двухстах миллионах", fmt.format(200000000), "200000000")
assertEquals("двухстах миллионах одном", fmt.format(200000001), "200000001")
assertEquals("двухстах миллионах двух", fmt.format(200000002), "200000002")
assertEquals("одном миллиарде", fmt.format(1000000000), "1000000000")
assertEquals("одном миллиарде одном", fmt.format(1000000001), "1000000001")
assertEquals("одном миллиарде двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардах", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардах одном", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардах двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalMasculineLocative() {
 val fmt = RBNFRu().spelloutCardinalMasculineLocative
assertEquals("минус одном", fmt.format(-1), "-1")
assertEquals("нуле", fmt.format(0), "0")
assertEquals("двух десятых", fmt.format(0.2), "0.2")
assertEquals("двух тысячах трехстах сорока пяти десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("двух сотых", fmt.format(0.02), "0.02")
assertEquals("двухстах тринадцати десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четырех целых семистах пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целых пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целых двухстах пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целых двух тысячах двухстах пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одном", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать одном", fmt.format(21), "21")
assertEquals("двадцать двух", fmt.format(22), "22")
assertEquals("двадцать трех", fmt.format(23), "23")
assertEquals("двадцать четырех", fmt.format(24), "24")
assertEquals("двадцать пяти", fmt.format(25), "25")
assertEquals("двадцать шести", fmt.format(26), "26")
assertEquals("двадцать семи", fmt.format(27), "27")
assertEquals("двадцать восьми", fmt.format(28), "28")
assertEquals("двадцать девяти", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать одном", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одном", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятистах девяноста восьми", fmt.format(998), "998")
assertEquals("девятистах девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одном", fmt.format(1001), "1001")
assertEquals("одной тысяче двух", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистах девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистах девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысячах", fmt.format(2000), "2000")
assertEquals("двух тысячах одном", fmt.format(2001), "2001")
assertEquals("двух тысячах двух", fmt.format(2002), "2002")
assertEquals("девяти тысячах девятистах девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячах девятистах девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячах", fmt.format(10000), "10000")
assertEquals("десяти тысячах одном", fmt.format(10001), "10001")
assertEquals("десяти тысячах двух", fmt.format(10002), "10002")
assertEquals("ста тысячах", fmt.format(100000), "100000")
assertEquals("ста тысячах одном", fmt.format(100001), "100001")
assertEquals("ста тысячах двух", fmt.format(100002), "100002")
assertEquals("двухстах тысячах", fmt.format(200000), "200000")
assertEquals("двухстах тысячах одном", fmt.format(200001), "200001")
assertEquals("двухстах тысячах двух", fmt.format(200002), "200002")
assertEquals("одном миллионе", fmt.format(1000000), "1000000")
assertEquals("одном миллионе одном", fmt.format(1000001), "1000001")
assertEquals("одном миллионе двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионах", fmt.format(2000000), "2000000")
assertEquals("двух миллионах одном", fmt.format(2000001), "2000001")
assertEquals("двух миллионах двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионах", fmt.format(10000000), "10000000")
assertEquals("десяти миллионах одном", fmt.format(10000001), "10000001")
assertEquals("десяти миллионах двух", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионах", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионах одном", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионах двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионах", fmt.format(100000000), "100000000")
assertEquals("ста миллионах одном", fmt.format(100000001), "100000001")
assertEquals("ста миллионах двух", fmt.format(100000002), "100000002")
assertEquals("двухстах миллионах", fmt.format(200000000), "200000000")
assertEquals("двухстах миллионах одном", fmt.format(200000001), "200000001")
assertEquals("двухстах миллионах двух", fmt.format(200000002), "200000002")
assertEquals("одном миллиарде", fmt.format(1000000000), "1000000000")
assertEquals("одном миллиарде одном", fmt.format(1000000001), "1000000001")
assertEquals("одном миллиарде двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардах", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардах одном", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардах двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalPluralAccusative() {
 val fmt = RBNFRu().spelloutCardinalPluralAccusative
assertEquals("минус одни", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("ноль запятая две", fmt.format(0.2), "0.2")
assertEquals("ноль запятая две три четыре пять", fmt.format(0.2345), "0.2345")
assertEquals("ноль запятая ноль две", fmt.format(0.02), "0.02")
assertEquals("ноль запятая ноль две одни три", fmt.format(0.0213), "0.0213")
assertEquals("четыре запятая семь пять одни", fmt.format(4.751), "4.751")
assertEquals("двенадцать запятая ноль пять одни", fmt.format(12.051), "12.051")
assertEquals("тринадцать запятая ноль две пять одни", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать запятая ноль две две пять одни", fmt.format(14.02251), "14.02251")
assertEquals("одни", fmt.format(1), "1")
assertEquals("две", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать одни", fmt.format(21), "21")
assertEquals("двадцать две", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать одни", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто одни", fmt.format(101), "101")
assertEquals("сто две", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одну тысячу", fmt.format(1000), "1000")
assertEquals("одну тысячу одни", fmt.format(1001), "1001")
assertEquals("одну тысячу две", fmt.format(1002), "1002")
assertEquals("одну тысячу девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одну тысячу девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи одни", fmt.format(2001), "2001")
assertEquals("две тысячи две", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч одни", fmt.format(10001), "10001")
assertEquals("десять тысяч две", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч одни", fmt.format(100001), "100001")
assertEquals("сто тысяч две", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч одни", fmt.format(200001), "200001")
assertEquals("двести тысяч две", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион одни", fmt.format(1000001), "1000001")
assertEquals("один миллион две", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона одни", fmt.format(2000001), "2000001")
assertEquals("два миллиона две", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов одни", fmt.format(10000001), "10000001")
assertEquals("десять миллионов две", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов одни", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов две", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов одни", fmt.format(100000001), "100000001")
assertEquals("сто миллионов две", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов одни", fmt.format(200000001), "200000001")
assertEquals("двести миллионов две", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард одни", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард две", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда одни", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда две", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalFeminineAccusative() {
 val fmt = RBNFRu().spelloutCardinalFeminineAccusative
assertEquals("минус одну", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("две десятых", fmt.format(0.2), "0.2")
assertEquals("две тысячи триста сорок пять десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("две сотых", fmt.format(0.02), "0.02")
assertEquals("двести тринадцать десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четыре целых семьсот пятьдесят одну тысячную", fmt.format(4.751), "4.751")
assertEquals("двенадцать целых пятьдесят одну тысячную", fmt.format(12.051), "12.051")
assertEquals("тринадцать целых двести пятьдесят одну десятитысячную", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать целых две тысячи двести пятьдесят одну стотысячную", fmt.format(14.02251), "14.02251")
assertEquals("одну", fmt.format(1), "1")
assertEquals("две", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать одну", fmt.format(21), "21")
assertEquals("двадцать две", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать одну", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто одну", fmt.format(101), "101")
assertEquals("сто две", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одну тысячу", fmt.format(1000), "1000")
assertEquals("одну тысячу одну", fmt.format(1001), "1001")
assertEquals("одну тысячу две", fmt.format(1002), "1002")
assertEquals("одну тысячу девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одну тысячу девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи одну", fmt.format(2001), "2001")
assertEquals("две тысячи две", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч одну", fmt.format(10001), "10001")
assertEquals("десять тысяч две", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч одну", fmt.format(100001), "100001")
assertEquals("сто тысяч две", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч одну", fmt.format(200001), "200001")
assertEquals("двести тысяч две", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион одну", fmt.format(1000001), "1000001")
assertEquals("один миллион две", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона одну", fmt.format(2000001), "2000001")
assertEquals("два миллиона две", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов одну", fmt.format(10000001), "10000001")
assertEquals("десять миллионов две", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов одну", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов две", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов одну", fmt.format(100000001), "100000001")
assertEquals("сто миллионов две", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов одну", fmt.format(200000001), "200000001")
assertEquals("двести миллионов две", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард одну", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард две", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда одну", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда две", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalNeuterAccusative() {
 val fmt = RBNFRu().spelloutCardinalNeuterAccusative
assertEquals("минус одно", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("две десятых", fmt.format(0.2), "0.2")
assertEquals("две тысячи триста сорок пять десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("две сотых", fmt.format(0.02), "0.02")
assertEquals("двести тринадцать десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четыре целых семьсот пятьдесят одну тысячную", fmt.format(4.751), "4.751")
assertEquals("двенадцать целых пятьдесят одну тысячную", fmt.format(12.051), "12.051")
assertEquals("тринадцать целых двести пятьдесят одну десятитысячную", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать целых две тысячи двести пятьдесят одну стотысячную", fmt.format(14.02251), "14.02251")
assertEquals("одно", fmt.format(1), "1")
assertEquals("два", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать одно", fmt.format(21), "21")
assertEquals("двадцать два", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать одно", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто одно", fmt.format(101), "101")
assertEquals("сто два", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одну тысячу", fmt.format(1000), "1000")
assertEquals("одну тысячу одно", fmt.format(1001), "1001")
assertEquals("одну тысячу два", fmt.format(1002), "1002")
assertEquals("одну тысячу девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одну тысячу девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи одно", fmt.format(2001), "2001")
assertEquals("две тысячи два", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч одно", fmt.format(10001), "10001")
assertEquals("десять тысяч два", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч одно", fmt.format(100001), "100001")
assertEquals("сто тысяч два", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч одно", fmt.format(200001), "200001")
assertEquals("двести тысяч два", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион одно", fmt.format(1000001), "1000001")
assertEquals("один миллион два", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона одно", fmt.format(2000001), "2000001")
assertEquals("два миллиона два", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов одно", fmt.format(10000001), "10000001")
assertEquals("десять миллионов два", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов одно", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов два", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов одно", fmt.format(100000001), "100000001")
assertEquals("сто миллионов два", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов одно", fmt.format(200000001), "200000001")
assertEquals("двести миллионов два", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард одно", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард два", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда одно", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда два", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalMasculineAccusative() {
 val fmt = RBNFRu().spelloutCardinalMasculineAccusative
assertEquals("минус один", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("две десятых", fmt.format(0.2), "0.2")
assertEquals("две тысячи триста сорок пять десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("две сотых", fmt.format(0.02), "0.02")
assertEquals("двести тринадцать десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четыре целых семьсот пятьдесят одну тысячную", fmt.format(4.751), "4.751")
assertEquals("двенадцать целых пятьдесят одну тысячную", fmt.format(12.051), "12.051")
assertEquals("тринадцать целых двести пятьдесят одну десятитысячную", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать целых две тысячи двести пятьдесят одну стотысячную", fmt.format(14.02251), "14.02251")
assertEquals("один", fmt.format(1), "1")
assertEquals("два", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать один", fmt.format(21), "21")
assertEquals("двадцать два", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать один", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто один", fmt.format(101), "101")
assertEquals("сто два", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одну тысячу", fmt.format(1000), "1000")
assertEquals("одну тысячу один", fmt.format(1001), "1001")
assertEquals("одну тысячу два", fmt.format(1002), "1002")
assertEquals("одну тысячу девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одну тысячу девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи один", fmt.format(2001), "2001")
assertEquals("две тысячи два", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч один", fmt.format(10001), "10001")
assertEquals("десять тысяч два", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч один", fmt.format(100001), "100001")
assertEquals("сто тысяч два", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч один", fmt.format(200001), "200001")
assertEquals("двести тысяч два", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион один", fmt.format(1000001), "1000001")
assertEquals("один миллион два", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона один", fmt.format(2000001), "2000001")
assertEquals("два миллиона два", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов один", fmt.format(10000001), "10000001")
assertEquals("десять миллионов два", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов один", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов два", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов один", fmt.format(100000001), "100000001")
assertEquals("сто миллионов два", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов один", fmt.format(200000001), "200000001")
assertEquals("двести миллионов два", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард один", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард два", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда один", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда два", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalPluralDative() {
 val fmt = RBNFRu().spelloutCardinalPluralDative
assertEquals("минус одним", fmt.format(-1), "-1")
assertEquals("нолю", fmt.format(0), "0")
assertEquals("нолю запятая двум", fmt.format(0.2), "0.2")
assertEquals("нолю запятая двум трем четырем пяти", fmt.format(0.2345), "0.2345")
assertEquals("нолю запятая нолю двум", fmt.format(0.02), "0.02")
assertEquals("нолю запятая нолю двум одним трем", fmt.format(0.0213), "0.0213")
assertEquals("четырем запятая семи пяти одним", fmt.format(4.751), "4.751")
assertEquals("двенадцати запятая нолю пяти одним", fmt.format(12.051), "12.051")
assertEquals("тринадцати запятая нолю двум пяти одним", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати запятая нолю двум двум пяти одним", fmt.format(14.02251), "14.02251")
assertEquals("одним", fmt.format(1), "1")
assertEquals("двум", fmt.format(2), "2")
assertEquals("трем", fmt.format(3), "3")
assertEquals("четырем", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одним", fmt.format(21), "21")
assertEquals("двадцати двум", fmt.format(22), "22")
assertEquals("двадцати трем", fmt.format(23), "23")
assertEquals("двадцати четырем", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одним", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одним", fmt.format(101), "101")
assertEquals("ста двум", fmt.format(102), "102")
assertEquals("девятистам девяноста восьми", fmt.format(998), "998")
assertEquals("девятистам девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одним", fmt.format(1001), "1001")
assertEquals("одной тысяче двум", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистам девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистам девяноста девяти", fmt.format(1999), "1999")
assertEquals("двум тысячам", fmt.format(2000), "2000")
assertEquals("двум тысячам одним", fmt.format(2001), "2001")
assertEquals("двум тысячам двум", fmt.format(2002), "2002")
assertEquals("девяти тысячам девятистам девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячам девятистам девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячам", fmt.format(10000), "10000")
assertEquals("десяти тысячам одним", fmt.format(10001), "10001")
assertEquals("десяти тысячам двум", fmt.format(10002), "10002")
assertEquals("ста тысячам", fmt.format(100000), "100000")
assertEquals("ста тысячам одним", fmt.format(100001), "100001")
assertEquals("ста тысячам двум", fmt.format(100002), "100002")
assertEquals("двумстам тысячам", fmt.format(200000), "200000")
assertEquals("двумстам тысячам одним", fmt.format(200001), "200001")
assertEquals("двумстам тысячам двум", fmt.format(200002), "200002")
assertEquals("одному миллиону", fmt.format(1000000), "1000000")
assertEquals("одному миллиону одним", fmt.format(1000001), "1000001")
assertEquals("одному миллиону двум", fmt.format(1000002), "1000002")
assertEquals("двум миллионам", fmt.format(2000000), "2000000")
assertEquals("двум миллионам одним", fmt.format(2000001), "2000001")
assertEquals("двум миллионам двум", fmt.format(2000002), "2000002")
assertEquals("десяти миллионам", fmt.format(10000000), "10000000")
assertEquals("десяти миллионам одним", fmt.format(10000001), "10000001")
assertEquals("десяти миллионам двум", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионам", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионам одним", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионам двум", fmt.format(20000002), "20000002")
assertEquals("ста миллионам", fmt.format(100000000), "100000000")
assertEquals("ста миллионам одним", fmt.format(100000001), "100000001")
assertEquals("ста миллионам двум", fmt.format(100000002), "100000002")
assertEquals("двумстам миллионам", fmt.format(200000000), "200000000")
assertEquals("двумстам миллионам одним", fmt.format(200000001), "200000001")
assertEquals("двумстам миллионам двум", fmt.format(200000002), "200000002")
assertEquals("одному миллиарду", fmt.format(1000000000), "1000000000")
assertEquals("одному миллиарду одним", fmt.format(1000000001), "1000000001")
assertEquals("одному миллиарду двум", fmt.format(1000000002), "1000000002")
assertEquals("двум миллиардам", fmt.format(2000000000), "2000000000")
assertEquals("двум миллиардам одним", fmt.format(2000000001), "2000000001")
assertEquals("двум миллиардам двум", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalFeminineDative() {
 val fmt = RBNFRu().spelloutCardinalFeminineDative
assertEquals("минус одной", fmt.format(-1), "-1")
assertEquals("нолю", fmt.format(0), "0")
assertEquals("двум десятым", fmt.format(0.2), "0.2")
assertEquals("двум тысячам тремстам сорока пяти десятитысячным", fmt.format(0.2345), "0.2345")
assertEquals("двум сотым", fmt.format(0.02), "0.02")
assertEquals("двумстам тринадцати десятитысячным", fmt.format(0.0213), "0.0213")
assertEquals("четырем целым семистам пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целым пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целым двумстам пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целым двум тысячам двумстам пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одной", fmt.format(1), "1")
assertEquals("двум", fmt.format(2), "2")
assertEquals("трем", fmt.format(3), "3")
assertEquals("четырем", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одной", fmt.format(21), "21")
assertEquals("двадцати двум", fmt.format(22), "22")
assertEquals("двадцати трем", fmt.format(23), "23")
assertEquals("двадцати четырем", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одной", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одной", fmt.format(101), "101")
assertEquals("ста двум", fmt.format(102), "102")
assertEquals("девятистам девяноста восьми", fmt.format(998), "998")
assertEquals("девятистам девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одной", fmt.format(1001), "1001")
assertEquals("одной тысяче двум", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистам девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистам девяноста девяти", fmt.format(1999), "1999")
assertEquals("двум тысячам", fmt.format(2000), "2000")
assertEquals("двум тысячам одной", fmt.format(2001), "2001")
assertEquals("двум тысячам двум", fmt.format(2002), "2002")
assertEquals("девяти тысячам девятистам девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячам девятистам девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячам", fmt.format(10000), "10000")
assertEquals("десяти тысячам одной", fmt.format(10001), "10001")
assertEquals("десяти тысячам двум", fmt.format(10002), "10002")
assertEquals("ста тысячам", fmt.format(100000), "100000")
assertEquals("ста тысячам одной", fmt.format(100001), "100001")
assertEquals("ста тысячам двум", fmt.format(100002), "100002")
assertEquals("двумстам тысячам", fmt.format(200000), "200000")
assertEquals("двумстам тысячам одной", fmt.format(200001), "200001")
assertEquals("двумстам тысячам двум", fmt.format(200002), "200002")
assertEquals("одному миллиону", fmt.format(1000000), "1000000")
assertEquals("одному миллиону одной", fmt.format(1000001), "1000001")
assertEquals("одному миллиону двум", fmt.format(1000002), "1000002")
assertEquals("двум миллионам", fmt.format(2000000), "2000000")
assertEquals("двум миллионам одной", fmt.format(2000001), "2000001")
assertEquals("двум миллионам двум", fmt.format(2000002), "2000002")
assertEquals("десяти миллионам", fmt.format(10000000), "10000000")
assertEquals("десяти миллионам одной", fmt.format(10000001), "10000001")
assertEquals("десяти миллионам двум", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионам", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионам одной", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионам двум", fmt.format(20000002), "20000002")
assertEquals("ста миллионам", fmt.format(100000000), "100000000")
assertEquals("ста миллионам одной", fmt.format(100000001), "100000001")
assertEquals("ста миллионам двум", fmt.format(100000002), "100000002")
assertEquals("двумстам миллионам", fmt.format(200000000), "200000000")
assertEquals("двумстам миллионам одной", fmt.format(200000001), "200000001")
assertEquals("двумстам миллионам двум", fmt.format(200000002), "200000002")
assertEquals("одному миллиарду", fmt.format(1000000000), "1000000000")
assertEquals("одному миллиарду одной", fmt.format(1000000001), "1000000001")
assertEquals("одному миллиарду двум", fmt.format(1000000002), "1000000002")
assertEquals("двум миллиардам", fmt.format(2000000000), "2000000000")
assertEquals("двум миллиардам одной", fmt.format(2000000001), "2000000001")
assertEquals("двум миллиардам двум", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalNeuterDative() {
 val fmt = RBNFRu().spelloutCardinalNeuterDative
assertEquals("минус одному", fmt.format(-1), "-1")
assertEquals("нолю", fmt.format(0), "0")
assertEquals("двум десятым", fmt.format(0.2), "0.2")
assertEquals("двум тысячам тремстам сорока пяти десятитысячным", fmt.format(0.2345), "0.2345")
assertEquals("двум сотым", fmt.format(0.02), "0.02")
assertEquals("двумстам тринадцати десятитысячным", fmt.format(0.0213), "0.0213")
assertEquals("четырем целым семистам пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целым пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целым двумстам пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целым двум тысячам двумстам пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одному", fmt.format(1), "1")
assertEquals("двум", fmt.format(2), "2")
assertEquals("трем", fmt.format(3), "3")
assertEquals("четырем", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одному", fmt.format(21), "21")
assertEquals("двадцати двум", fmt.format(22), "22")
assertEquals("двадцати трем", fmt.format(23), "23")
assertEquals("двадцати четырем", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одному", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одному", fmt.format(101), "101")
assertEquals("ста двум", fmt.format(102), "102")
assertEquals("девятистам девяноста восьми", fmt.format(998), "998")
assertEquals("девятистам девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одному", fmt.format(1001), "1001")
assertEquals("одной тысяче двум", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистам девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистам девяноста девяти", fmt.format(1999), "1999")
assertEquals("двум тысячам", fmt.format(2000), "2000")
assertEquals("двум тысячам одному", fmt.format(2001), "2001")
assertEquals("двум тысячам двум", fmt.format(2002), "2002")
assertEquals("девяти тысячам девятистам девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячам девятистам девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячам", fmt.format(10000), "10000")
assertEquals("десяти тысячам одному", fmt.format(10001), "10001")
assertEquals("десяти тысячам двум", fmt.format(10002), "10002")
assertEquals("ста тысячам", fmt.format(100000), "100000")
assertEquals("ста тысячам одному", fmt.format(100001), "100001")
assertEquals("ста тысячам двум", fmt.format(100002), "100002")
assertEquals("двумстам тысячам", fmt.format(200000), "200000")
assertEquals("двумстам тысячам одному", fmt.format(200001), "200001")
assertEquals("двумстам тысячам двум", fmt.format(200002), "200002")
assertEquals("одному миллиону", fmt.format(1000000), "1000000")
assertEquals("одному миллиону одному", fmt.format(1000001), "1000001")
assertEquals("одному миллиону двум", fmt.format(1000002), "1000002")
assertEquals("двум миллионам", fmt.format(2000000), "2000000")
assertEquals("двум миллионам одному", fmt.format(2000001), "2000001")
assertEquals("двум миллионам двум", fmt.format(2000002), "2000002")
assertEquals("десяти миллионам", fmt.format(10000000), "10000000")
assertEquals("десяти миллионам одному", fmt.format(10000001), "10000001")
assertEquals("десяти миллионам двум", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионам", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионам одному", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионам двум", fmt.format(20000002), "20000002")
assertEquals("ста миллионам", fmt.format(100000000), "100000000")
assertEquals("ста миллионам одному", fmt.format(100000001), "100000001")
assertEquals("ста миллионам двум", fmt.format(100000002), "100000002")
assertEquals("двумстам миллионам", fmt.format(200000000), "200000000")
assertEquals("двумстам миллионам одному", fmt.format(200000001), "200000001")
assertEquals("двумстам миллионам двум", fmt.format(200000002), "200000002")
assertEquals("одному миллиарду", fmt.format(1000000000), "1000000000")
assertEquals("одному миллиарду одному", fmt.format(1000000001), "1000000001")
assertEquals("одному миллиарду двум", fmt.format(1000000002), "1000000002")
assertEquals("двум миллиардам", fmt.format(2000000000), "2000000000")
assertEquals("двум миллиардам одному", fmt.format(2000000001), "2000000001")
assertEquals("двум миллиардам двум", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalMasculineDative() {
 val fmt = RBNFRu().spelloutCardinalMasculineDative
assertEquals("минус одному", fmt.format(-1), "-1")
assertEquals("нолю", fmt.format(0), "0")
assertEquals("двум десятым", fmt.format(0.2), "0.2")
assertEquals("двум тысячам тремстам сорока пяти десятитысячным", fmt.format(0.2345), "0.2345")
assertEquals("двум сотым", fmt.format(0.02), "0.02")
assertEquals("двумстам тринадцати десятитысячным", fmt.format(0.0213), "0.0213")
assertEquals("четырем целым семистам пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целым пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целым двумстам пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целым двум тысячам двумстам пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одному", fmt.format(1), "1")
assertEquals("двум", fmt.format(2), "2")
assertEquals("трем", fmt.format(3), "3")
assertEquals("четырем", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одному", fmt.format(21), "21")
assertEquals("двадцати двум", fmt.format(22), "22")
assertEquals("двадцати трем", fmt.format(23), "23")
assertEquals("двадцати четырем", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одному", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одному", fmt.format(101), "101")
assertEquals("ста двум", fmt.format(102), "102")
assertEquals("девятистам девяноста восьми", fmt.format(998), "998")
assertEquals("девятистам девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысяче", fmt.format(1000), "1000")
assertEquals("одной тысяче одному", fmt.format(1001), "1001")
assertEquals("одной тысяче двум", fmt.format(1002), "1002")
assertEquals("одной тысяче девятистам девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысяче девятистам девяноста девяти", fmt.format(1999), "1999")
assertEquals("двум тысячам", fmt.format(2000), "2000")
assertEquals("двум тысячам одному", fmt.format(2001), "2001")
assertEquals("двум тысячам двум", fmt.format(2002), "2002")
assertEquals("девяти тысячам девятистам девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысячам девятистам девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысячам", fmt.format(10000), "10000")
assertEquals("десяти тысячам одному", fmt.format(10001), "10001")
assertEquals("десяти тысячам двум", fmt.format(10002), "10002")
assertEquals("ста тысячам", fmt.format(100000), "100000")
assertEquals("ста тысячам одному", fmt.format(100001), "100001")
assertEquals("ста тысячам двум", fmt.format(100002), "100002")
assertEquals("двумстам тысячам", fmt.format(200000), "200000")
assertEquals("двумстам тысячам одному", fmt.format(200001), "200001")
assertEquals("двумстам тысячам двум", fmt.format(200002), "200002")
assertEquals("одному миллиону", fmt.format(1000000), "1000000")
assertEquals("одному миллиону одному", fmt.format(1000001), "1000001")
assertEquals("одному миллиону двум", fmt.format(1000002), "1000002")
assertEquals("двум миллионам", fmt.format(2000000), "2000000")
assertEquals("двум миллионам одному", fmt.format(2000001), "2000001")
assertEquals("двум миллионам двум", fmt.format(2000002), "2000002")
assertEquals("десяти миллионам", fmt.format(10000000), "10000000")
assertEquals("десяти миллионам одному", fmt.format(10000001), "10000001")
assertEquals("десяти миллионам двум", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионам", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионам одному", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионам двум", fmt.format(20000002), "20000002")
assertEquals("ста миллионам", fmt.format(100000000), "100000000")
assertEquals("ста миллионам одному", fmt.format(100000001), "100000001")
assertEquals("ста миллионам двум", fmt.format(100000002), "100000002")
assertEquals("двумстам миллионам", fmt.format(200000000), "200000000")
assertEquals("двумстам миллионам одному", fmt.format(200000001), "200000001")
assertEquals("двумстам миллионам двум", fmt.format(200000002), "200000002")
assertEquals("одному миллиарду", fmt.format(1000000000), "1000000000")
assertEquals("одному миллиарду одному", fmt.format(1000000001), "1000000001")
assertEquals("одному миллиарду двум", fmt.format(1000000002), "1000000002")
assertEquals("двум миллиардам", fmt.format(2000000000), "2000000000")
assertEquals("двум миллиардам одному", fmt.format(2000000001), "2000000001")
assertEquals("двум миллиардам двум", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalPluralGenitive() {
 val fmt = RBNFRu().spelloutCardinalPluralGenitive
assertEquals("минус одних", fmt.format(-1), "-1")
assertEquals("ноля", fmt.format(0), "0")
assertEquals("ноля запятая двух", fmt.format(0.2), "0.2")
assertEquals("ноля запятая двух трех четырех пяти", fmt.format(0.2345), "0.2345")
assertEquals("ноля запятая ноля двух", fmt.format(0.02), "0.02")
assertEquals("ноля запятая ноля двух одних трех", fmt.format(0.0213), "0.0213")
assertEquals("четырех запятая семи пяти одних", fmt.format(4.751), "4.751")
assertEquals("двенадцати запятая ноля пяти одних", fmt.format(12.051), "12.051")
assertEquals("тринадцати запятая ноля двух пяти одних", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати запятая ноля двух двух пяти одних", fmt.format(14.02251), "14.02251")
assertEquals("одних", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одних", fmt.format(21), "21")
assertEquals("двадцати двух", fmt.format(22), "22")
assertEquals("двадцати трех", fmt.format(23), "23")
assertEquals("двадцати четырех", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одних", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одних", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятисот девяноста восьми", fmt.format(998), "998")
assertEquals("девятисот девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысячи", fmt.format(1000), "1000")
assertEquals("одной тысячи одних", fmt.format(1001), "1001")
assertEquals("одной тысячи двух", fmt.format(1002), "1002")
assertEquals("одной тысячи девятисот девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысячи девятисот девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысяч", fmt.format(2000), "2000")
assertEquals("двух тысяч одних", fmt.format(2001), "2001")
assertEquals("двух тысяч двух", fmt.format(2002), "2002")
assertEquals("девяти тысяч девятисот девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысяч девятисот девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысяч", fmt.format(10000), "10000")
assertEquals("десяти тысяч одних", fmt.format(10001), "10001")
assertEquals("десяти тысяч двух", fmt.format(10002), "10002")
assertEquals("ста тысяч", fmt.format(100000), "100000")
assertEquals("ста тысяч одних", fmt.format(100001), "100001")
assertEquals("ста тысяч двух", fmt.format(100002), "100002")
assertEquals("двухсот тысяч", fmt.format(200000), "200000")
assertEquals("двухсот тысяч одних", fmt.format(200001), "200001")
assertEquals("двухсот тысяч двух", fmt.format(200002), "200002")
assertEquals("одного миллиона", fmt.format(1000000), "1000000")
assertEquals("одного миллиона одних", fmt.format(1000001), "1000001")
assertEquals("одного миллиона двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионов", fmt.format(2000000), "2000000")
assertEquals("двух миллионов одних", fmt.format(2000001), "2000001")
assertEquals("двух миллионов двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионов", fmt.format(10000000), "10000000")
assertEquals("десяти миллионов одних", fmt.format(10000001), "10000001")
assertEquals("десяти миллионов двух", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионов одних", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионов двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионов", fmt.format(100000000), "100000000")
assertEquals("ста миллионов одних", fmt.format(100000001), "100000001")
assertEquals("ста миллионов двух", fmt.format(100000002), "100000002")
assertEquals("двухсот миллионов", fmt.format(200000000), "200000000")
assertEquals("двухсот миллионов одних", fmt.format(200000001), "200000001")
assertEquals("двухсот миллионов двух", fmt.format(200000002), "200000002")
assertEquals("одного миллиарда", fmt.format(1000000000), "1000000000")
assertEquals("одного миллиарда одних", fmt.format(1000000001), "1000000001")
assertEquals("одного миллиарда двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардов", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардов одних", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардов двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalFeminineGenitive() {
 val fmt = RBNFRu().spelloutCardinalFeminineGenitive
assertEquals("минус одной", fmt.format(-1), "-1")
assertEquals("ноля", fmt.format(0), "0")
assertEquals("двух десятых", fmt.format(0.2), "0.2")
assertEquals("двух тысяч трехсот сорока пяти десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("двух сотых", fmt.format(0.02), "0.02")
assertEquals("двухсот тринадцати десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четырех целых семисот пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целых пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целых двухсот пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целых двух тысяч двухсот пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одной", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одной", fmt.format(21), "21")
assertEquals("двадцати двух", fmt.format(22), "22")
assertEquals("двадцати трех", fmt.format(23), "23")
assertEquals("двадцати четырех", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одной", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одной", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятисот девяноста восьми", fmt.format(998), "998")
assertEquals("девятисот девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысячи", fmt.format(1000), "1000")
assertEquals("одной тысячи одной", fmt.format(1001), "1001")
assertEquals("одной тысячи двух", fmt.format(1002), "1002")
assertEquals("одной тысячи девятисот девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысячи девятисот девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысяч", fmt.format(2000), "2000")
assertEquals("двух тысяч одной", fmt.format(2001), "2001")
assertEquals("двух тысяч двух", fmt.format(2002), "2002")
assertEquals("девяти тысяч девятисот девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысяч девятисот девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысяч", fmt.format(10000), "10000")
assertEquals("десяти тысяч одной", fmt.format(10001), "10001")
assertEquals("десяти тысяч двух", fmt.format(10002), "10002")
assertEquals("ста тысяч", fmt.format(100000), "100000")
assertEquals("ста тысяч одной", fmt.format(100001), "100001")
assertEquals("ста тысяч двух", fmt.format(100002), "100002")
assertEquals("двухсот тысяч", fmt.format(200000), "200000")
assertEquals("двухсот тысяч одной", fmt.format(200001), "200001")
assertEquals("двухсот тысяч двух", fmt.format(200002), "200002")
assertEquals("одного миллиона", fmt.format(1000000), "1000000")
assertEquals("одного миллиона одной", fmt.format(1000001), "1000001")
assertEquals("одного миллиона двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионов", fmt.format(2000000), "2000000")
assertEquals("двух миллионов одной", fmt.format(2000001), "2000001")
assertEquals("двух миллионов двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионов", fmt.format(10000000), "10000000")
assertEquals("десяти миллионов одной", fmt.format(10000001), "10000001")
assertEquals("десяти миллионов двух", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионов одной", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионов двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионов", fmt.format(100000000), "100000000")
assertEquals("ста миллионов одной", fmt.format(100000001), "100000001")
assertEquals("ста миллионов двух", fmt.format(100000002), "100000002")
assertEquals("двухсот миллионов", fmt.format(200000000), "200000000")
assertEquals("двухсот миллионов одной", fmt.format(200000001), "200000001")
assertEquals("двухсот миллионов двух", fmt.format(200000002), "200000002")
assertEquals("одного миллиарда", fmt.format(1000000000), "1000000000")
assertEquals("одного миллиарда одной", fmt.format(1000000001), "1000000001")
assertEquals("одного миллиарда двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардов", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардов одной", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардов двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalNeuterGenitive() {
 val fmt = RBNFRu().spelloutCardinalNeuterGenitive
assertEquals("минус одного", fmt.format(-1), "-1")
assertEquals("ноля", fmt.format(0), "0")
assertEquals("двух десятых", fmt.format(0.2), "0.2")
assertEquals("двух тысяч трехсот сорока пяти десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("двух сотых", fmt.format(0.02), "0.02")
assertEquals("двухсот тринадцати десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четырех целых семисот пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целых пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целых двухсот пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целых двух тысяч двухсот пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одного", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одного", fmt.format(21), "21")
assertEquals("двадцати двух", fmt.format(22), "22")
assertEquals("двадцати трех", fmt.format(23), "23")
assertEquals("двадцати четырех", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одного", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одного", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятисот девяноста восьми", fmt.format(998), "998")
assertEquals("девятисот девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысячи", fmt.format(1000), "1000")
assertEquals("одной тысячи одного", fmt.format(1001), "1001")
assertEquals("одной тысячи двух", fmt.format(1002), "1002")
assertEquals("одной тысячи девятисот девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысячи девятисот девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысяч", fmt.format(2000), "2000")
assertEquals("двух тысяч одного", fmt.format(2001), "2001")
assertEquals("двух тысяч двух", fmt.format(2002), "2002")
assertEquals("девяти тысяч девятисот девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысяч девятисот девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысяч", fmt.format(10000), "10000")
assertEquals("десяти тысяч одного", fmt.format(10001), "10001")
assertEquals("десяти тысяч двух", fmt.format(10002), "10002")
assertEquals("ста тысяч", fmt.format(100000), "100000")
assertEquals("ста тысяч одного", fmt.format(100001), "100001")
assertEquals("ста тысяч двух", fmt.format(100002), "100002")
assertEquals("двухсот тысяч", fmt.format(200000), "200000")
assertEquals("двухсот тысяч одного", fmt.format(200001), "200001")
assertEquals("двухсот тысяч двух", fmt.format(200002), "200002")
assertEquals("одного миллиона", fmt.format(1000000), "1000000")
assertEquals("одного миллиона одного", fmt.format(1000001), "1000001")
assertEquals("одного миллиона двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионов", fmt.format(2000000), "2000000")
assertEquals("двух миллионов одного", fmt.format(2000001), "2000001")
assertEquals("двух миллионов двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионов", fmt.format(10000000), "10000000")
assertEquals("десяти миллионов одного", fmt.format(10000001), "10000001")
assertEquals("десяти миллионов двух", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионов одного", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионов двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионов", fmt.format(100000000), "100000000")
assertEquals("ста миллионов одного", fmt.format(100000001), "100000001")
assertEquals("ста миллионов двух", fmt.format(100000002), "100000002")
assertEquals("двухсот миллионов", fmt.format(200000000), "200000000")
assertEquals("двухсот миллионов одного", fmt.format(200000001), "200000001")
assertEquals("двухсот миллионов двух", fmt.format(200000002), "200000002")
assertEquals("одного миллиарда", fmt.format(1000000000), "1000000000")
assertEquals("одного миллиарда одного", fmt.format(1000000001), "1000000001")
assertEquals("одного миллиарда двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардов", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардов одного", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардов двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalMasculineGenitive() {
 val fmt = RBNFRu().spelloutCardinalMasculineGenitive
assertEquals("минус одного", fmt.format(-1), "-1")
assertEquals("ноля", fmt.format(0), "0")
assertEquals("двух десятых", fmt.format(0.2), "0.2")
assertEquals("двух тысяч трехсот сорока пяти десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("двух сотых", fmt.format(0.02), "0.02")
assertEquals("двухсот тринадцати десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четырех целых семисот пятидесяти одной тысячной", fmt.format(4.751), "4.751")
assertEquals("двенадцати целых пятидесяти одной тысячной", fmt.format(12.051), "12.051")
assertEquals("тринадцати целых двухсот пятидесяти одной десятитысячной", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцати целых двух тысяч двухсот пятидесяти одной стотысячной", fmt.format(14.02251), "14.02251")
assertEquals("одного", fmt.format(1), "1")
assertEquals("двух", fmt.format(2), "2")
assertEquals("трех", fmt.format(3), "3")
assertEquals("четырех", fmt.format(4), "4")
assertEquals("пяти", fmt.format(5), "5")
assertEquals("шести", fmt.format(6), "6")
assertEquals("семи", fmt.format(7), "7")
assertEquals("восьми", fmt.format(8), "8")
assertEquals("девяти", fmt.format(9), "9")
assertEquals("десяти", fmt.format(10), "10")
assertEquals("одиннадцати", fmt.format(11), "11")
assertEquals("двенадцати", fmt.format(12), "12")
assertEquals("тринадцати", fmt.format(13), "13")
assertEquals("четырнадцати", fmt.format(14), "14")
assertEquals("пятнадцати", fmt.format(15), "15")
assertEquals("шестнадцати", fmt.format(16), "16")
assertEquals("семнадцати", fmt.format(17), "17")
assertEquals("восемнадцати", fmt.format(18), "18")
assertEquals("девятнадцати", fmt.format(19), "19")
assertEquals("двадцати", fmt.format(20), "20")
assertEquals("двадцати одного", fmt.format(21), "21")
assertEquals("двадцати двух", fmt.format(22), "22")
assertEquals("двадцати трех", fmt.format(23), "23")
assertEquals("двадцати четырех", fmt.format(24), "24")
assertEquals("двадцати пяти", fmt.format(25), "25")
assertEquals("двадцати шести", fmt.format(26), "26")
assertEquals("двадцати семи", fmt.format(27), "27")
assertEquals("двадцати восьми", fmt.format(28), "28")
assertEquals("двадцати девяти", fmt.format(29), "29")
assertEquals("тридцати", fmt.format(30), "30")
assertEquals("тридцати одного", fmt.format(31), "31")
assertEquals("девяноста восьми", fmt.format(98), "98")
assertEquals("девяноста девяти", fmt.format(99), "99")
assertEquals("ста", fmt.format(100), "100")
assertEquals("ста одного", fmt.format(101), "101")
assertEquals("ста двух", fmt.format(102), "102")
assertEquals("девятисот девяноста восьми", fmt.format(998), "998")
assertEquals("девятисот девяноста девяти", fmt.format(999), "999")
assertEquals("одной тысячи", fmt.format(1000), "1000")
assertEquals("одной тысячи одного", fmt.format(1001), "1001")
assertEquals("одной тысячи двух", fmt.format(1002), "1002")
assertEquals("одной тысячи девятисот девяноста восьми", fmt.format(1998), "1998")
assertEquals("одной тысячи девятисот девяноста девяти", fmt.format(1999), "1999")
assertEquals("двух тысяч", fmt.format(2000), "2000")
assertEquals("двух тысяч одного", fmt.format(2001), "2001")
assertEquals("двух тысяч двух", fmt.format(2002), "2002")
assertEquals("девяти тысяч девятисот девяноста восьми", fmt.format(9998), "9998")
assertEquals("девяти тысяч девятисот девяноста девяти", fmt.format(9999), "9999")
assertEquals("десяти тысяч", fmt.format(10000), "10000")
assertEquals("десяти тысяч одного", fmt.format(10001), "10001")
assertEquals("десяти тысяч двух", fmt.format(10002), "10002")
assertEquals("ста тысяч", fmt.format(100000), "100000")
assertEquals("ста тысяч одного", fmt.format(100001), "100001")
assertEquals("ста тысяч двух", fmt.format(100002), "100002")
assertEquals("двухсот тысяч", fmt.format(200000), "200000")
assertEquals("двухсот тысяч одного", fmt.format(200001), "200001")
assertEquals("двухсот тысяч двух", fmt.format(200002), "200002")
assertEquals("одного миллиона", fmt.format(1000000), "1000000")
assertEquals("одного миллиона одного", fmt.format(1000001), "1000001")
assertEquals("одного миллиона двух", fmt.format(1000002), "1000002")
assertEquals("двух миллионов", fmt.format(2000000), "2000000")
assertEquals("двух миллионов одного", fmt.format(2000001), "2000001")
assertEquals("двух миллионов двух", fmt.format(2000002), "2000002")
assertEquals("десяти миллионов", fmt.format(10000000), "10000000")
assertEquals("десяти миллионов одного", fmt.format(10000001), "10000001")
assertEquals("десяти миллионов двух", fmt.format(10000002), "10000002")
assertEquals("двадцати миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцати миллионов одного", fmt.format(20000001), "20000001")
assertEquals("двадцати миллионов двух", fmt.format(20000002), "20000002")
assertEquals("ста миллионов", fmt.format(100000000), "100000000")
assertEquals("ста миллионов одного", fmt.format(100000001), "100000001")
assertEquals("ста миллионов двух", fmt.format(100000002), "100000002")
assertEquals("двухсот миллионов", fmt.format(200000000), "200000000")
assertEquals("двухсот миллионов одного", fmt.format(200000001), "200000001")
assertEquals("двухсот миллионов двух", fmt.format(200000002), "200000002")
assertEquals("одного миллиарда", fmt.format(1000000000), "1000000000")
assertEquals("одного миллиарда одного", fmt.format(1000000001), "1000000001")
assertEquals("одного миллиарда двух", fmt.format(1000000002), "1000000002")
assertEquals("двух миллиардов", fmt.format(2000000000), "2000000000")
assertEquals("двух миллиардов одного", fmt.format(2000000001), "2000000001")
assertEquals("двух миллиардов двух", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalPlural() {
 val fmt = RBNFRu().spelloutCardinalPlural
assertEquals("минус одни", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("ноль запятая две", fmt.format(0.2), "0.2")
assertEquals("ноль запятая две три четыре пять", fmt.format(0.2345), "0.2345")
assertEquals("ноль запятая ноль две", fmt.format(0.02), "0.02")
assertEquals("ноль запятая ноль две одни три", fmt.format(0.0213), "0.0213")
assertEquals("четыре запятая семь пять одни", fmt.format(4.751), "4.751")
assertEquals("двенадцать запятая ноль пять одни", fmt.format(12.051), "12.051")
assertEquals("тринадцать запятая ноль две пять одни", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать запятая ноль две две пять одни", fmt.format(14.02251), "14.02251")
assertEquals("одни", fmt.format(1), "1")
assertEquals("две", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать одни", fmt.format(21), "21")
assertEquals("двадцать две", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать одни", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто одни", fmt.format(101), "101")
assertEquals("сто две", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одна тысяча", fmt.format(1000), "1000")
assertEquals("одна тысяча одни", fmt.format(1001), "1001")
assertEquals("одна тысяча две", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи одни", fmt.format(2001), "2001")
assertEquals("две тысячи две", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч одни", fmt.format(10001), "10001")
assertEquals("десять тысяч две", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч одни", fmt.format(100001), "100001")
assertEquals("сто тысяч две", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч одни", fmt.format(200001), "200001")
assertEquals("двести тысяч две", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион одни", fmt.format(1000001), "1000001")
assertEquals("один миллион две", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона одни", fmt.format(2000001), "2000001")
assertEquals("два миллиона две", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов одни", fmt.format(10000001), "10000001")
assertEquals("десять миллионов две", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов одни", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов две", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов одни", fmt.format(100000001), "100000001")
assertEquals("сто миллионов две", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов одни", fmt.format(200000001), "200000001")
assertEquals("двести миллионов две", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард одни", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард две", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда одни", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда две", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalFeminine() {
 val fmt = RBNFRu().spelloutCardinalFeminine
assertEquals("минус одна", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("две десятых", fmt.format(0.2), "0.2")
assertEquals("две тысячи триста сорок пять десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("две сотых", fmt.format(0.02), "0.02")
assertEquals("двести тринадцать десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четыре целых семьсот пятьдесят одна тысячная", fmt.format(4.751), "4.751")
assertEquals("двенадцать целых пятьдесят одна тысячная", fmt.format(12.051), "12.051")
assertEquals("тринадцать целых двести пятьдесят одна десятитысячная", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать целых две тысячи двести пятьдесят одна стотысячная", fmt.format(14.02251), "14.02251")
assertEquals("одна", fmt.format(1), "1")
assertEquals("две", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать одна", fmt.format(21), "21")
assertEquals("двадцать две", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать одна", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто одна", fmt.format(101), "101")
assertEquals("сто две", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одна тысяча", fmt.format(1000), "1000")
assertEquals("одна тысяча одна", fmt.format(1001), "1001")
assertEquals("одна тысяча две", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи одна", fmt.format(2001), "2001")
assertEquals("две тысячи две", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч одна", fmt.format(10001), "10001")
assertEquals("десять тысяч две", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч одна", fmt.format(100001), "100001")
assertEquals("сто тысяч две", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч одна", fmt.format(200001), "200001")
assertEquals("двести тысяч две", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион одна", fmt.format(1000001), "1000001")
assertEquals("один миллион две", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона одна", fmt.format(2000001), "2000001")
assertEquals("два миллиона две", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов одна", fmt.format(10000001), "10000001")
assertEquals("десять миллионов две", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов одна", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов две", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов одна", fmt.format(100000001), "100000001")
assertEquals("сто миллионов две", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов одна", fmt.format(200000001), "200000001")
assertEquals("двести миллионов две", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард одна", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард две", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда одна", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда две", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalNeuter() {
 val fmt = RBNFRu().spelloutCardinalNeuter
assertEquals("минус одно", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("две десятых", fmt.format(0.2), "0.2")
assertEquals("две тысячи триста сорок пять десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("две сотых", fmt.format(0.02), "0.02")
assertEquals("двести тринадцать десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четыре целых семьсот пятьдесят одна тысячная", fmt.format(4.751), "4.751")
assertEquals("двенадцать целых пятьдесят одна тысячная", fmt.format(12.051), "12.051")
assertEquals("тринадцать целых двести пятьдесят одна десятитысячная", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать целых две тысячи двести пятьдесят одна стотысячная", fmt.format(14.02251), "14.02251")
assertEquals("одно", fmt.format(1), "1")
assertEquals("два", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать одно", fmt.format(21), "21")
assertEquals("двадцать два", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать одно", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто одно", fmt.format(101), "101")
assertEquals("сто два", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одна тысяча", fmt.format(1000), "1000")
assertEquals("одна тысяча одно", fmt.format(1001), "1001")
assertEquals("одна тысяча два", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи одно", fmt.format(2001), "2001")
assertEquals("две тысячи два", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч одно", fmt.format(10001), "10001")
assertEquals("десять тысяч два", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч одно", fmt.format(100001), "100001")
assertEquals("сто тысяч два", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч одно", fmt.format(200001), "200001")
assertEquals("двести тысяч два", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион одно", fmt.format(1000001), "1000001")
assertEquals("один миллион два", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона одно", fmt.format(2000001), "2000001")
assertEquals("два миллиона два", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов одно", fmt.format(10000001), "10000001")
assertEquals("десять миллионов два", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов одно", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов два", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов одно", fmt.format(100000001), "100000001")
assertEquals("сто миллионов два", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов одно", fmt.format(200000001), "200000001")
assertEquals("двести миллионов два", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард одно", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард два", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда одно", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда два", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalMasculine() {
 val fmt = RBNFRu().spelloutCardinalMasculine
assertEquals("минус один", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("две десятых", fmt.format(0.2), "0.2")
assertEquals("две тысячи триста сорок пять десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("две сотых", fmt.format(0.02), "0.02")
assertEquals("двести тринадцать десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четыре целых семьсот пятьдесят одна тысячная", fmt.format(4.751), "4.751")
assertEquals("двенадцать целых пятьдесят одна тысячная", fmt.format(12.051), "12.051")
assertEquals("тринадцать целых двести пятьдесят одна десятитысячная", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать целых две тысячи двести пятьдесят одна стотысячная", fmt.format(14.02251), "14.02251")
assertEquals("один", fmt.format(1), "1")
assertEquals("два", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать один", fmt.format(21), "21")
assertEquals("двадцать два", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать один", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто один", fmt.format(101), "101")
assertEquals("сто два", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одна тысяча", fmt.format(1000), "1000")
assertEquals("одна тысяча один", fmt.format(1001), "1001")
assertEquals("одна тысяча два", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи один", fmt.format(2001), "2001")
assertEquals("две тысячи два", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч один", fmt.format(10001), "10001")
assertEquals("десять тысяч два", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч один", fmt.format(100001), "100001")
assertEquals("сто тысяч два", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч один", fmt.format(200001), "200001")
assertEquals("двести тысяч два", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион один", fmt.format(1000001), "1000001")
assertEquals("один миллион два", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона один", fmt.format(2000001), "2000001")
assertEquals("два миллиона два", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов один", fmt.format(10000001), "10000001")
assertEquals("десять миллионов два", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов один", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов два", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов один", fmt.format(100000001), "100000001")
assertEquals("сто миллионов два", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов один", fmt.format(200000001), "200000001")
assertEquals("двести миллионов два", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард один", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард два", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда один", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда два", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutNumbering() {
 val fmt = RBNFRu().spelloutNumbering
assertEquals("минус один", fmt.format(-1), "-1")
assertEquals("ноль", fmt.format(0), "0")
assertEquals("две десятых", fmt.format(0.2), "0.2")
assertEquals("две тысячи триста сорок пять десятитысячных", fmt.format(0.2345), "0.2345")
assertEquals("две сотых", fmt.format(0.02), "0.02")
assertEquals("двести тринадцать десятитысячных", fmt.format(0.0213), "0.0213")
assertEquals("четыре целых семьсот пятьдесят одна тысячная", fmt.format(4.751), "4.751")
assertEquals("двенадцать целых пятьдесят одна тысячная", fmt.format(12.051), "12.051")
assertEquals("тринадцать целых двести пятьдесят одна десятитысячная", fmt.format(13.0251), "13.0251")
assertEquals("четырнадцать целых две тысячи двести пятьдесят одна стотысячная", fmt.format(14.02251), "14.02251")
assertEquals("один", fmt.format(1), "1")
assertEquals("два", fmt.format(2), "2")
assertEquals("три", fmt.format(3), "3")
assertEquals("четыре", fmt.format(4), "4")
assertEquals("пять", fmt.format(5), "5")
assertEquals("шесть", fmt.format(6), "6")
assertEquals("семь", fmt.format(7), "7")
assertEquals("восемь", fmt.format(8), "8")
assertEquals("девять", fmt.format(9), "9")
assertEquals("десять", fmt.format(10), "10")
assertEquals("одиннадцать", fmt.format(11), "11")
assertEquals("двенадцать", fmt.format(12), "12")
assertEquals("тринадцать", fmt.format(13), "13")
assertEquals("четырнадцать", fmt.format(14), "14")
assertEquals("пятнадцать", fmt.format(15), "15")
assertEquals("шестнадцать", fmt.format(16), "16")
assertEquals("семнадцать", fmt.format(17), "17")
assertEquals("восемнадцать", fmt.format(18), "18")
assertEquals("девятнадцать", fmt.format(19), "19")
assertEquals("двадцать", fmt.format(20), "20")
assertEquals("двадцать один", fmt.format(21), "21")
assertEquals("двадцать два", fmt.format(22), "22")
assertEquals("двадцать три", fmt.format(23), "23")
assertEquals("двадцать четыре", fmt.format(24), "24")
assertEquals("двадцать пять", fmt.format(25), "25")
assertEquals("двадцать шесть", fmt.format(26), "26")
assertEquals("двадцать семь", fmt.format(27), "27")
assertEquals("двадцать восемь", fmt.format(28), "28")
assertEquals("двадцать девять", fmt.format(29), "29")
assertEquals("тридцать", fmt.format(30), "30")
assertEquals("тридцать один", fmt.format(31), "31")
assertEquals("девяносто восемь", fmt.format(98), "98")
assertEquals("девяносто девять", fmt.format(99), "99")
assertEquals("сто", fmt.format(100), "100")
assertEquals("сто один", fmt.format(101), "101")
assertEquals("сто два", fmt.format(102), "102")
assertEquals("девятьсот девяносто восемь", fmt.format(998), "998")
assertEquals("девятьсот девяносто девять", fmt.format(999), "999")
assertEquals("одна тысяча", fmt.format(1000), "1000")
assertEquals("одна тысяча один", fmt.format(1001), "1001")
assertEquals("одна тысяча два", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восемь", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девять", fmt.format(1999), "1999")
assertEquals("две тысячи", fmt.format(2000), "2000")
assertEquals("две тысячи один", fmt.format(2001), "2001")
assertEquals("две тысячи два", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восемь", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девять", fmt.format(9999), "9999")
assertEquals("десять тысяч", fmt.format(10000), "10000")
assertEquals("десять тысяч один", fmt.format(10001), "10001")
assertEquals("десять тысяч два", fmt.format(10002), "10002")
assertEquals("сто тысяч", fmt.format(100000), "100000")
assertEquals("сто тысяч один", fmt.format(100001), "100001")
assertEquals("сто тысяч два", fmt.format(100002), "100002")
assertEquals("двести тысяч", fmt.format(200000), "200000")
assertEquals("двести тысяч один", fmt.format(200001), "200001")
assertEquals("двести тысяч два", fmt.format(200002), "200002")
assertEquals("один миллион", fmt.format(1000000), "1000000")
assertEquals("один миллион один", fmt.format(1000001), "1000001")
assertEquals("один миллион два", fmt.format(1000002), "1000002")
assertEquals("два миллиона", fmt.format(2000000), "2000000")
assertEquals("два миллиона один", fmt.format(2000001), "2000001")
assertEquals("два миллиона два", fmt.format(2000002), "2000002")
assertEquals("десять миллионов", fmt.format(10000000), "10000000")
assertEquals("десять миллионов один", fmt.format(10000001), "10000001")
assertEquals("десять миллионов два", fmt.format(10000002), "10000002")
assertEquals("двадцать миллионов", fmt.format(20000000), "20000000")
assertEquals("двадцать миллионов один", fmt.format(20000001), "20000001")
assertEquals("двадцать миллионов два", fmt.format(20000002), "20000002")
assertEquals("сто миллионов", fmt.format(100000000), "100000000")
assertEquals("сто миллионов один", fmt.format(100000001), "100000001")
assertEquals("сто миллионов два", fmt.format(100000002), "100000002")
assertEquals("двести миллионов", fmt.format(200000000), "200000000")
assertEquals("двести миллионов один", fmt.format(200000001), "200000001")
assertEquals("двести миллионов два", fmt.format(200000002), "200000002")
assertEquals("один миллиард", fmt.format(1000000000), "1000000000")
assertEquals("один миллиард один", fmt.format(1000000001), "1000000001")
assertEquals("один миллиард два", fmt.format(1000000002), "1000000002")
assertEquals("два миллиарда", fmt.format(2000000000), "2000000000")
assertEquals("два миллиарда один", fmt.format(2000000001), "2000000001")
assertEquals("два миллиарда два", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutNumberingYear() {
 val fmt = RBNFRu().spelloutNumberingYear
// nonsense assertEquals("минус первого", fmt.format(-1), "-1")
// nonsense assertEquals("нулевого", fmt.format(0), "0")
// nonsense assertEquals("0,2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0,2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0,0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0,0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4,8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12,1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13,0", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14,0", fmt.format(14.02251), "14.02251")
assertEquals("первого", fmt.format(1), "1")
assertEquals("второго", fmt.format(2), "2")
assertEquals("третьего", fmt.format(3), "3")
assertEquals("четвертого", fmt.format(4), "4")
assertEquals("пятого", fmt.format(5), "5")
assertEquals("шестого", fmt.format(6), "6")
assertEquals("седьмого", fmt.format(7), "7")
assertEquals("восьмого", fmt.format(8), "8")
assertEquals("девятого", fmt.format(9), "9")
assertEquals("десятого", fmt.format(10), "10")
assertEquals("одиннадцатого", fmt.format(11), "11")
assertEquals("двенадцатого", fmt.format(12), "12")
assertEquals("тринадцатого", fmt.format(13), "13")
assertEquals("четырнадцатого", fmt.format(14), "14")
assertEquals("пятнадцатого", fmt.format(15), "15")
assertEquals("шестнадцатого", fmt.format(16), "16")
assertEquals("семнадцатого", fmt.format(17), "17")
assertEquals("восемнадцатого", fmt.format(18), "18")
assertEquals("девятнадцатого", fmt.format(19), "19")
assertEquals("двадцатого", fmt.format(20), "20")
assertEquals("двадцать первого", fmt.format(21), "21")
assertEquals("двадцать второго", fmt.format(22), "22")
assertEquals("двадцать третьего", fmt.format(23), "23")
assertEquals("двадцать четвертого", fmt.format(24), "24")
assertEquals("двадцать пятого", fmt.format(25), "25")
assertEquals("двадцать шестого", fmt.format(26), "26")
assertEquals("двадцать седьмого", fmt.format(27), "27")
assertEquals("двадцать восьмого", fmt.format(28), "28")
assertEquals("двадцать девятого", fmt.format(29), "29")
assertEquals("тридцатого", fmt.format(30), "30")
assertEquals("тридцать первого", fmt.format(31), "31")
assertEquals("девяносто восьмого", fmt.format(98), "98")
assertEquals("девяносто девятого", fmt.format(99), "99")
assertEquals("сотого", fmt.format(100), "100")
assertEquals("сто первого", fmt.format(101), "101")
assertEquals("сто второго", fmt.format(102), "102")
assertEquals("девятьсот девяносто восьмого", fmt.format(998), "998")
assertEquals("девятьсот девяносто девятого", fmt.format(999), "999")
assertEquals("тысячного", fmt.format(1000), "1000")
assertEquals("одна тысяча первого", fmt.format(1001), "1001")
assertEquals("одна тысяча второго", fmt.format(1002), "1002")
assertEquals("одна тысяча девятьсот девяносто восьмого", fmt.format(1998), "1998")
assertEquals("одна тысяча девятьсот девяносто девятого", fmt.format(1999), "1999")
assertEquals("двухтысячного", fmt.format(2000), "2000")
assertEquals("две тысячи первого", fmt.format(2001), "2001")
assertEquals("две тысячи второго", fmt.format(2002), "2002")
assertEquals("девять тысяч девятьсот девяносто восьмого", fmt.format(9998), "9998")
assertEquals("девять тысяч девятьсот девяносто девятого", fmt.format(9999), "9999")
assertEquals("десятитысячного", fmt.format(10000), "10000")
assertEquals("десять тысяч первого", fmt.format(10001), "10001")
assertEquals("десять тысяч второго", fmt.format(10002), "10002")
assertEquals("100000-го", fmt.format(100000), "100000")
assertEquals("100001-го", fmt.format(100001), "100001")
assertEquals("100002-го", fmt.format(100002), "100002")
assertEquals("200000-го", fmt.format(200000), "200000")
assertEquals("200001-го", fmt.format(200001), "200001")
assertEquals("200002-го", fmt.format(200002), "200002")
assertEquals("1000000-го", fmt.format(1000000), "1000000")
assertEquals("1000001-го", fmt.format(1000001), "1000001")
assertEquals("1000002-го", fmt.format(1000002), "1000002")
assertEquals("2000000-го", fmt.format(2000000), "2000000")
assertEquals("2000001-го", fmt.format(2000001), "2000001")
assertEquals("2000002-го", fmt.format(2000002), "2000002")
assertEquals("10000000-го", fmt.format(10000000), "10000000")
assertEquals("10000001-го", fmt.format(10000001), "10000001")
assertEquals("10000002-го", fmt.format(10000002), "10000002")
assertEquals("20000000-го", fmt.format(20000000), "20000000")
assertEquals("20000001-го", fmt.format(20000001), "20000001")
assertEquals("20000002-го", fmt.format(20000002), "20000002")
assertEquals("100000000-го", fmt.format(100000000), "100000000")
assertEquals("100000001-го", fmt.format(100000001), "100000001")
assertEquals("100000002-го", fmt.format(100000002), "100000002")
assertEquals("200000000-го", fmt.format(200000000), "200000000")
assertEquals("200000001-го", fmt.format(200000001), "200000001")
assertEquals("200000002-го", fmt.format(200000002), "200000002")
assertEquals("1000000000-го", fmt.format(1000000000), "1000000000")
assertEquals("1000000001-го", fmt.format(1000000001), "1000000001")
assertEquals("1000000002-го", fmt.format(1000000002), "1000000002")
assertEquals("2000000000-го", fmt.format(2000000000), "2000000000")
assertEquals("2000000001-го", fmt.format(2000000001), "2000000001")
assertEquals("2000000002-го", fmt.format(2000000002), "2000000002")
  }
}
