package info.leonenko.i18n.rbnf
    
    import kotlin.test.Test
    import kotlin.test.assertEquals
    
class RBNFZhTest {
  @Test
  fun spelloutOrdinal() {
 val fmt = RBNFZh().spelloutOrdinal
// nonsense assertEquals("第负一", fmt.format(-1), "-1")
// nonsense assertEquals("第〇", fmt.format(0), "0")
// nonsense assertEquals("0.2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0.2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4.8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12.1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("第一", fmt.format(1), "1")
assertEquals("第二", fmt.format(2), "2")
assertEquals("第三", fmt.format(3), "3")
assertEquals("第四", fmt.format(4), "4")
assertEquals("第五", fmt.format(5), "5")
assertEquals("第六", fmt.format(6), "6")
assertEquals("第七", fmt.format(7), "7")
assertEquals("第八", fmt.format(8), "8")
assertEquals("第九", fmt.format(9), "9")
assertEquals("第十", fmt.format(10), "10")
assertEquals("第十一", fmt.format(11), "11")
assertEquals("第十二", fmt.format(12), "12")
assertEquals("第十三", fmt.format(13), "13")
assertEquals("第十四", fmt.format(14), "14")
assertEquals("第十五", fmt.format(15), "15")
assertEquals("第十六", fmt.format(16), "16")
assertEquals("第十七", fmt.format(17), "17")
assertEquals("第十八", fmt.format(18), "18")
assertEquals("第十九", fmt.format(19), "19")
assertEquals("第二十", fmt.format(20), "20")
assertEquals("第二十一", fmt.format(21), "21")
assertEquals("第二十二", fmt.format(22), "22")
assertEquals("第二十三", fmt.format(23), "23")
assertEquals("第二十四", fmt.format(24), "24")
assertEquals("第二十五", fmt.format(25), "25")
assertEquals("第二十六", fmt.format(26), "26")
assertEquals("第二十七", fmt.format(27), "27")
assertEquals("第二十八", fmt.format(28), "28")
assertEquals("第二十九", fmt.format(29), "29")
assertEquals("第三十", fmt.format(30), "30")
assertEquals("第三十一", fmt.format(31), "31")
assertEquals("第九十八", fmt.format(98), "98")
assertEquals("第九十九", fmt.format(99), "99")
assertEquals("第一百", fmt.format(100), "100")
assertEquals("第一百〇一", fmt.format(101), "101")
assertEquals("第一百〇二", fmt.format(102), "102")
assertEquals("第九百九十八", fmt.format(998), "998")
assertEquals("第九百九十九", fmt.format(999), "999")
assertEquals("第一千", fmt.format(1000), "1000")
assertEquals("第一千〇一", fmt.format(1001), "1001")
assertEquals("第一千〇二", fmt.format(1002), "1002")
assertEquals("第一千九百九十八", fmt.format(1998), "1998")
assertEquals("第一千九百九十九", fmt.format(1999), "1999")
assertEquals("第二千", fmt.format(2000), "2000")
assertEquals("第二千〇一", fmt.format(2001), "2001")
assertEquals("第二千〇二", fmt.format(2002), "2002")
assertEquals("第九千九百九十八", fmt.format(9998), "9998")
assertEquals("第九千九百九十九", fmt.format(9999), "9999")
assertEquals("第一万", fmt.format(10000), "10000")
assertEquals("第一万〇一", fmt.format(10001), "10001")
assertEquals("第一万〇二", fmt.format(10002), "10002")
assertEquals("第十万", fmt.format(100000), "100000")
assertEquals("第十万〇一", fmt.format(100001), "100001")
assertEquals("第十万〇二", fmt.format(100002), "100002")
assertEquals("第二十万", fmt.format(200000), "200000")
assertEquals("第二十万〇一", fmt.format(200001), "200001")
assertEquals("第二十万〇二", fmt.format(200002), "200002")
assertEquals("第一百万", fmt.format(1000000), "1000000")
assertEquals("第一百万〇一", fmt.format(1000001), "1000001")
assertEquals("第一百万〇二", fmt.format(1000002), "1000002")
assertEquals("第二百万", fmt.format(2000000), "2000000")
assertEquals("第二百万〇一", fmt.format(2000001), "2000001")
assertEquals("第二百万〇二", fmt.format(2000002), "2000002")
assertEquals("第一千万", fmt.format(10000000), "10000000")
assertEquals("第一千万〇一", fmt.format(10000001), "10000001")
assertEquals("第一千万〇二", fmt.format(10000002), "10000002")
assertEquals("第二千万", fmt.format(20000000), "20000000")
assertEquals("第二千万〇一", fmt.format(20000001), "20000001")
assertEquals("第二千万〇二", fmt.format(20000002), "20000002")
assertEquals("第一亿", fmt.format(100000000), "100000000")
assertEquals("第一亿〇一", fmt.format(100000001), "100000001")
assertEquals("第一亿〇二", fmt.format(100000002), "100000002")
assertEquals("第二亿", fmt.format(200000000), "200000000")
assertEquals("第二亿〇一", fmt.format(200000001), "200000001")
assertEquals("第二亿〇二", fmt.format(200000002), "200000002")
assertEquals("第十亿", fmt.format(1000000000), "1000000000")
assertEquals("第十亿〇一", fmt.format(1000000001), "1000000001")
assertEquals("第十亿〇二", fmt.format(1000000002), "1000000002")
assertEquals("第二十亿", fmt.format(2000000000), "2000000000")
assertEquals("第二十亿〇一", fmt.format(2000000001), "2000000001")
assertEquals("第二十亿〇二", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalAlternate2() {
 val fmt = RBNFZh().spelloutCardinalAlternate2
assertEquals("负一", fmt.format(-1), "-1")
assertEquals("零", fmt.format(0), "0")
assertEquals("零点二", fmt.format(0.2), "0.2")
assertEquals("零点二三四五", fmt.format(0.2345), "0.2345")
assertEquals("零点零二", fmt.format(0.02), "0.02")
assertEquals("零点零二一三", fmt.format(0.0213), "0.0213")
assertEquals("四点七五一", fmt.format(4.751), "4.751")
assertEquals("十二点零五一", fmt.format(12.051), "12.051")
assertEquals("十三点零二五一", fmt.format(13.0251), "13.0251")
assertEquals("十四点零二二五一", fmt.format(14.02251), "14.02251")
assertEquals("一", fmt.format(1), "1")
assertEquals("两", fmt.format(2), "2")
assertEquals("三", fmt.format(3), "3")
assertEquals("四", fmt.format(4), "4")
assertEquals("五", fmt.format(5), "5")
assertEquals("六", fmt.format(6), "6")
assertEquals("七", fmt.format(7), "7")
assertEquals("八", fmt.format(8), "8")
assertEquals("九", fmt.format(9), "9")
assertEquals("十", fmt.format(10), "10")
assertEquals("十一", fmt.format(11), "11")
assertEquals("十二", fmt.format(12), "12")
assertEquals("十三", fmt.format(13), "13")
assertEquals("十四", fmt.format(14), "14")
assertEquals("十五", fmt.format(15), "15")
assertEquals("十六", fmt.format(16), "16")
assertEquals("十七", fmt.format(17), "17")
assertEquals("十八", fmt.format(18), "18")
assertEquals("十九", fmt.format(19), "19")
assertEquals("二十", fmt.format(20), "20")
assertEquals("二十一", fmt.format(21), "21")
assertEquals("二十二", fmt.format(22), "22")
assertEquals("二十三", fmt.format(23), "23")
assertEquals("二十四", fmt.format(24), "24")
assertEquals("二十五", fmt.format(25), "25")
assertEquals("二十六", fmt.format(26), "26")
assertEquals("二十七", fmt.format(27), "27")
assertEquals("二十八", fmt.format(28), "28")
assertEquals("二十九", fmt.format(29), "29")
assertEquals("三十", fmt.format(30), "30")
assertEquals("三十一", fmt.format(31), "31")
assertEquals("九十八", fmt.format(98), "98")
assertEquals("九十九", fmt.format(99), "99")
assertEquals("一百", fmt.format(100), "100")
assertEquals("一百零一", fmt.format(101), "101")
assertEquals("一百零二", fmt.format(102), "102")
assertEquals("九百九十八", fmt.format(998), "998")
assertEquals("九百九十九", fmt.format(999), "999")
assertEquals("一千", fmt.format(1000), "1000")
assertEquals("一千零一", fmt.format(1001), "1001")
assertEquals("一千零二", fmt.format(1002), "1002")
assertEquals("一千九百九十八", fmt.format(1998), "1998")
assertEquals("一千九百九十九", fmt.format(1999), "1999")
assertEquals("两千", fmt.format(2000), "2000")
assertEquals("两千零一", fmt.format(2001), "2001")
assertEquals("两千零二", fmt.format(2002), "2002")
assertEquals("九千九百九十八", fmt.format(9998), "9998")
assertEquals("九千九百九十九", fmt.format(9999), "9999")
assertEquals("一万", fmt.format(10000), "10000")
assertEquals("一万零一", fmt.format(10001), "10001")
assertEquals("一万零二", fmt.format(10002), "10002")
assertEquals("十万", fmt.format(100000), "100000")
assertEquals("十万零一", fmt.format(100001), "100001")
assertEquals("十万零二", fmt.format(100002), "100002")
assertEquals("二十万", fmt.format(200000), "200000")
assertEquals("二十万零一", fmt.format(200001), "200001")
assertEquals("二十万零二", fmt.format(200002), "200002")
assertEquals("一百万", fmt.format(1000000), "1000000")
assertEquals("一百万零一", fmt.format(1000001), "1000001")
assertEquals("一百万零二", fmt.format(1000002), "1000002")
assertEquals("两百万", fmt.format(2000000), "2000000")
assertEquals("两百万零一", fmt.format(2000001), "2000001")
assertEquals("两百万零二", fmt.format(2000002), "2000002")
assertEquals("一千万", fmt.format(10000000), "10000000")
assertEquals("一千万零一", fmt.format(10000001), "10000001")
assertEquals("一千万零二", fmt.format(10000002), "10000002")
assertEquals("两千万", fmt.format(20000000), "20000000")
assertEquals("两千万零一", fmt.format(20000001), "20000001")
assertEquals("两千万零二", fmt.format(20000002), "20000002")
assertEquals("一亿", fmt.format(100000000), "100000000")
assertEquals("一亿零一", fmt.format(100000001), "100000001")
assertEquals("一亿零二", fmt.format(100000002), "100000002")
assertEquals("两亿", fmt.format(200000000), "200000000")
assertEquals("两亿零一", fmt.format(200000001), "200000001")
assertEquals("两亿零二", fmt.format(200000002), "200000002")
assertEquals("十亿", fmt.format(1000000000), "1000000000")
assertEquals("十亿零一", fmt.format(1000000001), "1000000001")
assertEquals("十亿零二", fmt.format(1000000002), "1000000002")
assertEquals("二十亿", fmt.format(2000000000), "2000000000")
assertEquals("二十亿零一", fmt.format(2000000001), "2000000001")
assertEquals("二十亿零二", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinal() {
 val fmt = RBNFZh().spelloutCardinal
assertEquals("负一", fmt.format(-1), "-1")
assertEquals("零", fmt.format(0), "0")
assertEquals("零点二", fmt.format(0.2), "0.2")
assertEquals("零点二三四五", fmt.format(0.2345), "0.2345")
assertEquals("零点零二", fmt.format(0.02), "0.02")
assertEquals("零点零二一三", fmt.format(0.0213), "0.0213")
assertEquals("四点七五一", fmt.format(4.751), "4.751")
assertEquals("十二点零五一", fmt.format(12.051), "12.051")
assertEquals("十三点零二五一", fmt.format(13.0251), "13.0251")
assertEquals("十四点零二二五一", fmt.format(14.02251), "14.02251")
assertEquals("一", fmt.format(1), "1")
assertEquals("二", fmt.format(2), "2")
assertEquals("三", fmt.format(3), "3")
assertEquals("四", fmt.format(4), "4")
assertEquals("五", fmt.format(5), "5")
assertEquals("六", fmt.format(6), "6")
assertEquals("七", fmt.format(7), "7")
assertEquals("八", fmt.format(8), "8")
assertEquals("九", fmt.format(9), "9")
assertEquals("十", fmt.format(10), "10")
assertEquals("十一", fmt.format(11), "11")
assertEquals("十二", fmt.format(12), "12")
assertEquals("十三", fmt.format(13), "13")
assertEquals("十四", fmt.format(14), "14")
assertEquals("十五", fmt.format(15), "15")
assertEquals("十六", fmt.format(16), "16")
assertEquals("十七", fmt.format(17), "17")
assertEquals("十八", fmt.format(18), "18")
assertEquals("十九", fmt.format(19), "19")
assertEquals("二十", fmt.format(20), "20")
assertEquals("二十一", fmt.format(21), "21")
assertEquals("二十二", fmt.format(22), "22")
assertEquals("二十三", fmt.format(23), "23")
assertEquals("二十四", fmt.format(24), "24")
assertEquals("二十五", fmt.format(25), "25")
assertEquals("二十六", fmt.format(26), "26")
assertEquals("二十七", fmt.format(27), "27")
assertEquals("二十八", fmt.format(28), "28")
assertEquals("二十九", fmt.format(29), "29")
assertEquals("三十", fmt.format(30), "30")
assertEquals("三十一", fmt.format(31), "31")
assertEquals("九十八", fmt.format(98), "98")
assertEquals("九十九", fmt.format(99), "99")
assertEquals("一百", fmt.format(100), "100")
assertEquals("一百零一", fmt.format(101), "101")
assertEquals("一百零二", fmt.format(102), "102")
assertEquals("九百九十八", fmt.format(998), "998")
assertEquals("九百九十九", fmt.format(999), "999")
assertEquals("一千", fmt.format(1000), "1000")
assertEquals("一千零一", fmt.format(1001), "1001")
assertEquals("一千零二", fmt.format(1002), "1002")
assertEquals("一千九百九十八", fmt.format(1998), "1998")
assertEquals("一千九百九十九", fmt.format(1999), "1999")
assertEquals("二千", fmt.format(2000), "2000")
assertEquals("二千零一", fmt.format(2001), "2001")
assertEquals("二千零二", fmt.format(2002), "2002")
assertEquals("九千九百九十八", fmt.format(9998), "9998")
assertEquals("九千九百九十九", fmt.format(9999), "9999")
assertEquals("一万", fmt.format(10000), "10000")
assertEquals("一万零一", fmt.format(10001), "10001")
assertEquals("一万零二", fmt.format(10002), "10002")
assertEquals("十万", fmt.format(100000), "100000")
assertEquals("十万零一", fmt.format(100001), "100001")
assertEquals("十万零二", fmt.format(100002), "100002")
assertEquals("二十万", fmt.format(200000), "200000")
assertEquals("二十万零一", fmt.format(200001), "200001")
assertEquals("二十万零二", fmt.format(200002), "200002")
assertEquals("一百万", fmt.format(1000000), "1000000")
assertEquals("一百万零一", fmt.format(1000001), "1000001")
assertEquals("一百万零二", fmt.format(1000002), "1000002")
assertEquals("二百万", fmt.format(2000000), "2000000")
assertEquals("二百万零一", fmt.format(2000001), "2000001")
assertEquals("二百万零二", fmt.format(2000002), "2000002")
assertEquals("一千万", fmt.format(10000000), "10000000")
assertEquals("一千万零一", fmt.format(10000001), "10000001")
assertEquals("一千万零二", fmt.format(10000002), "10000002")
assertEquals("二千万", fmt.format(20000000), "20000000")
assertEquals("二千万零一", fmt.format(20000001), "20000001")
assertEquals("二千万零二", fmt.format(20000002), "20000002")
assertEquals("一亿", fmt.format(100000000), "100000000")
assertEquals("一亿零一", fmt.format(100000001), "100000001")
assertEquals("一亿零二", fmt.format(100000002), "100000002")
assertEquals("二亿", fmt.format(200000000), "200000000")
assertEquals("二亿零一", fmt.format(200000001), "200000001")
assertEquals("二亿零二", fmt.format(200000002), "200000002")
assertEquals("十亿", fmt.format(1000000000), "1000000000")
assertEquals("十亿零一", fmt.format(1000000001), "1000000001")
assertEquals("十亿零二", fmt.format(1000000002), "1000000002")
assertEquals("二十亿", fmt.format(2000000000), "2000000000")
assertEquals("二十亿零一", fmt.format(2000000001), "2000000001")
assertEquals("二十亿零二", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutCardinalFinancial() {
 val fmt = RBNFZh().spelloutCardinalFinancial
assertEquals("负壹", fmt.format(-1), "-1")
assertEquals("零", fmt.format(0), "0")
assertEquals("零点贰", fmt.format(0.2), "0.2")
assertEquals("零点贰叁肆伍", fmt.format(0.2345), "0.2345")
assertEquals("零点零贰", fmt.format(0.02), "0.02")
assertEquals("零点零贰壹叁", fmt.format(0.0213), "0.0213")
assertEquals("肆点柒伍壹", fmt.format(4.751), "4.751")
assertEquals("拾贰点零伍壹", fmt.format(12.051), "12.051")
assertEquals("拾叁点零贰伍壹", fmt.format(13.0251), "13.0251")
assertEquals("拾肆点零贰贰伍壹", fmt.format(14.02251), "14.02251")
assertEquals("壹", fmt.format(1), "1")
assertEquals("贰", fmt.format(2), "2")
assertEquals("叁", fmt.format(3), "3")
assertEquals("肆", fmt.format(4), "4")
assertEquals("伍", fmt.format(5), "5")
assertEquals("陆", fmt.format(6), "6")
assertEquals("柒", fmt.format(7), "7")
assertEquals("捌", fmt.format(8), "8")
assertEquals("玖", fmt.format(9), "9")
assertEquals("拾", fmt.format(10), "10")
assertEquals("拾壹", fmt.format(11), "11")
assertEquals("拾贰", fmt.format(12), "12")
assertEquals("拾叁", fmt.format(13), "13")
assertEquals("拾肆", fmt.format(14), "14")
assertEquals("拾伍", fmt.format(15), "15")
assertEquals("拾陆", fmt.format(16), "16")
assertEquals("拾柒", fmt.format(17), "17")
assertEquals("拾捌", fmt.format(18), "18")
assertEquals("拾玖", fmt.format(19), "19")
assertEquals("贰拾", fmt.format(20), "20")
assertEquals("贰拾壹", fmt.format(21), "21")
assertEquals("贰拾贰", fmt.format(22), "22")
assertEquals("贰拾叁", fmt.format(23), "23")
assertEquals("贰拾肆", fmt.format(24), "24")
assertEquals("贰拾伍", fmt.format(25), "25")
assertEquals("贰拾陆", fmt.format(26), "26")
assertEquals("贰拾柒", fmt.format(27), "27")
assertEquals("贰拾捌", fmt.format(28), "28")
assertEquals("贰拾玖", fmt.format(29), "29")
assertEquals("叁拾", fmt.format(30), "30")
assertEquals("叁拾壹", fmt.format(31), "31")
assertEquals("玖拾捌", fmt.format(98), "98")
assertEquals("玖拾玖", fmt.format(99), "99")
assertEquals("壹佰", fmt.format(100), "100")
assertEquals("壹佰零壹", fmt.format(101), "101")
assertEquals("壹佰零贰", fmt.format(102), "102")
assertEquals("玖佰玖拾捌", fmt.format(998), "998")
assertEquals("玖佰玖拾玖", fmt.format(999), "999")
assertEquals("壹仟", fmt.format(1000), "1000")
assertEquals("壹仟零壹", fmt.format(1001), "1001")
assertEquals("壹仟零贰", fmt.format(1002), "1002")
assertEquals("壹仟玖佰玖拾捌", fmt.format(1998), "1998")
assertEquals("壹仟玖佰玖拾玖", fmt.format(1999), "1999")
assertEquals("贰仟", fmt.format(2000), "2000")
assertEquals("贰仟零壹", fmt.format(2001), "2001")
assertEquals("贰仟零贰", fmt.format(2002), "2002")
assertEquals("玖仟玖佰玖拾捌", fmt.format(9998), "9998")
assertEquals("玖仟玖佰玖拾玖", fmt.format(9999), "9999")
assertEquals("壹万", fmt.format(10000), "10000")
assertEquals("壹万零壹", fmt.format(10001), "10001")
assertEquals("壹万零贰", fmt.format(10002), "10002")
assertEquals("拾万", fmt.format(100000), "100000")
assertEquals("拾万零壹", fmt.format(100001), "100001")
assertEquals("拾万零贰", fmt.format(100002), "100002")
assertEquals("贰拾万", fmt.format(200000), "200000")
assertEquals("贰拾万零壹", fmt.format(200001), "200001")
assertEquals("贰拾万零贰", fmt.format(200002), "200002")
assertEquals("壹佰万", fmt.format(1000000), "1000000")
assertEquals("壹佰万零壹", fmt.format(1000001), "1000001")
assertEquals("壹佰万零贰", fmt.format(1000002), "1000002")
assertEquals("贰佰万", fmt.format(2000000), "2000000")
assertEquals("贰佰万零壹", fmt.format(2000001), "2000001")
assertEquals("贰佰万零贰", fmt.format(2000002), "2000002")
assertEquals("壹仟万", fmt.format(10000000), "10000000")
assertEquals("壹仟万零壹", fmt.format(10000001), "10000001")
assertEquals("壹仟万零贰", fmt.format(10000002), "10000002")
assertEquals("贰仟万", fmt.format(20000000), "20000000")
assertEquals("贰仟万零壹", fmt.format(20000001), "20000001")
assertEquals("贰仟万零贰", fmt.format(20000002), "20000002")
assertEquals("壹亿", fmt.format(100000000), "100000000")
assertEquals("壹亿零壹", fmt.format(100000001), "100000001")
assertEquals("壹亿零贰", fmt.format(100000002), "100000002")
assertEquals("贰亿", fmt.format(200000000), "200000000")
assertEquals("贰亿零壹", fmt.format(200000001), "200000001")
assertEquals("贰亿零贰", fmt.format(200000002), "200000002")
assertEquals("拾亿", fmt.format(1000000000), "1000000000")
assertEquals("拾亿零壹", fmt.format(1000000001), "1000000001")
assertEquals("拾亿零贰", fmt.format(1000000002), "1000000002")
assertEquals("贰拾亿", fmt.format(2000000000), "2000000000")
assertEquals("贰拾亿零壹", fmt.format(2000000001), "2000000001")
assertEquals("贰拾亿零贰", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutNumbering() {
 val fmt = RBNFZh().spelloutNumbering
assertEquals("负一", fmt.format(-1), "-1")
assertEquals("〇", fmt.format(0), "0")
assertEquals("〇点二", fmt.format(0.2), "0.2")
assertEquals("〇点二三四五", fmt.format(0.2345), "0.2345")
assertEquals("〇点〇二", fmt.format(0.02), "0.02")
assertEquals("〇点〇二一三", fmt.format(0.0213), "0.0213")
assertEquals("四点七五一", fmt.format(4.751), "4.751")
assertEquals("十二点〇五一", fmt.format(12.051), "12.051")
assertEquals("十三点〇二五一", fmt.format(13.0251), "13.0251")
assertEquals("十四点〇二二五一", fmt.format(14.02251), "14.02251")
assertEquals("一", fmt.format(1), "1")
assertEquals("二", fmt.format(2), "2")
assertEquals("三", fmt.format(3), "3")
assertEquals("四", fmt.format(4), "4")
assertEquals("五", fmt.format(5), "5")
assertEquals("六", fmt.format(6), "6")
assertEquals("七", fmt.format(7), "7")
assertEquals("八", fmt.format(8), "8")
assertEquals("九", fmt.format(9), "9")
assertEquals("十", fmt.format(10), "10")
assertEquals("十一", fmt.format(11), "11")
assertEquals("十二", fmt.format(12), "12")
assertEquals("十三", fmt.format(13), "13")
assertEquals("十四", fmt.format(14), "14")
assertEquals("十五", fmt.format(15), "15")
assertEquals("十六", fmt.format(16), "16")
assertEquals("十七", fmt.format(17), "17")
assertEquals("十八", fmt.format(18), "18")
assertEquals("十九", fmt.format(19), "19")
assertEquals("二十", fmt.format(20), "20")
assertEquals("二十一", fmt.format(21), "21")
assertEquals("二十二", fmt.format(22), "22")
assertEquals("二十三", fmt.format(23), "23")
assertEquals("二十四", fmt.format(24), "24")
assertEquals("二十五", fmt.format(25), "25")
assertEquals("二十六", fmt.format(26), "26")
assertEquals("二十七", fmt.format(27), "27")
assertEquals("二十八", fmt.format(28), "28")
assertEquals("二十九", fmt.format(29), "29")
assertEquals("三十", fmt.format(30), "30")
assertEquals("三十一", fmt.format(31), "31")
assertEquals("九十八", fmt.format(98), "98")
assertEquals("九十九", fmt.format(99), "99")
assertEquals("一百", fmt.format(100), "100")
assertEquals("一百〇一", fmt.format(101), "101")
assertEquals("一百〇二", fmt.format(102), "102")
assertEquals("九百九十八", fmt.format(998), "998")
assertEquals("九百九十九", fmt.format(999), "999")
assertEquals("一千", fmt.format(1000), "1000")
assertEquals("一千〇一", fmt.format(1001), "1001")
assertEquals("一千〇二", fmt.format(1002), "1002")
assertEquals("一千九百九十八", fmt.format(1998), "1998")
assertEquals("一千九百九十九", fmt.format(1999), "1999")
assertEquals("二千", fmt.format(2000), "2000")
assertEquals("二千〇一", fmt.format(2001), "2001")
assertEquals("二千〇二", fmt.format(2002), "2002")
assertEquals("九千九百九十八", fmt.format(9998), "9998")
assertEquals("九千九百九十九", fmt.format(9999), "9999")
assertEquals("一万", fmt.format(10000), "10000")
assertEquals("一万〇一", fmt.format(10001), "10001")
assertEquals("一万〇二", fmt.format(10002), "10002")
assertEquals("十万", fmt.format(100000), "100000")
assertEquals("十万〇一", fmt.format(100001), "100001")
assertEquals("十万〇二", fmt.format(100002), "100002")
assertEquals("二十万", fmt.format(200000), "200000")
assertEquals("二十万〇一", fmt.format(200001), "200001")
assertEquals("二十万〇二", fmt.format(200002), "200002")
assertEquals("一百万", fmt.format(1000000), "1000000")
assertEquals("一百万〇一", fmt.format(1000001), "1000001")
assertEquals("一百万〇二", fmt.format(1000002), "1000002")
assertEquals("二百万", fmt.format(2000000), "2000000")
assertEquals("二百万〇一", fmt.format(2000001), "2000001")
assertEquals("二百万〇二", fmt.format(2000002), "2000002")
assertEquals("一千万", fmt.format(10000000), "10000000")
assertEquals("一千万〇一", fmt.format(10000001), "10000001")
assertEquals("一千万〇二", fmt.format(10000002), "10000002")
assertEquals("二千万", fmt.format(20000000), "20000000")
assertEquals("二千万〇一", fmt.format(20000001), "20000001")
assertEquals("二千万〇二", fmt.format(20000002), "20000002")
assertEquals("一亿", fmt.format(100000000), "100000000")
assertEquals("一亿〇一", fmt.format(100000001), "100000001")
assertEquals("一亿〇二", fmt.format(100000002), "100000002")
assertEquals("二亿", fmt.format(200000000), "200000000")
assertEquals("二亿〇一", fmt.format(200000001), "200000001")
assertEquals("二亿〇二", fmt.format(200000002), "200000002")
assertEquals("十亿", fmt.format(1000000000), "1000000000")
assertEquals("十亿〇一", fmt.format(1000000001), "1000000001")
assertEquals("十亿〇二", fmt.format(1000000002), "1000000002")
assertEquals("二十亿", fmt.format(2000000000), "2000000000")
assertEquals("二十亿〇一", fmt.format(2000000001), "2000000001")
assertEquals("二十亿〇二", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutNumberingDays() {
 val fmt = RBNFZh().spelloutNumberingDays
assertEquals("负初一", fmt.format(-1), "-1")
assertEquals("〇", fmt.format(0), "0")
assertEquals("0.2", fmt.format(0.2), "0.2")
assertEquals("0.2", fmt.format(0.2345), "0.2345")
assertEquals("0", fmt.format(0.02), "0.02")
assertEquals("0", fmt.format(0.0213), "0.0213")
assertEquals("4.8", fmt.format(4.751), "4.751")
assertEquals("12.1", fmt.format(12.051), "12.051")
assertEquals("13", fmt.format(13.0251), "13.0251")
assertEquals("14", fmt.format(14.02251), "14.02251")
assertEquals("初一", fmt.format(1), "1")
assertEquals("初二", fmt.format(2), "2")
assertEquals("初三", fmt.format(3), "3")
assertEquals("初四", fmt.format(4), "4")
assertEquals("初五", fmt.format(5), "5")
assertEquals("初六", fmt.format(6), "6")
assertEquals("初七", fmt.format(7), "7")
assertEquals("初八", fmt.format(8), "8")
assertEquals("初九", fmt.format(9), "9")
assertEquals("初十", fmt.format(10), "10")
assertEquals("十一", fmt.format(11), "11")
assertEquals("十二", fmt.format(12), "12")
assertEquals("十三", fmt.format(13), "13")
assertEquals("十四", fmt.format(14), "14")
assertEquals("十五", fmt.format(15), "15")
assertEquals("十六", fmt.format(16), "16")
assertEquals("十七", fmt.format(17), "17")
assertEquals("十八", fmt.format(18), "18")
assertEquals("十九", fmt.format(19), "19")
assertEquals("二十", fmt.format(20), "20")
assertEquals("廿一", fmt.format(21), "21")
assertEquals("廿二", fmt.format(22), "22")
assertEquals("廿三", fmt.format(23), "23")
assertEquals("廿四", fmt.format(24), "24")
assertEquals("廿五", fmt.format(25), "25")
assertEquals("廿六", fmt.format(26), "26")
assertEquals("廿七", fmt.format(27), "27")
assertEquals("廿八", fmt.format(28), "28")
assertEquals("廿九", fmt.format(29), "29")
assertEquals("三十", fmt.format(30), "30")
assertEquals("丗一", fmt.format(31), "31")
assertEquals("九十八", fmt.format(98), "98")
assertEquals("九十九", fmt.format(99), "99")
assertEquals("一百", fmt.format(100), "100")
assertEquals("一百〇一", fmt.format(101), "101")
assertEquals("一百〇二", fmt.format(102), "102")
assertEquals("九百九十八", fmt.format(998), "998")
assertEquals("九百九十九", fmt.format(999), "999")
assertEquals("一千", fmt.format(1000), "1000")
assertEquals("一千〇一", fmt.format(1001), "1001")
assertEquals("一千〇二", fmt.format(1002), "1002")
assertEquals("一千九百九十八", fmt.format(1998), "1998")
assertEquals("一千九百九十九", fmt.format(1999), "1999")
assertEquals("二千", fmt.format(2000), "2000")
assertEquals("二千〇一", fmt.format(2001), "2001")
assertEquals("二千〇二", fmt.format(2002), "2002")
assertEquals("九千九百九十八", fmt.format(9998), "9998")
assertEquals("九千九百九十九", fmt.format(9999), "9999")
assertEquals("一万", fmt.format(10000), "10000")
assertEquals("一万〇一", fmt.format(10001), "10001")
assertEquals("一万〇二", fmt.format(10002), "10002")
assertEquals("十万", fmt.format(100000), "100000")
assertEquals("十万〇一", fmt.format(100001), "100001")
assertEquals("十万〇二", fmt.format(100002), "100002")
assertEquals("二十万", fmt.format(200000), "200000")
assertEquals("二十万〇一", fmt.format(200001), "200001")
assertEquals("二十万〇二", fmt.format(200002), "200002")
assertEquals("一百万", fmt.format(1000000), "1000000")
assertEquals("一百万〇一", fmt.format(1000001), "1000001")
assertEquals("一百万〇二", fmt.format(1000002), "1000002")
assertEquals("二百万", fmt.format(2000000), "2000000")
assertEquals("二百万〇一", fmt.format(2000001), "2000001")
assertEquals("二百万〇二", fmt.format(2000002), "2000002")
assertEquals("一千万", fmt.format(10000000), "10000000")
assertEquals("一千万〇一", fmt.format(10000001), "10000001")
assertEquals("一千万〇二", fmt.format(10000002), "10000002")
assertEquals("二千万", fmt.format(20000000), "20000000")
assertEquals("二千万〇一", fmt.format(20000001), "20000001")
assertEquals("二千万〇二", fmt.format(20000002), "20000002")
assertEquals("一亿", fmt.format(100000000), "100000000")
assertEquals("一亿〇一", fmt.format(100000001), "100000001")
assertEquals("一亿〇二", fmt.format(100000002), "100000002")
assertEquals("二亿", fmt.format(200000000), "200000000")
assertEquals("二亿〇一", fmt.format(200000001), "200000001")
assertEquals("二亿〇二", fmt.format(200000002), "200000002")
assertEquals("十亿", fmt.format(1000000000), "1000000000")
assertEquals("十亿〇一", fmt.format(1000000001), "1000000001")
assertEquals("十亿〇二", fmt.format(1000000002), "1000000002")
assertEquals("二十亿", fmt.format(2000000000), "2000000000")
assertEquals("二十亿〇一", fmt.format(2000000001), "2000000001")
assertEquals("二十亿〇二", fmt.format(2000000002), "2000000002")
  }
  @Test
  fun spelloutNumberingYear() {
 val fmt = RBNFZh().spelloutNumberingYear
// nonsense assertEquals("负一", fmt.format(-1), "-1")
// nonsense assertEquals("〇", fmt.format(0), "0")
// nonsense assertEquals("0.2", fmt.format(0.2), "0.2")
// nonsense assertEquals("0.2", fmt.format(0.2345), "0.2345")
// nonsense assertEquals("0.0", fmt.format(0.02), "0.02")
// nonsense assertEquals("0.0", fmt.format(0.0213), "0.0213")
// nonsense assertEquals("4.8", fmt.format(4.751), "4.751")
// nonsense assertEquals("12.1", fmt.format(12.051), "12.051")
// nonsense assertEquals("13.0", fmt.format(13.0251), "13.0251")
// nonsense assertEquals("14.0", fmt.format(14.02251), "14.02251")
assertEquals("一", fmt.format(1), "1")
assertEquals("二", fmt.format(2), "2")
assertEquals("三", fmt.format(3), "3")
assertEquals("四", fmt.format(4), "4")
assertEquals("五", fmt.format(5), "5")
assertEquals("六", fmt.format(6), "6")
assertEquals("七", fmt.format(7), "7")
assertEquals("八", fmt.format(8), "8")
assertEquals("九", fmt.format(9), "9")
assertEquals("十", fmt.format(10), "10")
assertEquals("十一", fmt.format(11), "11")
assertEquals("十二", fmt.format(12), "12")
assertEquals("十三", fmt.format(13), "13")
assertEquals("十四", fmt.format(14), "14")
assertEquals("十五", fmt.format(15), "15")
assertEquals("十六", fmt.format(16), "16")
assertEquals("十七", fmt.format(17), "17")
assertEquals("十八", fmt.format(18), "18")
assertEquals("十九", fmt.format(19), "19")
assertEquals("二十", fmt.format(20), "20")
assertEquals("二十一", fmt.format(21), "21")
assertEquals("二十二", fmt.format(22), "22")
assertEquals("二十三", fmt.format(23), "23")
assertEquals("二十四", fmt.format(24), "24")
assertEquals("二十五", fmt.format(25), "25")
assertEquals("二十六", fmt.format(26), "26")
assertEquals("二十七", fmt.format(27), "27")
assertEquals("二十八", fmt.format(28), "28")
assertEquals("二十九", fmt.format(29), "29")
assertEquals("三十", fmt.format(30), "30")
assertEquals("三十一", fmt.format(31), "31")
assertEquals("九十八", fmt.format(98), "98")
assertEquals("九十九", fmt.format(99), "99")
assertEquals("一百", fmt.format(100), "100")
assertEquals("一百〇一", fmt.format(101), "101")
assertEquals("一百〇二", fmt.format(102), "102")
assertEquals("九百九十八", fmt.format(998), "998")
assertEquals("九百九十九", fmt.format(999), "999")
assertEquals("一〇〇〇", fmt.format(1000), "1000")
assertEquals("一〇〇一", fmt.format(1001), "1001")
assertEquals("一〇〇二", fmt.format(1002), "1002")
assertEquals("一九九八", fmt.format(1998), "1998")
assertEquals("一九九九", fmt.format(1999), "1999")
assertEquals("二〇〇〇", fmt.format(2000), "2000")
assertEquals("二〇〇一", fmt.format(2001), "2001")
assertEquals("二〇〇二", fmt.format(2002), "2002")
assertEquals("九九九八", fmt.format(9998), "9998")
assertEquals("九九九九", fmt.format(9999), "9999")
assertEquals("一万", fmt.format(10000), "10000")
assertEquals("一万〇一", fmt.format(10001), "10001")
assertEquals("一万〇二", fmt.format(10002), "10002")
assertEquals("十万", fmt.format(100000), "100000")
assertEquals("十万〇一", fmt.format(100001), "100001")
assertEquals("十万〇二", fmt.format(100002), "100002")
assertEquals("二十万", fmt.format(200000), "200000")
assertEquals("二十万〇一", fmt.format(200001), "200001")
assertEquals("二十万〇二", fmt.format(200002), "200002")
assertEquals("一百万", fmt.format(1000000), "1000000")
assertEquals("一百万〇一", fmt.format(1000001), "1000001")
assertEquals("一百万〇二", fmt.format(1000002), "1000002")
assertEquals("二百万", fmt.format(2000000), "2000000")
assertEquals("二百万〇一", fmt.format(2000001), "2000001")
assertEquals("二百万〇二", fmt.format(2000002), "2000002")
assertEquals("一千万", fmt.format(10000000), "10000000")
assertEquals("一千万〇一", fmt.format(10000001), "10000001")
assertEquals("一千万〇二", fmt.format(10000002), "10000002")
assertEquals("二千万", fmt.format(20000000), "20000000")
assertEquals("二千万〇一", fmt.format(20000001), "20000001")
assertEquals("二千万〇二", fmt.format(20000002), "20000002")
assertEquals("一亿", fmt.format(100000000), "100000000")
assertEquals("一亿〇一", fmt.format(100000001), "100000001")
assertEquals("一亿〇二", fmt.format(100000002), "100000002")
assertEquals("二亿", fmt.format(200000000), "200000000")
assertEquals("二亿〇一", fmt.format(200000001), "200000001")
assertEquals("二亿〇二", fmt.format(200000002), "200000002")
assertEquals("十亿", fmt.format(1000000000), "1000000000")
assertEquals("十亿〇一", fmt.format(1000000001), "1000000001")
assertEquals("十亿〇二", fmt.format(1000000002), "1000000002")
assertEquals("二十亿", fmt.format(2000000000), "2000000000")
assertEquals("二十亿〇一", fmt.format(2000000001), "2000000001")
assertEquals("二十亿〇二", fmt.format(2000000002), "2000000002")
  }
}
